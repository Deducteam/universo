# Universo: A tool to play with universes

Universo is a tool that aims to minimize the number of universes for a large class Cumulative Type Systems encoded in Dedukti. Its principle is really easy and relies on what is usually called "Typical ambiguity": concrete universes are elaborated to fresh variables and then the type checking of these terms generate constraints that should be solved. Universo works in four steps:

1 - First, terms are elaborated (independently from the theory, see below)
2 - Terms are type checked. The type checking generates constraints.
3 - Constraints are solved via a SMT Solver (currently only Z3 is used)
4 - We reconstruct the terms via the solution found by Z3

By default, Universo tries to minimize the number of Universes needed, but it can also be used to go from an impredicative CTS to a predicative one. By doing so, we loose the completeness of the step 3: the SMT might failed to find a solution.

# Dependencies

Compiling Universo is not standard (yet). It requires:

- Dune
- Using Dedukti on branch `typing-functor`
- Using Dkmeta (compiled for the branch above)

The branch will eventually be merge soon.

# Compilation

Just use `make`.

# Usage

Using `Universo` is also fairly complicated because of it is very generic. TOOO.