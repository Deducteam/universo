(; This file was automatically generated from Matita. ;)

def decidable_mem_nat :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               (__ : cic.Univ cic.prop => matita_basics_logic.decidable __)
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ : cic.Term (cic.type cic.z) H =>
                   __1 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.mem
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                     __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    n l))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      l :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            matita_basics_lists_list.list
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                matita_arithmetics_nat.nat)) =>
      matita_basics_lists_list.list_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat)
        (_x_716 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         cic.lift cic.prop cic.prop cic.I
           ((__ : cic.Univ cic.prop => matita_basics_logic.decidable __)
              ((H : cic.Univ (cic.type cic.z) =>
                __ : cic.Term (cic.type cic.z) H =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 n _x_716)))
        (matita_basics_logic.or_intror
           ((H : cic.Univ (cic.type cic.z) =>
             __ : cic.Term (cic.type cic.z) H =>
             __1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
             matita_basics_lists_list.mem
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              n
              (matita_basics_lists_list.nil
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)))
           ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
              ((H : cic.Univ (cic.type cic.z) =>
                __ : cic.Term (cic.type cic.z) H =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 n
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat))))
           (matita_basics_logic.nmk
              ((H : cic.Univ (cic.type cic.z) =>
                __ : cic.Term (cic.type cic.z) H =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 n
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)))
              (matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  cic.lift cic.prop cic.prop cic.I matita_basics_logic.False))))
        (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         tl :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         Htl :
           cic.Term cic.prop
             ((__ : cic.Univ cic.prop => matita_basics_logic.decidable __)
                ((H : cic.Univ (cic.type cic.z) =>
                  __ : cic.Term (cic.type cic.z) H =>
                  __1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.mem
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                    __1)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   n tl)) =>
         matita_arithmetics_bounded_quantifiers.decidable_or
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              n a)
           ((H : cic.Univ (cic.type cic.z) =>
             __ : cic.Term (cic.type cic.z) H =>
             __1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
             matita_basics_lists_list.mem
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              n tl)
           (matita_arithmetics_nat.decidable_eq_nat n a) Htl)
        l.

def length_unique_le :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.unique
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 (__ :
                    cic.Term cic.prop
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.unique
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             x l)
                          (__1 :
                             cic.Term cic.prop
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l) =>
                           (__2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __3 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __2 __3) x n)))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l)
                               (__1 :
                                  cic.Term cic.prop
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __1 : cic.Term (cic.type cic.z) H =>
                                      __2 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __1 __2)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l) =>
                                (__2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __2 __3) x n))) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __2)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          l)
                       n)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.unique
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 (__ :
                    cic.Term cic.prop
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.unique
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             x l)
                          (__1 :
                             cic.Term cic.prop
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l) =>
                           (__2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __3 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __2 __3) x _x_365)))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l)
                               (__1 :
                                  cic.Term cic.prop
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __1 : cic.Term (cic.type cic.z) H =>
                                      __2 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __1 __2)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l) =>
                                (__2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __2 __3) x _x_365))) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __2)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          l)
                       _x_365)))))
        (_clearme :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         matita_basics_lists_list.match_list cic.prop
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           (__ :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)) =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((H : cic.Univ (cic.type cic.z) =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.unique
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 __)
              (__1 :
                 cic.Term cic.prop
                   ((H : cic.Univ (cic.type cic.z) =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.unique
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      __) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((H : cic.Univ (cic.type cic.z) =>
                         __2 : cic.Term (cic.type cic.z) H =>
                         __3 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H)
                           __2 __3)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          x __)
                       (__2 :
                          cic.Term cic.prop
                            ((H : cic.Univ (cic.type cic.z) =>
                              __2 : cic.Term (cic.type cic.z) H =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __2 __3)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               x __) =>
                        (__3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __4 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __3 __4) x
                          matita_arithmetics_nat.O)))
                 (__2 :
                    cic.Term cic.prop
                      (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                         matita_arithmetics_nat.nat
                         (x :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop cic.prop cic.I
                            ((H : cic.Univ (cic.type cic.z) =>
                              __2 : cic.Term (cic.type cic.z) H =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __2 __3)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               x __)
                            (__2 :
                               cic.Term cic.prop
                                 ((H : cic.Univ (cic.type cic.z) =>
                                   __2 : cic.Term (cic.type cic.z) H =>
                                   __3 :
                                     cic.Term (cic.type cic.z)
                                       (matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)) =>
                                   matita_basics_lists_list.mem
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)
                                     __2 __3)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    x __) =>
                             (__3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __4 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __3 __4) x
                               matita_arithmetics_nat.O))) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __3 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __3)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       __)
                    matita_arithmetics_nat.O)))
           (auto :
              cic.Term cic.prop
                ((H : cic.Univ (cic.type cic.z) =>
                  __ :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.unique
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.nil
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat))) =>
            auto' :
              cic.Term cic.prop
                (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                   matita_arithmetics_nat.nat
                   (x :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))
                      (__ :
                         cic.Term cic.prop
                           ((H : cic.Univ (cic.type cic.z) =>
                             __ : cic.Term (cic.type cic.z) H =>
                             __1 :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I H)) =>
                             matita_basics_lists_list.mem
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)
                               __ __1)
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              x
                              (matita_basics_lists_list.nil
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I matita_arithmetics_nat.nat))) =>
                       (__1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __1 __2) x
                         matita_arithmetics_nat.O))) =>
            matita_arithmetics_nat.le_n
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat))))
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            tl :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)) =>
            __ :
              cic.Term cic.prop
                ((H : cic.Univ (cic.type cic.z) =>
                  __ :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.unique
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.cons
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      a tl)) =>
            H :
              cic.Term cic.prop
                (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                   matita_arithmetics_nat.nat
                   (x :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      ((H : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Term (cic.type cic.z) H =>
                        __2 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __1 __2)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_basics_lists_list.cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            a tl))
                      (__1 :
                         cic.Term cic.prop
                           ((H : cic.Univ (cic.type cic.z) =>
                             __1 : cic.Term (cic.type cic.z) H =>
                             __2 :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I H)) =>
                             matita_basics_lists_list.mem
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)
                               __1 __2)
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              x
                              (matita_basics_lists_list.cons
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I matita_arithmetics_nat.nat)
                                 a tl)) =>
                       (__2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __3 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __2 __3) x
                         matita_arithmetics_nat.O))) =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               cic.lift cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          a tl))
                    matita_arithmetics_nat.O))
              (matita_basics_logic.absurd
                 ((__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2) a
                    matita_arithmetics_nat.O)
                 (H a
                    (matita_basics_logic.or_introl
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a a)
                       ((H1 : cic.Univ (cic.type cic.z) =>
                         __1 : cic.Term (cic.type cic.z) H1 =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H1)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H1)
                           __1 __2)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          a tl)
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a)))
                 (matita_arithmetics_nat.le_to_not_lt
                    matita_arithmetics_nat.O a
                    (matita_arithmetics_nat.le_O_n a))))
           _clearme)
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat))
                (l :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                           matita_arithmetics_nat.nat)) =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.unique
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      l)
                   (__ :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __ :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.unique
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           l) =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                         matita_arithmetics_nat.nat
                         (x :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop cic.prop cic.I
                            ((H : cic.Univ (cic.type cic.z) =>
                              __1 : cic.Term (cic.type cic.z) H =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __1 __2)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               x l)
                            (__1 :
                               cic.Term cic.prop
                                 ((H : cic.Univ (cic.type cic.z) =>
                                   __1 : cic.Term (cic.type cic.z) H =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       (matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)) =>
                                   matita_basics_lists_list.mem
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)
                                     __1 __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    x l) =>
                             (__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __2 __3) x m)))
                      (__1 :
                         cic.Term cic.prop
                           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                              matita_arithmetics_nat.nat
                              (x :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               cic.prod cic.prop cic.prop cic.prop cic.I
                                 ((H : cic.Univ (cic.type cic.z) =>
                                   __1 : cic.Term (cic.type cic.z) H =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       (matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)) =>
                                   matita_basics_lists_list.mem
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)
                                     __1 __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    x l)
                                 (__1 :
                                    cic.Term cic.prop
                                      ((H : cic.Univ (cic.type cic.z) =>
                                        __1 : cic.Term (cic.type cic.z) H =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            (matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I H)) =>
                                        matita_basics_lists_list.mem
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)
                                          __1 __2)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         x l) =>
                                  (__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __2 __3) x m))) =>
                       (_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __2)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l)
                         m)))) =>
         l :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         Huni :
           cic.Term cic.prop
             ((H : cic.Univ (cic.type cic.z) =>
               __ :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
               matita_basics_lists_list.unique
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l) =>
         Hmem :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      x l)
                   (__ :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __ : cic.Term (cic.type cic.z) H =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.mem
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __ __1)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           x l) =>
                    (__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __1 __2) x
                      (matita_arithmetics_nat.S m)))) =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.eqb m) l))
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.notb (matita_arithmetics_nat.eqb m x))
                    l)))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.plus
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.eqb m) l))
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_bool.notb
                               (matita_arithmetics_nat.eqb m x))
                            l)))
                   x_1) =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) x_1
                 (matita_arithmetics_nat.S m)))
           (matita_arithmetics_nat.transitive_le
              (matita_arithmetics_nat.plus
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.eqb m) l))
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l)))
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l)))
              (matita_arithmetics_nat.S m)
              (matita_arithmetics_nat.le_plus
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.eqb m) l))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l))
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l))
                 (matita_basics_lists_list.length_filter_eqb m l Huni)
                 (matita_arithmetics_nat.le_n
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m x))
                          l))))
              (matita_arithmetics_nat.le_S_S
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m x))
                          l)))
                 m
                 (Hind
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l)
                    (matita_basics_lists_list.unique_filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       Huni)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     memx :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_basics_lists_list.filter
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (x0 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_bool.notb
                                  (matita_arithmetics_nat.eqb m x0))
                               l)) =>
                     matita_basics_logic.match_Or cic.prop
                       (matita_arithmetics_nat.lt x m)
                       (matita_basics_logic.eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          x m)
                       (__ :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.Or _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) x m)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x m)) =>
                        (__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) x m)
                       (auto :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) x m) =>
                        auto)
                       (eqxm :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x m) =>
                        matita_basics_logic.False_ind
                          (_x_66 :
                             cic.Term cic.prop matita_basics_logic.False =>
                           cic.lift cic.prop cic.prop cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) x m))
                          (matita_basics_logic.absurd
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                x m)
                             eqxm
                             (matita_basics_logic.sym_not_eq
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                m x
                                (matita_arithmetics_nat.eqb_false_to_not_eq m
                                   x
                                   (matita_basics_bool.injective_notb
                                      (matita_arithmetics_nat.eqb m x)
                                      matita_basics_bool.false
                                      (matita_basics_lists_list.mem_filter_true
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m x0))
                                         x l memx))))))
                       (matita_arithmetics_nat.le_to_or_lt_eq x m
                          (matita_arithmetics_nat.le_S_S_to_le x m
                             (Hmem x
                                (matita_basics_lists_list.mem_filter
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_bool.notb
                                      (matita_arithmetics_nat.eqb m x0))
                                   x l memx))))))))
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              l)
           (matita_basics_lists_list.filter_length2
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.eqb m) l))
        n.

def eq_length_to_mem :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    (matita_arithmetics_nat.S n))
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l)
                         (matita_arithmetics_nat.S n)) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((H : cic.Univ (cic.type cic.z) =>
                      __1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)) =>
                      matita_basics_lists_list.unique
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                        __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    (__1 :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.unique
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((H : cic.Univ (cic.type cic.z) =>
                               __2 : cic.Term (cic.type cic.z) H =>
                               __3 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __2 __3)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                x l)
                             (__2 :
                                cic.Term cic.prop
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l) =>
                              (_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __3) x n)))
                       (__2 :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop cic.prop
                               cic.I matita_arithmetics_nat.nat
                               (x :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod cic.prop cic.prop cic.prop cic.I
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l)
                                  (__2 :
                                     cic.Term cic.prop
                                       ((H : cic.Univ (cic.type cic.z) =>
                                         __2 : cic.Term (cic.type cic.z) H =>
                                         __3 :
                                           cic.Term (cic.type cic.z)
                                             (matita_basics_lists_list.list
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) cic.I H)) =>
                                         matita_basics_lists_list.mem
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)
                                           __2 __3)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I
                                             matita_arithmetics_nat.nat)
                                          x l) =>
                                   (_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.le _n __3) x n))) =>
                        (H : cic.Univ (cic.type cic.z) =>
                         __3 : cic.Term (cic.type cic.z) H =>
                         __4 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H)
                           __3 __4)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          n l))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      l :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            matita_basics_lists_list.list
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                matita_arithmetics_nat.nat)) =>
      H1 :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             (matita_basics_lists_list.length
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l)
             (matita_arithmetics_nat.S n)) =>
      H2 :
        cic.Term cic.prop
          ((H : cic.Univ (cic.type cic.z) =>
            __ :
              cic.Term (cic.type cic.z)
                (matita_basics_lists_list.list
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
            matita_basics_lists_list.unique
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                matita_arithmetics_nat.nat)
             l) =>
      H3 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
             matita_arithmetics_nat.nat
             (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod cic.prop cic.prop cic.prop cic.I
                ((H : cic.Univ (cic.type cic.z) =>
                  __ : cic.Term (cic.type cic.z) H =>
                  __1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.mem
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                    __1)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   x l)
                (__ :
                   cic.Term cic.prop
                     ((H : cic.Univ (cic.type cic.z) =>
                       __ : cic.Term (cic.type cic.z) H =>
                       __1 :
                         cic.Term (cic.type cic.z)
                           (matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)) =>
                       matita_basics_lists_list.mem
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                         __ __1)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                           matita_arithmetics_nat.nat)
                        x l) =>
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __1) x n))) =>
      matita_basics_logic.match_Or cic.prop
        (matita_basics_lists_list.mem
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           n l)
        (matita_basics_logic.Not
           (matita_basics_lists_list.mem
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              n l))
        (__ :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                ((H : cic.Univ (cic.type cic.z) =>
                  __ : cic.Term (cic.type cic.z) H =>
                  __1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.mem
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                    __1)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   n l)
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      n l))) =>
         (H : cic.Univ (cic.type cic.z) =>
          __1 : cic.Term (cic.type cic.z) H =>
          __2 :
            cic.Term (cic.type cic.z)
              (matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
          matita_basics_lists_list.mem
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __1 __2)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           n l)
        (auto :
           cic.Term cic.prop
             ((H : cic.Univ (cic.type cic.z) =>
               __ : cic.Term (cic.type cic.z) H =>
               __1 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
               matita_basics_lists_list.mem
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                n l) =>
         auto)
        (H4 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                ((H : cic.Univ (cic.type cic.z) =>
                  __ : cic.Term (cic.type cic.z) H =>
                  __1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                  matita_basics_lists_list.mem
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                    __1)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   n l)) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.lift cic.prop cic.prop cic.I
              ((H : cic.Univ (cic.type cic.z) =>
                __ : cic.Term (cic.type cic.z) H =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 n l))
           (matita_basics_logic.absurd
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.gt __ __1)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 n)
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x (matita_arithmetics_nat.S n)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.gt __1 __2) x n))
                 (matita_arithmetics_nat.le_n (matita_arithmetics_nat.S n))
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 H1)
              (matita_arithmetics_nat.le_to_not_lt
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 n
                 (matita_arithmetics_pidgeon_hole.length_unique_le n l H2
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     memx :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            x l) =>
                     matita_basics_logic.match_Or cic.prop
                       (matita_arithmetics_nat.lt x n)
                       (matita_basics_logic.eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          x n)
                       (__ :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.Or _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) x n)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x n)) =>
                        (__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) x n)
                       (auto :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) x n) =>
                        auto)
                       (Heq :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x n) =>
                        matita_arithmetics_nat.not_le_to_lt n x
                          (matita_basics_logic.not_to_not
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) n x)
                             ((H : cic.Univ (cic.type cic.z) =>
                               __ : cic.Term (cic.type cic.z) H =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __ __1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                n l)
                             (__ :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.le _n __) n x) =>
                              matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                x
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __1 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        x x_1) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((H : cic.Univ (cic.type cic.z) =>
                                     __1 : cic.Term (cic.type cic.z) H =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         (matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I H)) =>
                                     matita_basics_lists_list.mem
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I H)
                                       __1 __2)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      x_1 l))
                                memx n Heq)
                             H4))
                       (matita_arithmetics_nat.le_to_or_lt_eq x n (H3 x memx)))))))
        (matita_arithmetics_pidgeon_hole.decidable_mem_nat n l).

def eq_length_to_mem_all :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    n)
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l)
                         n) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((H : cic.Univ (cic.type cic.z) =>
                      __1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)) =>
                      matita_basics_lists_list.unique
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                        __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    (__1 :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.unique
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((H : cic.Univ (cic.type cic.z) =>
                               __2 : cic.Term (cic.type cic.z) H =>
                               __3 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __2 __3)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                x l)
                             (__2 :
                                cic.Term cic.prop
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l) =>
                              (__3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __4 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __3 __4) x n)))
                       (__2 :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop cic.prop
                               cic.I matita_arithmetics_nat.nat
                               (x :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod cic.prop cic.prop cic.prop cic.I
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l)
                                  (__2 :
                                     cic.Term cic.prop
                                       ((H : cic.Univ (cic.type cic.z) =>
                                         __2 : cic.Term (cic.type cic.z) H =>
                                         __3 :
                                           cic.Term (cic.type cic.z)
                                             (matita_basics_lists_list.list
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) cic.I H)) =>
                                         matita_basics_lists_list.mem
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)
                                           __2 __3)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I
                                             matita_arithmetics_nat.nat)
                                          x l) =>
                                   (__3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __4 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __3 __4) x n))) =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __4 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __3 __4) i n)
                             (__3 :
                                cic.Term cic.prop
                                  ((__3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __4 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __3 __4) i n) =>
                              (H : cic.Univ (cic.type cic.z) =>
                               __4 : cic.Term (cic.type cic.z) H =>
                               __5 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __4 __5)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i l))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    _x_365)
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l)
                         _x_365) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((H : cic.Univ (cic.type cic.z) =>
                      __1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)) =>
                      matita_basics_lists_list.unique
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                        __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l)
                    (__1 :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.unique
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            l) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((H : cic.Univ (cic.type cic.z) =>
                               __2 : cic.Term (cic.type cic.z) H =>
                               __3 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __2 __3)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                x l)
                             (__2 :
                                cic.Term cic.prop
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l) =>
                              (__3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __4 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __3 __4) x _x_365)))
                       (__2 :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop cic.prop
                               cic.I matita_arithmetics_nat.nat
                               (x :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod cic.prop cic.prop cic.prop cic.I
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __2 : cic.Term (cic.type cic.z) H =>
                                    __3 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __2 __3)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l)
                                  (__2 :
                                     cic.Term cic.prop
                                       ((H : cic.Univ (cic.type cic.z) =>
                                         __2 : cic.Term (cic.type cic.z) H =>
                                         __3 :
                                           cic.Term (cic.type cic.z)
                                             (matita_basics_lists_list.list
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) cic.I H)) =>
                                         matita_basics_lists_list.mem
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)
                                           __2 __3)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I
                                             matita_arithmetics_nat.nat)
                                          x l) =>
                                   (__3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __4 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __3 __4) x
                                     _x_365))) =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __4 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __3 __4) i _x_365)
                             (__3 :
                                cic.Term cic.prop
                                  ((__3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __4 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __3 __4) i
                                     _x_365) =>
                              (H : cic.Univ (cic.type cic.z) =>
                               __4 : cic.Term (cic.type cic.z) H =>
                               __5 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __4 __5)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i l))))))))
        (l :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                (matita_basics_lists_list.length
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   l)
                matita_arithmetics_nat.O) =>
         _0 :
           cic.Term cic.prop
             ((H : cic.Univ (cic.type cic.z) =>
               __1 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
               matita_basics_lists_list.unique
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __1)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l) =>
         _1 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __1 : cic.Term (cic.type cic.z) H =>
                     __2 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __1 __2)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      x l)
                   (__1 :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __1 : cic.Term (cic.type cic.z) H =>
                          __2 :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.mem
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __1 __2)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           x l) =>
                    (__2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __3 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __2 __3) x
                      matita_arithmetics_nat.O))) =>
         i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         lti0 :
           cic.Term cic.prop
             ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __1 __2) i matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.lift cic.prop cic.prop cic.I
              ((H : cic.Univ (cic.type cic.z) =>
                __1 : cic.Term (cic.type cic.z) H =>
                __2 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __1
                  __2)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 i l))
           (matita_basics_logic.absurd
              ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __1 __2) i matita_arithmetics_nat.O)
              lti0 (matita_arithmetics_nat.not_le_Sn_O i)))
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat))
                (l :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                           matita_arithmetics_nat.nat)) =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l)
                      m)
                   (__ :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              matita_arithmetics_nat.nat)
                           (matita_basics_lists_list.length
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              l)
                           m) =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      ((H : cic.Univ (cic.type cic.z) =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.unique
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l)
                      (__1 :
                         cic.Term cic.prop
                           ((H : cic.Univ (cic.type cic.z) =>
                             __1 :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I H)) =>
                             matita_basics_lists_list.unique
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)
                               __1)
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              l) =>
                       cic.prod cic.prop cic.prop cic.prop cic.I
                         (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __2 : cic.Term (cic.type cic.z) H =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __2 __3)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l)
                               (__2 :
                                  cic.Term cic.prop
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __2 : cic.Term (cic.type cic.z) H =>
                                      __3 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __2 __3)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l) =>
                                (__3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __4 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __3 __4) x m)))
                         (__2 :
                            cic.Term cic.prop
                              (cic.prod (cic.type cic.z) cic.prop cic.prop
                                 cic.I matita_arithmetics_nat.nat
                                 (x :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  cic.prod cic.prop cic.prop cic.prop cic.I
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __2 : cic.Term (cic.type cic.z) H =>
                                      __3 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __2 __3)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l)
                                    (__2 :
                                       cic.Term cic.prop
                                         ((H : cic.Univ (cic.type cic.z) =>
                                           __2 :
                                             cic.Term (cic.type cic.z) H =>
                                           __3 :
                                             cic.Term (cic.type cic.z)
                                               (matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I H)) =>
                                           matita_basics_lists_list.mem
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)
                                             __2 __3)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            x l) =>
                                     (__3 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __4 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __3 __4) x m))) =>
                          cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((__3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __4 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __3 __4) i m)
                               (__3 :
                                  cic.Term cic.prop
                                    ((__3 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __4 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __3 __4) i m) =>
                                (H : cic.Univ (cic.type cic.z) =>
                                 __4 : cic.Term (cic.type cic.z) H =>
                                 __5 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __4 __5)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  i l))))))) =>
         l :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         H :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                (matita_basics_lists_list.length
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   l)
                (matita_arithmetics_nat.S m)) =>
         H1 :
           cic.Term cic.prop
             ((H1 : cic.Univ (cic.type cic.z) =>
               __ :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H1)) =>
               matita_basics_lists_list.unique
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H1) __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l) =>
         H2 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H2 : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H2 =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H2)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H2)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      x l)
                   (__ :
                      cic.Term cic.prop
                        ((H2 : cic.Univ (cic.type cic.z) =>
                          __ : cic.Term (cic.type cic.z) H2 =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H2)) =>
                          matita_basics_lists_list.mem
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H2)
                            __ __1)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           x l) =>
                    (__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __1 __2) x
                      (matita_arithmetics_nat.S m)))) =>
         i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         lei :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i
                (matita_arithmetics_nat.S m)) =>
         matita_basics_logic.match_Or cic.prop
           (matita_arithmetics_nat.lt (matita_arithmetics_nat.S i)
              (matita_arithmetics_nat.S m))
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S i) (matita_arithmetics_nat.S m))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      (matita_arithmetics_nat.S i)
                      (matita_arithmetics_nat.S m))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S i)
                      (matita_arithmetics_nat.S m))) =>
            (H3 : cic.Univ (cic.type cic.z) =>
             __1 : cic.Term (cic.type cic.z) H3 =>
             __2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)) =>
             matita_basics_lists_list.mem
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3) __1 __2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              i l)
           (leim :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1)
                   (matita_arithmetics_nat.S i) (matita_arithmetics_nat.S m)) =>
            matita_basics_lists_list.mem_filter
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.notb (matita_arithmetics_nat.eqb m i0))
              i l
              (matita_basics_logic.match_Or cic.prop
                 (matita_basics_logic.And
                    (matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       m l)
                    (matita_basics_logic.eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)))
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.eqb m) l)
                       (matita_basics_lists_list.cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          m
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)))))
                 (matita_basics_logic.And
                    (matita_basics_logic.Not
                       (matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          m l))
                    (matita_basics_logic.eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)))
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.eqb m) l)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat))))
                 (__ :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.Or _A _B)
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((H3 : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H3 =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H3)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m l)
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)))
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.eqb m) l)
                               (matita_basics_lists_list.cons
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  m
                                  (matita_basics_lists_list.nil
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)))))
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((_A : cic.Univ cic.prop =>
                              matita_basics_logic.Not _A)
                               ((H3 : cic.Univ (cic.type cic.z) =>
                                 __ : cic.Term (cic.type cic.z) H3 =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H3)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H3)
                                   __ __1)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  m l))
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)))
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.eqb m) l)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat))))) =>
                  (H3 : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Term (cic.type cic.z) H3 =>
                   __2 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             H3)) =>
                   matita_basics_lists_list.mem
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)
                     __1 __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    i
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (i0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m i0))
                       l))
                 (_clearme :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((H3 : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H3 =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H3)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m l)
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)))
                            (matita_basics_lists_list.filter
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.eqb m) l)
                            (matita_basics_lists_list.cons
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat))))) =>
                  matita_basics_logic.match_And cic.prop
                    ((H3 : cic.Univ (cic.type cic.z) =>
                      __ : cic.Term (cic.type cic.z) H3 =>
                      __1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)) =>
                      matita_basics_lists_list.mem
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)
                        __ __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       m l)
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)))
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.eqb m) l)
                       (matita_basics_lists_list.cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          m
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat))))
                    (__ :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((H3 : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H3 =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H3)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m l)
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)))
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.eqb m) l)
                               (matita_basics_lists_list.cons
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  m
                                  (matita_basics_lists_list.nil
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat))))) =>
                     (H3 : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Term (cic.type cic.z) H3 =>
                      __2 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)) =>
                      matita_basics_lists_list.mem
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)
                        __1 __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       i
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (i0 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m i0))
                          l))
                    (memm :
                       cic.Term cic.prop
                         ((H3 : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H3 =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H3)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m l) =>
                     Hfilter :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)))
                            (matita_basics_lists_list.filter
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.eqb m) l)
                            (matita_basics_lists_list.cons
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)))) =>
                     Hind
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (i0 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m i0))
                          l)
                       (matita_arithmetics_nat.injective_S
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.filter
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (i0 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.notb
                                   (matita_arithmetics_nat.eqb m i0))
                                l))
                          m
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                l)
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        l)
                                     x_1) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      (matita_basics_lists_list.length
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_basics_lists_list.filter
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_bool.notb
                                               (matita_arithmetics_nat.eqb m
                                                  i0))
                                            l)))
                                   x_1))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_basics_lists_list.filter
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.eqb m) l))
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_basics_lists_list.filter
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m x))
                                         l)))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus
                                           (matita_basics_lists_list.length
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.filter
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.eqb
                                                    m)
                                                 l))
                                           (matita_basics_lists_list.length
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.filter
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (x :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_bool.notb
                                                    (matita_arithmetics_nat.eqb
                                                       m x))
                                                 l)))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         (matita_basics_lists_list.length
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.filter
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (i0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_basics_bool.notb
                                                  (matita_arithmetics_nat.eqb
                                                     m i0))
                                               l)))
                                      x_1))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I _A))
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)))
                                   (matita_basics_lists_list.cons
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      m
                                      (matita_basics_lists_list.nil
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I
                                              matita_arithmetics_nat.nat)) =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) cic.I
                                                    matita_arithmetics_nat.nat)))
                                           x
                                           (matita_basics_lists_list.cons
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat)
                                              m
                                              (matita_basics_lists_list.nil
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) cic.I
                                                    matita_arithmetics_nat.nat)))) =>
                                    cic.lift cic.prop cic.prop cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_basics_lists_list.filter
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (i0 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_basics_bool.notb
                                                     (matita_arithmetics_nat.eqb
                                                        m i0))
                                                  l)))
                                         (matita_arithmetics_nat.plus
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               x)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_basics_lists_list.filter
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (x0 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_basics_bool.notb
                                                     (matita_arithmetics_nat.eqb
                                                        m x0))
                                                  l)))))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         (matita_basics_lists_list.length
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.filter
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (i0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_basics_bool.notb
                                                  (matita_arithmetics_nat.eqb
                                                     m i0))
                                               l))))
                                   (matita_basics_lists_list.filter
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.eqb m) l)
                                   Hfilter)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   l)
                                (matita_basics_lists_list.filter_length2
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.eqb m) l))
                             (matita_arithmetics_nat.S m) H))
                       (matita_basics_lists_list.unique_filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          l
                          (i0 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m i0))
                          H1)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        memx :
                          cic.Term cic.prop
                            ((H3 : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H3 =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H3)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               x
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (i0 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_bool.notb
                                     (matita_arithmetics_nat.eqb m i0))
                                  l)) =>
                        matita_basics_logic.match_Or cic.prop
                          (matita_arithmetics_nat.lt
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.S m))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.S m))
                          (__ :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.Or _A _B)
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1)
                                     (matita_arithmetics_nat.S x)
                                     (matita_arithmetics_nat.S m))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S x)
                                     (matita_arithmetics_nat.S m))) =>
                           (__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) x m)
                          (H3 :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  (matita_arithmetics_nat.S x)
                                  (matita_arithmetics_nat.S m)) =>
                           matita_arithmetics_nat.le_S_S_to_le
                             (matita_arithmetics_nat.S x) m H3)
                          (H3 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S x)
                                  (matita_arithmetics_nat.S m)) =>
                           matita_basics_logic.False_ind
                             (_x_66 :
                                cic.Term cic.prop matita_basics_logic.False =>
                              cic.lift cic.prop cic.prop cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x m))
                             (matita_basics_logic.absurd
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   m x)
                                (matita_arithmetics_nat.injective_S m x
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_basics_lists_list.length
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         l)
                                      (x0 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x0 (matita_arithmetics_nat.S x)))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_basics_lists_list.length
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            l)
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_basics_lists_list.length
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     matita_arithmetics_nat.nat)
                                                  l)
                                               x0))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               l))
                                         (matita_arithmetics_nat.S x)
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S m)
                                            (x0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S x)
                                                  x0))
                                            H3
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               l)
                                            H))
                                      (matita_arithmetics_nat.S m) H))
                                (matita_arithmetics_nat.eqb_false_to_not_eq m
                                   x
                                   (matita_basics_bool.injective_notb
                                      (matita_arithmetics_nat.eqb m x)
                                      matita_basics_bool.false
                                      (matita_basics_logic.eq_ind_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_basics_bool.bool)
                                         matita_basics_bool.true
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_basics_bool.bool =>
                                          __ :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    matita_basics_bool.bool)
                                                 x0 matita_basics_bool.true) =>
                                          cic.lift cic.prop cic.prop cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __1 :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __1)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_basics_bool.bool)
                                               x0
                                               (matita_basics_bool.notb
                                                  matita_basics_bool.false)))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I matita_basics_bool.bool)
                                            matita_basics_bool.true)
                                         (matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m x))
                                         (matita_basics_lists_list.mem_filter_true
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_bool.notb
                                               (matita_arithmetics_nat.eqb m
                                                  i0))
                                            x l memx))))))
                          (matita_arithmetics_nat.le_to_or_lt_eq
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.S m)
                             (H2 x
                                (matita_basics_lists_list.mem_filter
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (i0 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_bool.notb
                                      (matita_arithmetics_nat.eqb m i0))
                                   x l memx))))
                       i
                       (matita_arithmetics_nat.le_S_S_to_le
                          (matita_arithmetics_nat.S i) m leim))
                    _clearme)
                 (_clearme :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((_A : cic.Univ cic.prop =>
                           matita_basics_logic.Not _A)
                            ((H3 : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H3 =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H3)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m l))
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)))
                            (matita_basics_lists_list.filter
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.eqb m) l)
                            (matita_basics_lists_list.nil
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))) =>
                  matita_basics_logic.match_And cic.prop
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((H3 : cic.Univ (cic.type cic.z) =>
                         __ : cic.Term (cic.type cic.z) H3 =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H3)
                           __ __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          m l))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)))
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.eqb m) l)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)))
                    (__ :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((_A : cic.Univ cic.prop =>
                              matita_basics_logic.Not _A)
                               ((H3 : cic.Univ (cic.type cic.z) =>
                                 __ : cic.Term (cic.type cic.z) H3 =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H3)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H3)
                                   __ __1)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  m l))
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)))
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.eqb m) l)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)))) =>
                     (H3 : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Term (cic.type cic.z) H3 =>
                      __2 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)) =>
                      matita_basics_lists_list.mem
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)
                        __1 __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       i
                       (matita_basics_lists_list.filter
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (i0 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.notb
                             (matita_arithmetics_nat.eqb m i0))
                          l))
                    (H0 :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           matita_basics_logic.Not _A)
                            ((H3 : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H3 =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H3)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H3)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               m l)) =>
                     matita_basics_logic.False_ind
                       (_x_66 :
                          cic.Term cic.prop matita_basics_logic.False =>
                        cic.lift cic.prop cic.prop cic.I
                          (cic.prod cic.prop cic.prop cic.prop cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((_A : cic.Univ (cic.type cic.z) =>
                                     matita_basics_lists_list.list
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I _A))
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)))
                                (matita_basics_lists_list.filter
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.eqb m) l)
                                (matita_basics_lists_list.nil
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)))
                             (__ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I
                                              matita_arithmetics_nat.nat)))
                                     (matita_basics_lists_list.filter
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.eqb m) l)
                                     (matita_basics_lists_list.nil
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat))) =>
                              (H3 : cic.Univ (cic.type cic.z) =>
                               __1 : cic.Term (cic.type cic.z) H3 =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H3)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H3)
                                 __1 __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i
                                (matita_basics_lists_list.filter
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (i0 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_bool.notb
                                      (matita_arithmetics_nat.eqb m i0))
                                   l))))
                       (matita_basics_logic.absurd
                          ((H3 : cic.Univ (cic.type cic.z) =>
                            __ : cic.Term (cic.type cic.z) H3 =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H3)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H3)
                              __ __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             m l)
                          (matita_arithmetics_pidgeon_hole.eq_length_to_mem m
                             l
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   l)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_basics_lists_list.length
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         l)
                                      x))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      l))
                                (matita_arithmetics_nat.S m) H)
                             H1
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              memx :
                                cic.Term cic.prop
                                  ((H3 : cic.Univ (cic.type cic.z) =>
                                    __ : cic.Term (cic.type cic.z) H3 =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H3)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H3)
                                      __ __1)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     x l) =>
                              matita_arithmetics_nat.le_S_S_to_le x m
                                (H2 x memx)))
                          H0))
                    _clearme)
                 (matita_basics_lists_list.filter_eqb m l H1)))
           (eqi :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S i) (matita_arithmetics_nat.S m)) =>
            matita_arithmetics_pidgeon_hole.eq_length_to_mem i l
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S m)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x (matita_arithmetics_nat.S m)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          l)
                       x))
                 H (matita_arithmetics_nat.S i) eqi)
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S m)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x (matita_arithmetics_nat.S m)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((H3 : cic.Univ (cic.type cic.z) =>
                      __1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H3)) =>
                      matita_basics_lists_list.unique
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H3)
                        __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l))
                 H1 (matita_arithmetics_nat.S i) eqi)
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S m)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x (matita_arithmetics_nat.S m)) =>
                  cic.lift cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (x0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((H3 : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H3 =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H3)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H3)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             x0 l)
                          (__1 :
                             cic.Term cic.prop
                               ((H3 : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H3 =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H3)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H3)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x0 l) =>
                           (_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __2) x0 i))))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  Hx :
                    cic.Term cic.prop
                      ((H3 : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H3 =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H3)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             H3)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         x l) =>
                  matita_arithmetics_nat.le_S_S_to_le x i
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S m)
                       (x0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x0 (matita_arithmetics_nat.S m)) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __1)
                             (matita_arithmetics_nat.S x) x0))
                       (H2 x Hx) (matita_arithmetics_nat.S i) eqi))
                 (matita_arithmetics_nat.S i) eqi))
           (matita_arithmetics_nat.le_to_or_lt_eq
              (matita_arithmetics_nat.S i) (matita_arithmetics_nat.S m) lei))
        n.

def lt_length_to_not_mem :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.unique
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 (__ :
                    cic.Term cic.prop
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.unique
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             x l)
                          (__1 :
                             cic.Term cic.prop
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l) =>
                           (__2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __3 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __2 __3) x n)))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l)
                               (__1 :
                                  cic.Term cic.prop
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __1 : cic.Term (cic.type cic.z) H =>
                                      __2 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __1 __2)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l) =>
                                (__2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __2 __3) x n))) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __2 __3)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             l)
                          n)
                       (__2 :
                          cic.Term cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __2 __3)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  l)
                               n) =>
                        (A : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A
                                (__3 : cic.Term (cic.type cic.z) A =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_logic.ex
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A)
                           _P)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__3 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __4 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __3 __4) i n)
                                ((_A : cic.Univ cic.prop =>
                                  matita_basics_logic.Not _A)
                                   ((H : cic.Univ (cic.type cic.z) =>
                                     __3 : cic.Term (cic.type cic.z) H =>
                                     __4 :
                                       cic.Term (cic.type cic.z)
                                         (matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I H)) =>
                                     matita_basics_lists_list.mem
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I H)
                                       __3 __4)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      i l))))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.unique
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l)
                 (__ :
                    cic.Term cic.prop
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.unique
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         l) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             x l)
                          (__1 :
                             cic.Term cic.prop
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l) =>
                           (__2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __3 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __2 __3) x _x_365)))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                            matita_arithmetics_nat.nat
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop cic.prop cic.I
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __1 : cic.Term (cic.type cic.z) H =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __1 __2)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  x l)
                               (__1 :
                                  cic.Term cic.prop
                                    ((H : cic.Univ (cic.type cic.z) =>
                                      __1 : cic.Term (cic.type cic.z) H =>
                                      __2 :
                                        cic.Term (cic.type cic.z)
                                          (matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) cic.I H)) =>
                                      matita_basics_lists_list.mem
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)
                                        __1 __2)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       x l) =>
                                (__2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __2 __3) x _x_365))) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __2 __3)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             l)
                          _x_365)
                       (__2 :
                          cic.Term cic.prop
                            ((__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __2 __3)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  l)
                               _x_365) =>
                        (A : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A
                                (__3 : cic.Term (cic.type cic.z) A =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_logic.ex
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A)
                           _P)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__3 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __4 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __3 __4) i _x_365)
                                ((_A : cic.Univ cic.prop =>
                                  matita_basics_logic.Not _A)
                                   ((H : cic.Univ (cic.type cic.z) =>
                                     __3 : cic.Term (cic.type cic.z) H =>
                                     __4 :
                                       cic.Term (cic.type cic.z)
                                         (matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I H)) =>
                                     matita_basics_lists_list.mem
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I H)
                                       __3 __4)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      i l))))))))))
        (l :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         __ :
           cic.Term cic.prop
             ((H : cic.Univ (cic.type cic.z) =>
               __ :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
               matita_basics_lists_list.unique
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l) =>
         _0 :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __1 : cic.Term (cic.type cic.z) H =>
                     __2 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __1 __2)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      x l)
                   (__1 :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __1 : cic.Term (cic.type cic.z) H =>
                          __2 :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.mem
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __1 __2)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           x l) =>
                    (__2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __3 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __2 __3) x
                      matita_arithmetics_nat.O))) =>
         H :
           cic.Term cic.prop
             ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __1 __2)
                (matita_basics_lists_list.length
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   l)
                matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) i
                          matita_arithmetics_nat.O)
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((H1 : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H1 =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H1)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H1)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             i l))))))
           (matita_basics_logic.absurd
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_arithmetics_nat.S
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l))
                 matita_arithmetics_nat.O)
              H
              (matita_arithmetics_nat.not_le_Sn_O
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    l))))
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat))
                (l :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                           matita_arithmetics_nat.nat)) =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.unique
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      l)
                   (__ :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __ :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.unique
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           l) =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                         matita_arithmetics_nat.nat
                         (x :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop cic.prop cic.I
                            ((H : cic.Univ (cic.type cic.z) =>
                              __1 : cic.Term (cic.type cic.z) H =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __1 __2)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               x l)
                            (__1 :
                               cic.Term cic.prop
                                 ((H : cic.Univ (cic.type cic.z) =>
                                   __1 : cic.Term (cic.type cic.z) H =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       (matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)) =>
                                   matita_basics_lists_list.mem
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)
                                     __1 __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    x l) =>
                             (__2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __3 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __2 __3) x m)))
                      (__1 :
                         cic.Term cic.prop
                           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                              matita_arithmetics_nat.nat
                              (x :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               cic.prod cic.prop cic.prop cic.prop cic.I
                                 ((H : cic.Univ (cic.type cic.z) =>
                                   __1 : cic.Term (cic.type cic.z) H =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       (matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)) =>
                                   matita_basics_lists_list.mem
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)
                                     __1 __2)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    x l)
                                 (__1 :
                                    cic.Term cic.prop
                                      ((H : cic.Univ (cic.type cic.z) =>
                                        __1 : cic.Term (cic.type cic.z) H =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            (matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I H)) =>
                                        matita_basics_lists_list.mem
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I H)
                                          __1 __2)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         x l) =>
                                  (__2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __3 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __2 __3) x m))) =>
                       cic.prod cic.prop cic.prop cic.prop cic.I
                         ((__2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __3 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __2 __3)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               l)
                            m)
                         (__2 :
                            cic.Term cic.prop
                              ((__2 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                __3 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.lt __2 __3)
                                 (matita_basics_lists_list.length
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    l)
                                 m) =>
                          (A : cic.Univ (cic.type cic.z) =>
                           _P :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z)
                                  (cic.type cic.z) cic.I A
                                  (__3 : cic.Term (cic.type cic.z) A =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                           matita_basics_logic.ex
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             _P)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.lift cic.prop cic.prop cic.I
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((__3 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __4 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __3 __4) i m)
                                  ((_A : cic.Univ cic.prop =>
                                    matita_basics_logic.Not _A)
                                     ((H : cic.Univ (cic.type cic.z) =>
                                       __3 : cic.Term (cic.type cic.z) H =>
                                       __4 :
                                         cic.Term (cic.type cic.z)
                                           (matita_basics_lists_list.list
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I H)) =>
                                       matita_basics_lists_list.mem
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I H)
                                         __3 __4)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        i l))))))))) =>
         l :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)) =>
         Huni :
           cic.Term cic.prop
             ((H : cic.Univ (cic.type cic.z) =>
               __ :
                 cic.Term (cic.type cic.z)
                   (matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
               matita_basics_lists_list.unique
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                l) =>
         Hmem :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      x l)
                   (__ :
                      cic.Term cic.prop
                        ((H : cic.Univ (cic.type cic.z) =>
                          __ : cic.Term (cic.type cic.z) H =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              (matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)) =>
                          matita_basics_lists_list.mem
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)
                            __ __1)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              matita_arithmetics_nat.nat)
                           x l) =>
                    (__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __1 __2) x
                      (matita_arithmetics_nat.S m)))) =>
         Hlen :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1)
                (matita_basics_lists_list.length
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   l)
                (matita_arithmetics_nat.S m)) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.And
              (matita_basics_lists_list.mem
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 m l)
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)))
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.eqb m) l)
                 (matita_basics_lists_list.cons
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    m
                    (matita_basics_lists_list.nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)))))
           (matita_basics_logic.And
              (matita_basics_logic.Not
                 (matita_basics_lists_list.mem
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    m l))
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)))
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.eqb m) l)
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat))))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m l)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.eqb m) l)
                         (matita_basics_lists_list.cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m
                            (matita_basics_lists_list.nil
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))))
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((H : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m l))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.eqb m) l)
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat))))) =>
            (A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__1 : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop cic.I
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2) i
                       (matita_arithmetics_nat.S m))
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((H : cic.Univ (cic.type cic.z) =>
                         __1 : cic.Term (cic.type cic.z) H =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H)
                           __1 __2)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          i l)))))
           (_clearme :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      m l)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))
                      (matita_basics_lists_list.filter
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.eqb m) l)
                      (matita_basics_lists_list.cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat))))) =>
            matita_basics_logic.match_And cic.prop
              ((H : cic.Univ (cic.type cic.z) =>
                __ : cic.Term (cic.type cic.z) H =>
                __1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                matita_basics_lists_list.mem
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __ __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 m l)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    ((_A : cic.Univ (cic.type cic.z) =>
                      matita_basics_lists_list.list
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)))
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.eqb m) l)
                 (matita_basics_lists_list.cons
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    m
                    (matita_basics_lists_list.nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat))))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m l)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.eqb m) l)
                         (matita_basics_lists_list.cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m
                            (matita_basics_lists_list.nil
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat))))) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) i
                          (matita_arithmetics_nat.S m))
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             i l)))))
              (memm :
                 cic.Term cic.prop
                   ((H : cic.Univ (cic.type cic.z) =>
                     __ : cic.Term (cic.type cic.z) H =>
                     __1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_lists_list.list
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               H)) =>
                     matita_basics_lists_list.mem
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                       __ __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      m l) =>
               Hfilter :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))
                      (matita_basics_lists_list.filter
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.eqb m) l)
                      (matita_basics_lists_list.cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))) =>
               matita_basics_logic.match_ex cic.prop
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    (matita_basics_logic.And (matita_arithmetics_nat.lt i m)
                       (matita_basics_logic.Not
                          (matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             i
                             (matita_basics_lists_list.filter
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.notb
                                   (matita_arithmetics_nat.eqb m x))
                                l)))))
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A
                               (__ : cic.Term (cic.type cic.z) A =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        matita_basics_logic.ex
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          _P)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.lift cic.prop cic.prop cic.I
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) i m)
                               ((_A : cic.Univ cic.prop =>
                                 matita_basics_logic.Not _A)
                                  ((H : cic.Univ (cic.type cic.z) =>
                                    __ : cic.Term (cic.type cic.z) H =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        (matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I H)) =>
                                    matita_basics_lists_list.mem
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)
                                      __ __1)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     i
                                     (matita_basics_lists_list.filter
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (x :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_basics_bool.notb
                                           (matita_arithmetics_nat.eqb m x))
                                        l)))))) =>
                  (A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_logic.ex
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) i
                             (matita_arithmetics_nat.S m))
                          ((_A : cic.Univ cic.prop =>
                            matita_basics_logic.Not _A)
                             ((H : cic.Univ (cic.type cic.z) =>
                               __1 : cic.Term (cic.type cic.z) H =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __1 __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i l)))))
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _clearme0 :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) i m)
                         ((_A : cic.Univ cic.prop =>
                           matita_basics_logic.Not _A)
                            ((H : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               i
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (x0 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_bool.notb
                                     (matita_arithmetics_nat.eqb m x0))
                                  l)))) =>
                  matita_basics_logic.match_And cic.prop
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) i m)
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((H : cic.Univ (cic.type cic.z) =>
                         __ : cic.Term (cic.type cic.z) H =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H)
                           __ __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          i
                          (matita_basics_lists_list.filter
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (x0 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_bool.notb
                                (matita_arithmetics_nat.eqb m x0))
                             l)))
                    (__ :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) i m)
                            ((_A : cic.Univ cic.prop =>
                              matita_basics_logic.Not _A)
                               ((H : cic.Univ (cic.type cic.z) =>
                                 __ : cic.Term (cic.type cic.z) H =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     (matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I H)) =>
                                 matita_basics_lists_list.mem
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)
                                   __ __1)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  i
                                  (matita_basics_lists_list.filter
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     (x0 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_basics_bool.notb
                                        (matita_arithmetics_nat.eqb m x0))
                                     l)))) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A
                             (__1 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_logic.ex
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                        _P)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (i0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((__1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __1 __2) i0
                                (matita_arithmetics_nat.S m))
                             ((_A : cic.Univ cic.prop =>
                               matita_basics_logic.Not _A)
                                ((H : cic.Univ (cic.type cic.z) =>
                                  __1 : cic.Term (cic.type cic.z) H =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      (matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I H)) =>
                                  matita_basics_lists_list.mem
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I H)
                                    __1 __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   i0 l)))))
                    (ltim :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) i m) =>
                     memi :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           matita_basics_logic.Not _A)
                            ((H : cic.Univ (cic.type cic.z) =>
                              __ : cic.Term (cic.type cic.z) H =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I H)) =>
                              matita_basics_lists_list.mem
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H)
                                __ __1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               i
                               (matita_basics_lists_list.filter
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (x0 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_bool.notb
                                     (matita_arithmetics_nat.eqb m x0))
                                  l))) =>
                     matita_basics_logic.ex_intro
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (i0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) i0
                                (matita_arithmetics_nat.S m))
                             ((_A : cic.Univ cic.prop =>
                               matita_basics_logic.Not _A)
                                ((H : cic.Univ (cic.type cic.z) =>
                                  __ : cic.Term (cic.type cic.z) H =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      (matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I H)) =>
                                  matita_basics_lists_list.mem
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I H)
                                    __ __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   i0 l))))
                       i
                       (matita_basics_logic.conj
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) i
                             (matita_arithmetics_nat.S m))
                          ((_A : cic.Univ cic.prop =>
                            matita_basics_logic.Not _A)
                             ((H : cic.Univ (cic.type cic.z) =>
                               __ : cic.Term (cic.type cic.z) H =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __ __1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i l))
                          (matita_arithmetics_nat.le_S
                             (matita_arithmetics_nat.S i) m ltim)
                          (matita_basics_logic.not_to_not
                             ((H : cic.Univ (cic.type cic.z) =>
                               __ : cic.Term (cic.type cic.z) H =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __ __1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i l)
                             ((H : cic.Univ (cic.type cic.z) =>
                               __ : cic.Term (cic.type cic.z) H =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   (matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I H)) =>
                               matita_basics_lists_list.mem
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I H)
                                 __ __1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                i
                                (matita_basics_lists_list.filter
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_bool.notb
                                      (matita_arithmetics_nat.eqb m x0))
                                   l))
                             (matita_basics_lists_list.mem_filter_l
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (x0 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.notb
                                   (matita_arithmetics_nat.eqb m x0))
                                i l
                                (matita_basics_bool.injective_notb
                                   (matita_basics_bool.notb
                                      (matita_arithmetics_nat.eqb m i))
                                   matita_basics_bool.true
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_basics_bool.bool)
                                      (matita_arithmetics_nat.eqb m i)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_basics_bool.bool =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_basics_bool.bool)
                                              x
                                              (matita_arithmetics_nat.eqb m i)) =>
                                       cic.lift cic.prop cic.prop cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I matita_basics_bool.bool)
                                            x
                                            (matita_basics_bool.notb
                                               matita_basics_bool.true)))
                                      (matita_arithmetics_nat.not_eq_to_eqb_false
                                         m i
                                         (matita_basics_logic.sym_not_eq
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            i m
                                            (matita_arithmetics_nat.lt_to_not_eq
                                               i m ltim)))
                                      (matita_basics_bool.notb
                                         (matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m i)))
                                      (matita_basics_bool.notb_notb
                                         (matita_arithmetics_nat.eqb m i)))))
                             memi)))
                    _clearme0)
                 (Hind
                    (matita_basics_lists_list.filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       l)
                    (matita_basics_lists_list.unique_filter
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       l
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.notb
                          (matita_arithmetics_nat.eqb m x))
                       Huni)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     memx :
                       cic.Term cic.prop
                         ((H : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_basics_lists_list.filter
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (x0 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_bool.notb
                                  (matita_arithmetics_nat.eqb m x0))
                               l)) =>
                     matita_basics_logic.match_Or cic.prop
                       (matita_arithmetics_nat.lt
                          (matita_arithmetics_nat.S x)
                          (matita_arithmetics_nat.S m))
                       (matita_basics_logic.eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S x)
                          (matita_arithmetics_nat.S m))
                       (__ :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.Or _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  (matita_arithmetics_nat.S x)
                                  (matita_arithmetics_nat.S m))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S x)
                                  (matita_arithmetics_nat.S m))) =>
                        (__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) x m)
                       (H :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               (matita_arithmetics_nat.S x)
                               (matita_arithmetics_nat.S m)) =>
                        matita_arithmetics_nat.le_S_S_to_le
                          (matita_arithmetics_nat.S x) m H)
                       (H :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S x)
                               (matita_arithmetics_nat.S m)) =>
                        matita_basics_logic.False_ind
                          (_x_66 :
                             cic.Term cic.prop matita_basics_logic.False =>
                           cic.lift cic.prop cic.prop cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) x m))
                          (matita_basics_logic.absurd
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                m x)
                             (matita_arithmetics_nat.injective_S m x
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S m)
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S m) x0))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S m))
                                   (matita_arithmetics_nat.S x) H))
                             (matita_arithmetics_nat.eqb_false_to_not_eq m x
                                (matita_basics_bool.injective_notb
                                   (matita_arithmetics_nat.eqb m x)
                                   matita_basics_bool.false
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_basics_bool.bool)
                                      matita_basics_bool.true
                                      (x0 :
                                         cic.Term (cic.type cic.z)
                                           matita_basics_bool.bool =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_basics_bool.bool)
                                              x0 matita_basics_bool.true) =>
                                       cic.lift cic.prop cic.prop cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I matita_basics_bool.bool)
                                            x0
                                            (matita_basics_bool.notb
                                               matita_basics_bool.false)))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_basics_bool.bool)
                                         matita_basics_bool.true)
                                      (matita_basics_bool.notb
                                         (matita_arithmetics_nat.eqb m x))
                                      (matita_basics_lists_list.mem_filter_true
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m x0))
                                         x l memx))))))
                       (matita_arithmetics_nat.le_to_or_lt_eq
                          (matita_arithmetics_nat.S x)
                          (matita_arithmetics_nat.S m)
                          (Hmem x
                             (matita_basics_lists_list.mem_filter
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (x0 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.notb
                                   (matita_arithmetics_nat.eqb m x0))
                                x l memx))))
                    (matita_basics_logic.eq_ind
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.filter
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.eqb m) l))
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.filter
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.notb
                                   (matita_arithmetics_nat.eqb m x))
                                l)))
                       (x_1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.plus
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.filter
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.eqb m) l))
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.filter
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (x :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_basics_bool.notb
                                           (matita_arithmetics_nat.eqb m x))
                                        l)))
                               x_1) =>
                        cic.lift cic.prop cic.prop cic.I
                          (cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) x_1
                                (matita_arithmetics_nat.S m))
                             (__ :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) x_1
                                     (matita_arithmetics_nat.S m)) =>
                              (__1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __1 __2)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_lists_list.filter
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_bool.notb
                                         (matita_arithmetics_nat.eqb m x))
                                      l))
                                m)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_A : cic.Univ (cic.type cic.z) =>
                               matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I _A))
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)))
                          (matita_basics_lists_list.cons
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             m
                             (matita_basics_lists_list.nil
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)))
                          (x :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)) =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I _A))
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)))
                                  x
                                  (matita_basics_lists_list.cons
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     m
                                     (matita_basics_lists_list.nil
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)))) =>
                           cic.lift cic.prop cic.prop cic.I
                             (cic.prod cic.prop cic.prop cic.prop cic.I
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2)
                                   (matita_arithmetics_nat.plus
                                      (matita_basics_lists_list.length
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         x)
                                      (matita_basics_lists_list.length
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_basics_lists_list.filter
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (x0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_bool.notb
                                               (matita_arithmetics_nat.eqb m
                                                  x0))
                                            l)))
                                   (matita_arithmetics_nat.S m))
                                (__1 :
                                   cic.Term cic.prop
                                     ((__1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __2 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __1 __2)
                                        (matita_arithmetics_nat.plus
                                           (matita_basics_lists_list.length
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat)
                                              x)
                                           (matita_basics_lists_list.length
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.filter
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) cic.I
                                                    matita_arithmetics_nat.nat)
                                                 (x0 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_bool.notb
                                                    (matita_arithmetics_nat.eqb
                                                       m x0))
                                                 l)))
                                        (matita_arithmetics_nat.S m)) =>
                                 (__2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __3 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __2 __3)
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_basics_lists_list.filter
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_bool.notb
                                            (matita_arithmetics_nat.eqb m x0))
                                         l))
                                   m)))
                          (H :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  (matita_arithmetics_nat.plus
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_basics_lists_list.cons
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I
                                              matita_arithmetics_nat.nat)
                                           m
                                           (matita_basics_lists_list.nil
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) cic.I
                                                 matita_arithmetics_nat.nat))))
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           matita_arithmetics_nat.nat)
                                        (matita_basics_lists_list.filter
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) cic.I
                                              matita_arithmetics_nat.nat)
                                           (x :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_basics_bool.notb
                                              (matita_arithmetics_nat.eqb m x))
                                           l)))
                                  (matita_arithmetics_nat.S m)) =>
                           matita_arithmetics_nat.le_S_S_to_le
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_lists_list.filter
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_bool.notb
                                         (matita_arithmetics_nat.eqb m x))
                                      l)))
                             m H)
                          (matita_basics_lists_list.filter
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.eqb m) l)
                          Hfilter)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          l)
                       (matita_basics_lists_list.filter_length2
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.eqb m) l)
                       Hlen)))
              _clearme)
           (_clearme :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m l))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))
                      (matita_basics_lists_list.filter
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.eqb m) l)
                      (matita_basics_lists_list.nil
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)))) =>
            matita_basics_logic.match_And cic.prop
              ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((H : cic.Univ (cic.type cic.z) =>
                   __ : cic.Term (cic.type cic.z) H =>
                   __1 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)) =>
                   matita_basics_lists_list.mem
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H) __
                     __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    m l))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    ((_A : cic.Univ (cic.type cic.z) =>
                      matita_basics_lists_list.list
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I _A))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)))
                 (matita_basics_lists_list.filter
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.eqb m) l)
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((H : cic.Univ (cic.type cic.z) =>
                           __ : cic.Term (cic.type cic.z) H =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               (matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I H)) =>
                           matita_basics_lists_list.mem
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I H)
                             __ __1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            m l))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)))
                         (matita_basics_lists_list.filter
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.eqb m) l)
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) i
                          (matita_arithmetics_nat.S m))
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((H : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             i l)))))
              (H :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((H : cic.Univ (cic.type cic.z) =>
                        __ : cic.Term (cic.type cic.z) H =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I H)) =>
                        matita_basics_lists_list.mem
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I H)
                          __ __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         m l)) =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)))
                      (matita_basics_lists_list.filter
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.eqb m) l)
                      (matita_basics_lists_list.nil
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat))) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) i
                          (matita_arithmetics_nat.S m))
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((H1 : cic.Univ (cic.type cic.z) =>
                            __1 : cic.Term (cic.type cic.z) H1 =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I H1)) =>
                            matita_basics_lists_list.mem
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I H1)
                              __1 __2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             i l))))
                 m
                 (matita_basics_logic.conj
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2) m
                       (matita_arithmetics_nat.S m))
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((H1 : cic.Univ (cic.type cic.z) =>
                         __1 : cic.Term (cic.type cic.z) H1 =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I H1)) =>
                         matita_basics_lists_list.mem
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              H1)
                           __1 __2)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          m l))
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) m
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus m
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) m
                             (matita_arithmetics_nat.S m)))
                       (matita_arithmetics_nat.lt_plus_Sn_r m
                          matita_arithmetics_nat.O matita_arithmetics_nat.O)
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          m
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __1)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) m
                                      (matita_arithmetics_nat.plus x
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) m
                                      (matita_arithmetics_nat.S m)))))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S m)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __1)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((__1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __1 __2) m
                                         x))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((__1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __1 __2) m
                                         (matita_arithmetics_nat.S m)))))
                             (matita_basics_logic.refl
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) m
                                      (matita_arithmetics_nat.S m))))
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus m
                                   matita_arithmetics_nat.O)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __1 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S x)
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (matita_arithmetics_nat.plus_n_Sm m
                                   matita_arithmetics_nat.O)
                                m (matita_arithmetics_nat.plus_n_O m)))
                          (matita_arithmetics_nat.plus m
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.plus_n_O m)))
                    H))
              _clearme)
           (matita_basics_lists_list.filter_eqb m l Huni))
        n.


