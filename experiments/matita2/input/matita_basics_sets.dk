(; This file was automatically generated from Matita. ;)

def empty_set :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              A
              (_a : cic.Term (cic.type cic.z) A =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      a : cic.Term (cic.type cic.z) A => matita_basics_logic.False.

def singleton :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           (cic.univ (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
           (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            cic.prod (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I A
              (_x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               cic.prod (cic.type (cic.s (cic.s cic.z))) (cic.type cic.z)
                 (cic.type (cic.s (cic.s cic.z))) cic.I A
                 (_a : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
      x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
      a : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
      (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
       matita_basics_logic.eq
         (cic.lift (cic.type (cic.s (cic.s cic.z)))
            (cic.type (cic.s (cic.s cic.z))) cic.I A1)
         _x __)
        (cic.lift (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I A)
        x a.

def union :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (_Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      Q :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) A =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
        ((__ : cic.Term (cic.type cic.z) A => P __) a)
        ((__ : cic.Term (cic.type cic.z) A => Q __) a).

def intersection :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (_Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      Q :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) A =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
        ((__ : cic.Term (cic.type cic.z) A => P __) a)
        ((__ : cic.Term (cic.type cic.z) A => Q __) a).

def complement :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (_w : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
        ((__ : cic.Term (cic.type cic.z) U => A __) w).

def substraction :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (_B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (_w : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
        ((__ : cic.Term (cic.type cic.z) U => A __) w)
        ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((__ : cic.Term (cic.type cic.z) U => B __) w)).

def subset :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (_Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      Q :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod cic.prop cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) A => P __) a)
           (__ :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A => P __) a) =>
            (__1 : cic.Term (cic.type cic.z) A => Q __1) a)).

def eqP :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (_P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (_Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      Q :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         (_A : cic.Univ cic.prop =>
          _B : cic.Univ cic.prop => matita_basics_logic.iff _A _B)
           ((__ : cic.Term (cic.type cic.z) A => P __) a)
           ((__ : cic.Term (cic.type cic.z) A => Q __) a)).

def eqP_sym :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_sets.eqP
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __))
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __)))
                    (__ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type cic.z) =>
                           _P :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z)
                                  (cic.type cic.z) cic.I A1
                                  (__ : cic.Term (cic.type cic.z) A1 =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                           _Q :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z)
                                  (cic.type cic.z) cic.I A1
                                  (__ : cic.Term (cic.type cic.z) A1 =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                           matita_basics_sets.eqP
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)
                             _P _Q)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               U)
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.lift cic.prop cic.prop cic.I (A __))
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.lift cic.prop cic.prop cic.I (B __))) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_sets.eqP
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __1))
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1)))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqAB :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (A __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_sym
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        ((__ : cic.Term (cic.type cic.z) U => B __) a) (eqAB a).

def eqP_trans :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (A __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (B __))) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            matita_basics_sets.eqP
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (B __1))
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (C __1)))
                          (__1 :
                             cic.Term cic.prop
                               ((A1 : cic.Univ (cic.type cic.z) =>
                                 _P :
                                   cic.Term (cic.type cic.z)
                                     (cic.prod (cic.type cic.z)
                                        (cic.type cic.z) (cic.type cic.z)
                                        cic.I A1
                                        (__1 :
                                           cic.Term (cic.type cic.z) A1 =>
                                         cic.univ cic.prop (cic.type cic.z)
                                           cic.I)) =>
                                 _Q :
                                   cic.Term (cic.type cic.z)
                                     (cic.prod (cic.type cic.z)
                                        (cic.type cic.z) (cic.type cic.z)
                                        cic.I A1
                                        (__1 :
                                           cic.Term (cic.type cic.z) A1 =>
                                         cic.univ cic.prop (cic.type cic.z)
                                           cic.I)) =>
                                 matita_basics_sets.eqP
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)
                                   _P _Q)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I U)
                                  (__1 : cic.Term (cic.type cic.z) U =>
                                   cic.lift cic.prop cic.prop cic.I (B __1))
                                  (__1 : cic.Term (cic.type cic.z) U =>
                                   cic.lift cic.prop cic.prop cic.I (C __1))) =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__2 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__2 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            matita_basics_sets.eqP
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__2 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (A __2))
                             (__2 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (C __2)))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqAB :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (A __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))) =>
      eqBC :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_trans
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        ((__ : cic.Term (cic.type cic.z) U => B __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a) (eqAB a) (eqBC a).

def eqP_union_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (A __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.union
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.union
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqAB :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (A __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_or_r
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a)
        ((__ : cic.Term (cic.type cic.z) U => B __) a) (eqAB a).

def eqP_union_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (B __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.union
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.union
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __2))
                                __1))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqBC :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_or_l
        ((__ : cic.Term (cic.type cic.z) U => B __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a)
        ((__ : cic.Term (cic.type cic.z) U => A __) a) (eqBC a).

def eqP_intersect_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (A __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.intersection
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.intersection
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqAB :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (A __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_and_r
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a)
        ((__ : cic.Term (cic.type cic.z) U => B __) a) (eqAB a).

def eqP_intersect_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (B __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.intersection
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __2))
                                __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _Q :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               __2 : cic.Term (cic.type cic.z) A1 =>
                               matita_basics_sets.intersection
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 _P _Q __2)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __2))
                                (__2 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __2))
                                __1))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqBC :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_and_l
        ((__ : cic.Term (cic.type cic.z) U => B __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a)
        ((__ : cic.Term (cic.type cic.z) U => A __) a) (eqBC a).

def eqP_substract_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (A __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (_w : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((U1 : cic.Univ (cic.type cic.z) =>
                               _A :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _B :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _w1 : cic.Term (cic.type cic.z) U1 =>
                               matita_basics_sets.substraction
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I U1)
                                 _A _B _w1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __1))
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __1))
                                _w))
                          (_w : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((U1 : cic.Univ (cic.type cic.z) =>
                               _A :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _B :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _w1 : cic.Term (cic.type cic.z) U1 =>
                               matita_basics_sets.substraction
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I U1)
                                 _A _B _w1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __1))
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __1))
                                _w))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqAB :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (A __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_and_r
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        ((__ : cic.Term (cic.type cic.z) U => C __) a)
        ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((__ : cic.Term (cic.type cic.z) U => B __) a))
        (eqAB a).

def eqP_substract_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__ : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __)))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              _Q :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     (cic.type cic.z) cic.I A1
                                     (__ : cic.Term (cic.type cic.z) A1 =>
                                      cic.univ cic.prop (cic.type cic.z)
                                        cic.I)) =>
                              matita_basics_sets.eqP
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _P _Q)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I U)
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (B __))
                               (__ : cic.Term (cic.type cic.z) U =>
                                cic.lift cic.prop cic.prop cic.I (C __))) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         matita_basics_sets.eqP
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (_w : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((U1 : cic.Univ (cic.type cic.z) =>
                               _A :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _B :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _w1 : cic.Term (cic.type cic.z) U1 =>
                               matita_basics_sets.substraction
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I U1)
                                 _A _B _w1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __1))
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __1))
                                _w))
                          (_w : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((U1 : cic.Univ (cic.type cic.z) =>
                               _A :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _B :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _w1 : cic.Term (cic.type cic.z) U1 =>
                               matita_basics_sets.substraction
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I U1)
                                 _A _B _w1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (A __1))
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (C __1))
                                _w))))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      eqBC :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            _Q :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1
                   (__ : cic.Term (cic.type cic.z) A1 =>
                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
            matita_basics_sets.eqP
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (B __))
             (__ : cic.Term (cic.type cic.z) U =>
              cic.lift cic.prop cic.prop cic.I (C __))) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.iff_and_l
        ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((__ : cic.Term (cic.type cic.z) U => B __) a))
        ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((__ : cic.Term (cic.type cic.z) U => C __) a))
        ((__ : cic.Term (cic.type cic.z) U => A __) a)
        (matita_basics_logic.iff_not
           ((__ : cic.Term (cic.type cic.z) U => B __) a)
           ((__ : cic.Term (cic.type cic.z) U => C __) a) (eqBC a)).

def union_empty_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_sets.eqP
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __1 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1))
                       (_a : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _a1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.empty_set
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _a1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             _a))
                       __))
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (A __)))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (_a : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _a1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.empty_set
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     _a1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) _a))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (_a : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _a1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.empty_set
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _a1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         _a))
                   w) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) w))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) U => A __) w)
           (__ :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (_a : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _a1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.empty_set
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     _a1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) _a))
              w))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (_a : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _a1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.empty_set
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _a1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) _a))
                w) =>
         matita_basics_logic.match_Or cic.prop (A w)
           (matita_basics_sets.empty_set
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) w)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _a : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.empty_set
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _a)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) w)) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) w)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
            auto)
           (abs : cic.Term cic.prop matita_basics_logic.False =>
            matita_basics_logic.False_ind
              (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
               cic.lift cic.prop cic.prop cic.I
                 ((__ : cic.Term (cic.type cic.z) U => A __) w))
              abs)
           _clearme)
        (auto :
           cic.Term cic.prop ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
         matita_basics_logic.or_introl
           ((__ : cic.Term (cic.type cic.z) U => A __) w)
           ((A1 : cic.Univ (cic.type cic.z) =>
             _a : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.empty_set
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _a)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U) w)
           auto).

def union_comm :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_sets.eqP
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __1 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.union
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __1))
                          __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __1 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.union
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __1))
                          __))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              a))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (B __))
                a) =>
         matita_basics_logic.match_Or cic.prop (A a) (B a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)
                   ((__ : cic.Term (cic.type cic.z) U => B __) a)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            matita_basics_logic.or_intror
              ((__ : cic.Term (cic.type cic.z) U => B __) a)
              ((__ : cic.Term (cic.type cic.z) U => A __) a) auto)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => B __) a) =>
            matita_basics_logic.or_introl
              ((__ : cic.Term (cic.type cic.z) U => B __) a)
              ((__ : cic.Term (cic.type cic.z) U => A __) a) auto)
           _clearme)
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (B __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                a) =>
         matita_basics_logic.match_Or cic.prop (B a) (A a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => B __) a)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => B __) a) =>
            matita_basics_logic.or_intror
              ((__ : cic.Term (cic.type cic.z) U => A __) a)
              ((__ : cic.Term (cic.type cic.z) U => B __) a) auto)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            matita_basics_logic.or_introl
              ((__ : cic.Term (cic.type cic.z) U => A __) a)
              ((__ : cic.Term (cic.type cic.z) U => B __) a) auto)
           _clearme).

def union_assoc :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_sets.eqP
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            __1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.union
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __2 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.union
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (A __2))
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __2))
                                   __1))
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (C __1))
                             __))
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            __1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.union
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (A __1))
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __2 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.union
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __2))
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (C __2))
                                   __1))
                             __)))))))
      :=
      S : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             S
             (__ : cic.Term (cic.type cic.z) S =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             S
             (__ : cic.Term (cic.type cic.z) S =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             S
             (__ : cic.Term (cic.type cic.z) S =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) S =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__1 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    __))
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.union
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                         (__1 : cic.Term (cic.type cic.z) S =>
                          cic.lift cic.prop cic.prop cic.I (A __1))
                         (__1 : cic.Term (cic.type cic.z) S =>
                          cic.lift cic.prop cic.prop cic.I (B __1))
                         __))
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              w))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__1 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    (__1 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    __))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.union
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                         (__1 : cic.Term (cic.type cic.z) S =>
                          cic.lift cic.prop cic.prop cic.I (B __1))
                         (__1 : cic.Term (cic.type cic.z) S =>
                          cic.lift cic.prop cic.prop cic.I (C __1))
                         __))
                   w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                (__ : cic.Term (cic.type cic.z) S =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                      (__1 : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (A __1))
                      (__1 : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (B __1))
                      __))
                (__ : cic.Term (cic.type cic.z) S =>
                 cic.lift cic.prop cic.prop cic.I (C __))
                w) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_sets.union
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (B __))
              w)
           (C w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                      (__ : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      w)
                   ((__ : cic.Term (cic.type cic.z) S => C __) w)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              w)
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   w) =>
            matita_basics_logic.match_Or cic.prop (A w) (B w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((__ : cic.Term (cic.type cic.z) S => A __) w)
                      ((__ : cic.Term (cic.type cic.z) S => B __) w)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __1 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.union
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                 (__1 : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (A __1))
                 (__1 : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                       (__2 : cic.Term (cic.type cic.z) S =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       (__2 : cic.Term (cic.type cic.z) S =>
                        cic.lift cic.prop cic.prop cic.I (C __2))
                       __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) S => A __) w) =>
               matita_basics_logic.or_introl
                 ((__ : cic.Term (cic.type cic.z) S => A __) w)
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 auto)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) S => B __) w) =>
               matita_basics_logic.or_intror
                 ((__ : cic.Term (cic.type cic.z) S => A __) w)
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 (matita_basics_logic.or_introl
                    ((__ : cic.Term (cic.type cic.z) S => B __) w)
                    ((__ : cic.Term (cic.type cic.z) S => C __) w) auto))
              _clearme0)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) S => C __) w) =>
            matita_basics_logic.or_intror
              ((__ : cic.Term (cic.type cic.z) S => A __) w)
              ((A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __ : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.union
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                 (__ : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (B __))
                 (__ : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (C __))
                 w)
              (matita_basics_logic.or_intror
                 ((__ : cic.Term (cic.type cic.z) S => B __) w)
                 ((__ : cic.Term (cic.type cic.z) S => C __) w) auto))
           _clearme)
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                (__ : cic.Term (cic.type cic.z) S =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (__ : cic.Term (cic.type cic.z) S =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                      (__1 : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (B __1))
                      (__1 : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (C __1))
                      __))
                w) =>
         matita_basics_logic.match_Or cic.prop (A w)
           (matita_basics_sets.union
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (B __))
              (__ : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ : cic.Term (cic.type cic.z) S => A __) w)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                      (__ : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      (__ : cic.Term (cic.type cic.z) S =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      w)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) S =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) S => A __) w) =>
            matita_basics_logic.or_introl
              ((A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __ : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.union
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                 (__ : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (A __))
                 (__ : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (B __))
                 w)
              ((__ : cic.Term (cic.type cic.z) S => C __) w)
              (matita_basics_logic.or_introl
                 ((__ : cic.Term (cic.type cic.z) S => A __) w)
                 ((__ : cic.Term (cic.type cic.z) S => B __) w) auto))
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   (__ : cic.Term (cic.type cic.z) S =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            matita_basics_logic.match_Or cic.prop (B w) (C w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((__ : cic.Term (cic.type cic.z) S => B __) w)
                      ((__ : cic.Term (cic.type cic.z) S => C __) w)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __1 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.union
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                 (__1 : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                       (__2 : cic.Term (cic.type cic.z) S =>
                        cic.lift cic.prop cic.prop cic.I (A __2))
                       (__2 : cic.Term (cic.type cic.z) S =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       __1))
                 (__1 : cic.Term (cic.type cic.z) S =>
                  cic.lift cic.prop cic.prop cic.I (C __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) S => B __) w) =>
               matita_basics_logic.or_introl
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((__ : cic.Term (cic.type cic.z) S => C __) w)
                 (matita_basics_logic.or_intror
                    ((__ : cic.Term (cic.type cic.z) S => A __) w)
                    ((__ : cic.Term (cic.type cic.z) S => B __) w) auto))
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) S => C __) w) =>
               matita_basics_logic.or_intror
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I S)
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) S =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((__ : cic.Term (cic.type cic.z) S => C __) w) auto)
              _clearme0)
           _clearme).

def cap_comm :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_sets.eqP
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __1 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.intersection
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __1))
                          __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __1 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.intersection
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __1))
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __1))
                          __))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              a))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.intersection
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (B __))
                a) =>
         matita_basics_logic.match_And cic.prop (A a) (B a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)
                   ((__ : cic.Term (cic.type cic.z) U => B __) a)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            auto' :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => B __) a) =>
            matita_basics_logic.conj
              ((__ : cic.Term (cic.type cic.z) U => B __) a)
              ((__ : cic.Term (cic.type cic.z) U => A __) a) auto' auto)
           _clearme)
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.intersection
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (B __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                a) =>
         matita_basics_logic.match_And cic.prop (B a) (A a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => B __) a)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __1))
              a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => B __) a) =>
            auto' :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            matita_basics_logic.conj
              ((__ : cic.Term (cic.type cic.z) U => A __) a)
              ((__ : cic.Term (cic.type cic.z) U => B __) a) auto' auto)
           _clearme).

def union_idemp :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_sets.eqP
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __1 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1))
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1))
                       __))
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (A __)))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   a) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) a))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) U => A __) a)
           (__ :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                a) =>
         matita_basics_logic.match_Or cic.prop (A a) (A a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            auto)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            auto)
           _clearme)
        (auto :
           cic.Term cic.prop ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
         matita_basics_logic.or_intror
           ((__ : cic.Term (cic.type cic.z) U => A __) a)
           ((__ : cic.Term (cic.type cic.z) U => A __) a) auto).

def cap_idemp :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__ : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_sets.eqP
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__1 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __1 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.intersection
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1))
                       (__1 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __1))
                       __))
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (A __)))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      a : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              a)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   a) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) a))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) U => A __) a)
           (__ :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __1))
              a))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.intersection
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (A __))
                a) =>
         matita_basics_logic.match_And cic.prop (A a) (A a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)
                   ((__ : cic.Term (cic.type cic.z) U => A __) a)) =>
            (__1 : cic.Term (cic.type cic.z) U => A __1) a)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            auto' :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
            auto)
           _clearme)
        (auto :
           cic.Term cic.prop ((__ : cic.Term (cic.type cic.z) U => A __) a) =>
         matita_basics_logic.conj
           ((__ : cic.Term (cic.type cic.z) U => A __) a)
           ((__ : cic.Term (cic.type cic.z) U => A __) a) auto auto).

def distribute_intersect :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_sets.eqP
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            __1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.intersection
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __2 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.union
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (A __2))
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __2))
                                   __1))
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (C __1))
                             __))
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            __1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.union
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __2 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.intersection
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (A __2))
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (C __2))
                                   __1))
                             (__1 : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__2 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __2 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.intersection
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __2))
                                   (__2 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (C __2))
                                   __1))
                             __)))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.union
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (A __1))
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (B __1))
                         __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              w))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    __))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.intersection
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (A __1))
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (C __1))
                         __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.intersection
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (B __1))
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (C __1))
                         __))
                   w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w))
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.intersection
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __1))
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __1))
                      __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (C __))
                w) =>
         matita_basics_logic.match_And cic.prop
           (matita_basics_sets.union
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              w)
           (C w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      w)
                   ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __2))
                    __1))
              w)
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   w) =>
            matita_basics_logic.match_Or cic.prop (A w) (B w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => A __) w)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__1 : cic.Term (cic.type cic.z) U => C __1) w)
                 (__1 :
                    cic.Term cic.prop
                      ((__1 : cic.Term (cic.type cic.z) U => C __1) w) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__3 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__3 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __3 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.intersection
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __3)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__3 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __3))
                          (__3 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __3))
                          __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__3 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__3 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __3 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.intersection
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __3)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__3 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __3))
                          (__3 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __3))
                          __2))
                    w))
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => C __) w) =>
               matita_basics_logic.or_introl
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 (matita_basics_logic.conj
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((__ : cic.Term (cic.type cic.z) U => C __) w) auto auto'))
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => B __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => C __) w) =>
               matita_basics_logic.or_intror
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.intersection
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 (matita_basics_logic.conj
                    ((__ : cic.Term (cic.type cic.z) U => B __) w)
                    ((__ : cic.Term (cic.type cic.z) U => C __) w) auto auto'))
              _clearme0)
           _clearme)
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.intersection
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __1))
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __1))
                      __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.intersection
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __1))
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __1))
                      __))
                w) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_sets.intersection
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (matita_basics_sets.intersection
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.intersection
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      w)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.intersection
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      w)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.intersection
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w)
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            matita_basics_logic.match_And cic.prop (A w) (C w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => A __) w)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __1 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.intersection
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __2))
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       __1))
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (C __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => C __) w) =>
               matita_basics_logic.conj
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((__ : cic.Term (cic.type cic.z) U => C __) w)
                 (matita_basics_logic.or_introl
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((__ : cic.Term (cic.type cic.z) U => B __) w) auto)
                 auto')
              _clearme0)
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.intersection
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            matita_basics_logic.match_And cic.prop (B w) (C w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _Q :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A1
                       (__1 : cic.Term (cic.type cic.z) A1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                __1 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_sets.intersection
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                  __1)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __2))
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       __1))
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (C __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => B __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => C __) w) =>
               matita_basics_logic.conj
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((__ : cic.Term (cic.type cic.z) U => C __) w)
                 (matita_basics_logic.or_intror
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((__ : cic.Term (cic.type cic.z) U => B __) w) auto)
                 auto')
              _clearme0)
           _clearme).

def distribute_substract :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))
                    (C :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U
                            (__ : cic.Term (cic.type cic.z) U =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__ : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_sets.eqP
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (_w : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((U1 : cic.Univ (cic.type cic.z) =>
                            _A :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I U1
                                   (__ : cic.Term (cic.type cic.z) U1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _B :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I U1
                                   (__ : cic.Term (cic.type cic.z) U1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _w1 : cic.Term (cic.type cic.z) U1 =>
                            matita_basics_sets.substraction
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I U1)
                              _A _B _w1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (__ : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((A1 : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__1 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _Q :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I A1
                                         (__1 :
                                            cic.Term (cic.type cic.z) A1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  __1 : cic.Term (cic.type cic.z) A1 =>
                                  matita_basics_sets.union
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I A1)
                                    _P _Q __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (A __1))
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __1))
                                   __))
                             (__ : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I (C __))
                             _w))
                       (__ : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            _Q :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__1 : cic.Term (cic.type cic.z) A1 =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            __1 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_sets.union
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _P _Q __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I U)
                             (_w : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((U1 : cic.Univ (cic.type cic.z) =>
                                  _A :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I U1
                                         (__1 :
                                            cic.Term (cic.type cic.z) U1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _B :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I U1
                                         (__1 :
                                            cic.Term (cic.type cic.z) U1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _w1 : cic.Term (cic.type cic.z) U1 =>
                                  matita_basics_sets.substraction
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I U1)
                                    _A _B _w1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (A __1))
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (C __1))
                                   _w))
                             (_w : cic.Term (cic.type cic.z) U =>
                              cic.lift cic.prop cic.prop cic.I
                                ((U1 : cic.Univ (cic.type cic.z) =>
                                  _A :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I U1
                                         (__1 :
                                            cic.Term (cic.type cic.z) U1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _B :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) (cic.type cic.z)
                                         cic.I U1
                                         (__1 :
                                            cic.Term (cic.type cic.z) U1 =>
                                          cic.univ cic.prop (cic.type cic.z)
                                            cic.I)) =>
                                  _w1 : cic.Term (cic.type cic.z) U1 =>
                                  matita_basics_sets.substraction
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I U1)
                                    _A _B _w1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I U)
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (B __1))
                                   (__1 : cic.Term (cic.type cic.z) U =>
                                    cic.lift cic.prop cic.prop cic.I (C __1))
                                   _w))
                             __)))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      C :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((U1 : cic.Univ (cic.type cic.z) =>
             _A :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__ : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _B :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__ : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _w : cic.Term (cic.type cic.z) U1 =>
             matita_basics_sets.substraction
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B _w)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__1 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __1 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((U1 : cic.Univ (cic.type cic.z) =>
                  _A :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _w : cic.Term (cic.type cic.z) U1 =>
                  matita_basics_sets.substraction
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                    _B _w)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _Q :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A1
                               (__1 : cic.Term (cic.type cic.z) A1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        __1 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_sets.union
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _P _Q __1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (A __1))
                         (__1 : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (B __1))
                         __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    _w))
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    _w))
              w))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__ : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __ : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    _w))
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    _w))
              w)
           (__ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (_w : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((U1 : cic.Univ (cic.type cic.z) =>
                        _A :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I U1
                               (__ : cic.Term (cic.type cic.z) U1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _B :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I U1
                               (__ : cic.Term (cic.type cic.z) U1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _w1 : cic.Term (cic.type cic.z) U1 =>
                        matita_basics_sets.substraction
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             U1)
                          _A _B _w1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (A __))
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (C __))
                         _w))
                   (_w : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I
                      ((U1 : cic.Univ (cic.type cic.z) =>
                        _A :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I U1
                               (__ : cic.Term (cic.type cic.z) U1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _B :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I U1
                               (__ : cic.Term (cic.type cic.z) U1 =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        _w1 : cic.Term (cic.type cic.z) U1 =>
                        matita_basics_sets.substraction
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             U1)
                          _A _B _w1)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (B __))
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.lift cic.prop cic.prop cic.I (C __))
                         _w))
                   w) =>
            (U1 : cic.Univ (cic.type cic.z) =>
             _A :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__1 : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _B :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__1 : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _w : cic.Term (cic.type cic.z) U1 =>
             matita_basics_sets.substraction
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B _w)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w))
        (_clearme :
           cic.Term cic.prop
             ((U1 : cic.Univ (cic.type cic.z) =>
               _A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U1
                      (__ : cic.Term (cic.type cic.z) U1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _B :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U1
                      (__ : cic.Term (cic.type cic.z) U1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _w : cic.Term (cic.type cic.z) U1 =>
               matita_basics_sets.substraction
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B
                 _w)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__1 : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __1 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __1))
                      (__1 : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __1))
                      __))
                (__ : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I (C __))
                w) =>
         matita_basics_logic.match_And cic.prop
           (matita_basics_sets.union
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              w)
           (matita_basics_logic.Not (C w))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _Q :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     __ : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_sets.union
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P _Q __)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      w)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w))) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _Q :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A1
                    (__1 : cic.Term (cic.type cic.z) A1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             __1 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_sets.union
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
               __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    _w))
              (_w : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__1 : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w1 : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w1)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __1))
                    (__1 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __1))
                    _w))
              w)
           (_clearme0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _Q :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A1
                         (__ : cic.Term (cic.type cic.z) A1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  __ : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_sets.union
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                    _Q __)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   w) =>
            matita_basics_logic.match_Or cic.prop (A w) (B w)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => A __) w)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((__1 : cic.Term (cic.type cic.z) U => C __1) w))
                 (__1 :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((__1 : cic.Term (cic.type cic.z) U => C __1) w)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (_w : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((U1 : cic.Univ (cic.type cic.z) =>
                         _A :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__2 : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _B :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__2 : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _w1 : cic.Term (cic.type cic.z) U1 =>
                         matita_basics_sets.substraction
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              U1)
                           _A _B _w1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__2 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __2))
                          (__2 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __2))
                          _w))
                    (_w : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((U1 : cic.Univ (cic.type cic.z) =>
                         _A :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__2 : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _B :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__2 : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _w1 : cic.Term (cic.type cic.z) U1 =>
                         matita_basics_sets.substraction
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              U1)
                           _A _B _w1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__2 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __2))
                          (__2 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (C __2))
                          _w))
                    w))
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               matita_basics_logic.or_introl
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 (matita_basics_logic.conj
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((__ : cic.Term (cic.type cic.z) U => C __) w))
                    auto auto'))
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => B __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               matita_basics_logic.or_intror
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 ((U1 : cic.Univ (cic.type cic.z) =>
                   _A :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _B :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I U1
                          (__ : cic.Term (cic.type cic.z) U1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _w : cic.Term (cic.type cic.z) U1 =>
                   matita_basics_sets.substraction
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                     _B _w)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (C __))
                    w)
                 (matita_basics_logic.conj
                    ((__ : cic.Term (cic.type cic.z) U => B __) w)
                    ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                       ((__ : cic.Term (cic.type cic.z) U => C __) w))
                    auto auto'))
              _clearme0)
           _clearme)
        (_clearme :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               _Q :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               __ : cic.Term (cic.type cic.z) A1 =>
               matita_basics_sets.union
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P _Q
                 __)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                (_w : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((U1 : cic.Univ (cic.type cic.z) =>
                     _A :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _B :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _w1 : cic.Term (cic.type cic.z) U1 =>
                     matita_basics_sets.substraction
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1)
                       _A _B _w1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      _w))
                (_w : cic.Term (cic.type cic.z) U =>
                 cic.lift cic.prop cic.prop cic.I
                   ((U1 : cic.Univ (cic.type cic.z) =>
                     _A :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _B :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _w1 : cic.Term (cic.type cic.z) U1 =>
                     matita_basics_sets.substraction
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1)
                       _A _B _w1)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      _w))
                w) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_sets.substraction
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (A __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (matita_basics_sets.substraction
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (B __))
              (__ : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __))
              w)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((U1 : cic.Univ (cic.type cic.z) =>
                     _A :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _B :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _w : cic.Term (cic.type cic.z) U1 =>
                     matita_basics_sets.substraction
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1)
                       _A _B _w)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (A __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      w)
                   ((U1 : cic.Univ (cic.type cic.z) =>
                     _A :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _B :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I U1
                            (__ : cic.Term (cic.type cic.z) U1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     _w : cic.Term (cic.type cic.z) U1 =>
                     matita_basics_sets.substraction
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1)
                       _A _B _w)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (B __))
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.lift cic.prop cic.prop cic.I (C __))
                      w)) =>
            (U1 : cic.Univ (cic.type cic.z) =>
             _A :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__1 : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _B :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U1
                    (__1 : cic.Term (cic.type cic.z) U1 =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)) =>
             _w : cic.Term (cic.type cic.z) U1 =>
             matita_basics_sets.substraction
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B _w)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __2))
                    (__2 : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __2))
                    __1))
              (__1 : cic.Term (cic.type cic.z) U =>
               cic.lift cic.prop cic.prop cic.I (C __1))
              w)
           (_clearme0 :
              cic.Term cic.prop
                ((U1 : cic.Univ (cic.type cic.z) =>
                  _A :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _w : cic.Term (cic.type cic.z) U1 =>
                  matita_basics_sets.substraction
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                    _B _w)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (A __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            matita_basics_logic.match_And cic.prop (A w)
              (matita_basics_logic.Not (C w))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => A __) w)
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((__ : cic.Term (cic.type cic.z) U => C __) w))) =>
               (U1 : cic.Univ (cic.type cic.z) =>
                _A :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U1
                       (__1 : cic.Term (cic.type cic.z) U1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _B :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U1
                       (__1 : cic.Term (cic.type cic.z) U1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _w : cic.Term (cic.type cic.z) U1 =>
                matita_basics_sets.substraction
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B
                  _w)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __2))
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       __1))
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (C __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => A __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               matita_basics_logic.conj
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((__ : cic.Term (cic.type cic.z) U => C __) w))
                 (matita_basics_logic.or_introl
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((__ : cic.Term (cic.type cic.z) U => B __) w) auto)
                 auto')
              _clearme0)
           (_clearme0 :
              cic.Term cic.prop
                ((U1 : cic.Univ (cic.type cic.z) =>
                  _A :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U1
                         (__ : cic.Term (cic.type cic.z) U1 =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  _w : cic.Term (cic.type cic.z) U1 =>
                  matita_basics_sets.substraction
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A
                    _B _w)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (B __))
                   (__ : cic.Term (cic.type cic.z) U =>
                    cic.lift cic.prop cic.prop cic.I (C __))
                   w) =>
            matita_basics_logic.match_And cic.prop (B w)
              (matita_basics_logic.Not (C w))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w)
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((__ : cic.Term (cic.type cic.z) U => C __) w))) =>
               (U1 : cic.Univ (cic.type cic.z) =>
                _A :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U1
                       (__1 : cic.Term (cic.type cic.z) U1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _B :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I U1
                       (__1 : cic.Term (cic.type cic.z) U1 =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                _w : cic.Term (cic.type cic.z) U1 =>
                matita_basics_sets.substraction
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U1) _A _B
                  _w)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A1 : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      _Q :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A1
                             (__2 : cic.Term (cic.type cic.z) A1 =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      __2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_sets.union
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _P _Q __2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (A __2))
                       (__2 : cic.Term (cic.type cic.z) U =>
                        cic.lift cic.prop cic.prop cic.I (B __2))
                       __1))
                 (__1 : cic.Term (cic.type cic.z) U =>
                  cic.lift cic.prop cic.prop cic.I (C __1))
                 w)
              (auto :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) U => B __) w) =>
               auto' :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => C __) w)) =>
               matita_basics_logic.conj
                 ((A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   __ : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_sets.union
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q __)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (A __))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I (B __))
                    w)
                 ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((__ : cic.Term (cic.type cic.z) U => C __) w))
                 (matita_basics_logic.or_intror
                    ((__ : cic.Term (cic.type cic.z) U => A __) w)
                    ((__ : cic.Term (cic.type cic.z) U => B __) w) auto)
                 auto')
              _clearme0)
           _clearme).

def substract_def :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (U : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I U
                 (__ : cic.Term (cic.type cic.z) U =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))
              (A :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I U
                      (__ : cic.Term (cic.type cic.z) U =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I U
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.univ cic.prop (cic.type cic.z) cic.I))
                 (B :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I U
                         (__ : cic.Term (cic.type cic.z) U =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__ : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_sets.eqP
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                    (_w : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((U1 : cic.Univ (cic.type cic.z) =>
                         _A :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__ : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _B :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I U1
                                (__ : cic.Term (cic.type cic.z) U1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _w1 : cic.Term (cic.type cic.z) U1 =>
                         matita_basics_sets.substraction
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              U1)
                           _A _B _w1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __))
                          (__ : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (B __))
                          _w))
                    (__ : cic.Term (cic.type cic.z) U =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         _Q :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z)
                                (cic.type cic.z) cic.I A1
                                (__1 : cic.Term (cic.type cic.z) A1 =>
                                 cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                         __1 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_sets.intersection
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _P _Q __1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I U)
                          (__1 : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I (A __1))
                          (_w : cic.Term (cic.type cic.z) U =>
                           cic.lift cic.prop cic.prop cic.I
                             ((U1 : cic.Univ (cic.type cic.z) =>
                               _A :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      U1
                                      (__1 : cic.Term (cic.type cic.z) U1 =>
                                       cic.univ cic.prop (cic.type cic.z)
                                         cic.I)) =>
                               _w1 : cic.Term (cic.type cic.z) U1 =>
                               matita_basics_sets.complement
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I U1)
                                 _A _w1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I U)
                                (__1 : cic.Term (cic.type cic.z) U =>
                                 cic.lift cic.prop cic.prop cic.I (B __1))
                                _w))
                          __))))))
      :=
      U : cic.Univ (cic.type cic.z) =>
      A :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      B :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             U
             (__ : cic.Term (cic.type cic.z) U =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      w : cic.Term (cic.type cic.z) U =>
      matita_basics_logic.conj
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) U => A __) w)
              ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__ : cic.Term (cic.type cic.z) U => B __) w)))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) w)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w))) =>
            (_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__1 : cic.Term (cic.type cic.z) U => A __1) w)
              ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__1 : cic.Term (cic.type cic.z) U => B __1) w))))
        (cic.prod cic.prop cic.prop cic.prop cic.I
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) U => A __) w)
              ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__ : cic.Term (cic.type cic.z) U => B __) w)))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) U => A __) w)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((__ : cic.Term (cic.type cic.z) U => B __) w))) =>
            (_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__1 : cic.Term (cic.type cic.z) U => A __1) w)
              ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__1 : cic.Term (cic.type cic.z) U => B __1) w))))
        (auto :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((__ : cic.Term (cic.type cic.z) U => A __) w)
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((__ : cic.Term (cic.type cic.z) U => B __) w))) =>
         auto)
        (auto :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((__ : cic.Term (cic.type cic.z) U => A __) w)
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((__ : cic.Term (cic.type cic.z) U => B __) w))) =>
         auto).


