(; This file was automatically generated from Matita. ;)

def mod_aux :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I matita_arithmetics_nat.nat
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.nat)))).

def mod_aux_body :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I matita_arithmetics_nat.nat
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.nat)))).

[ _p ] mod_aux _p -->
  matita_arithmetics_nat.filter_nat (cic.type cic.z)
    (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
       matita_arithmetics_nat.nat
       (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
          matita_arithmetics_nat.nat
          (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.nat)))
    matita_arithmetics_div_and_mod.mod_aux_body _p.

[ _p ] mod_aux_body _p -->
  m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
  n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
  matita_arithmetics_nat.match_nat (cic.type cic.z)
    (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     matita_arithmetics_nat.nat)
    m
    (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     matita_basics_bool.match_bool (cic.type cic.z)
       (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
        matita_arithmetics_nat.nat)
       m
       (matita_arithmetics_div_and_mod.mod_aux q
          (matita_arithmetics_nat.minus m (matita_arithmetics_nat.S n)) n)
       (matita_arithmetics_nat.leb m n))
    _p.

def mod :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.nat)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat (cic.type cic.z)
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat)
        n
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_div_and_mod.mod_aux n n p)
        m.

def div_aux :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I matita_arithmetics_nat.nat
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.nat)))).

def div_aux_body :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I matita_arithmetics_nat.nat
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.nat)))).

[ _p ] div_aux _p -->
  matita_arithmetics_nat.filter_nat (cic.type cic.z)
    (_p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
       matita_arithmetics_nat.nat
       (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
          matita_arithmetics_nat.nat
          (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.nat)))
    matita_arithmetics_div_and_mod.div_aux_body _p.

[ _p ] div_aux_body _p -->
  m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
  n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
  matita_arithmetics_nat.match_nat (cic.type cic.z)
    (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     matita_arithmetics_nat.nat)
    matita_arithmetics_nat.O
    (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     matita_basics_bool.match_bool (cic.type cic.z)
       (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
        matita_arithmetics_nat.nat)
       matita_arithmetics_nat.O
       (matita_arithmetics_nat.S
          (matita_arithmetics_div_and_mod.div_aux q
             (matita_arithmetics_nat.minus m (matita_arithmetics_nat.S n)) n))
       (matita_arithmetics_nat.leb m n))
    _p.

def div :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat
              (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.nat)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat (cic.type cic.z)
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S n)
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_div_and_mod.div_aux n n p)
        m.

def le_mod_aux_m_m :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __) n p)
                    (__ :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.le _n __) n p) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_div_and_mod.mod_aux p n m) m)))))
      :=
      p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __) n _x_365)
                    (__ :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.le _n __) n _x_365) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_div_and_mod.mod_aux _x_365 n m) m)))))
        (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         lenO :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) n matita_arithmetics_nat.O) =>
         matita_arithmetics_nat.le_n_O_elim n lenO
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1) __ m))
           (matita_arithmetics_nat.le_O_n m))
        (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                   matita_arithmetics_nat.nat
                   (m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __) n q)
                      (__ :
                         cic.Term cic.prop
                           ((_n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             __ :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_arithmetics_nat.le _n __) n q) =>
                       (_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __1)
                         (matita_arithmetics_div_and_mod.mod_aux q n m) m)))) =>
         n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         len :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) n
                (matita_arithmetics_nat.S q)) =>
         matita_arithmetics_nat.leb_elim n m
           (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_basics_bool.match_bool (cic.type cic.z)
                    (_0 :
                       cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                     matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_div_and_mod.mod_aux q
                       (matita_arithmetics_nat.minus n
                          (matita_arithmetics_nat.S m))
                       m)
                    __)
                 m))
           (auto :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __) n m) =>
            auto)
           (notlenm :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) n m)) =>
            Hind
              (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m)) m
              (matita_arithmetics_nat.le_plus_to_minus n
                 (matita_arithmetics_nat.S m) q
                 (matita_arithmetics_nat.transitive_le n
                    (matita_arithmetics_nat.S q)
                    (matita_arithmetics_nat.plus q
                       (matita_arithmetics_nat.S m))
                    len
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S q)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S q) m)))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S q)
                             (matita_arithmetics_nat.plus q
                                (matita_arithmetics_nat.S m))))
                       (matita_arithmetics_nat.le_plus_n_r m
                          (matita_arithmetics_nat.S q))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S q))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.S q) x))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.S q)
                                      (matita_arithmetics_nat.plus q
                                         (matita_arithmetics_nat.S m))))))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus q
                                (matita_arithmetics_nat.S m))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.S q) x))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.S q)
                                         (matita_arithmetics_nat.plus q
                                            (matita_arithmetics_nat.S m))))))
                             (matita_basics_logic.refl
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.S q)
                                      (matita_arithmetics_nat.plus q
                                         (matita_arithmetics_nat.S m)))))
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S q))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus m q))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.plus q
                                         (matita_arithmetics_nat.S m))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus q m)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S x)
                                         (matita_arithmetics_nat.plus q
                                            (matita_arithmetics_nat.S m))))
                                   (matita_arithmetics_nat.plus_n_Sm q m)
                                   (matita_arithmetics_nat.plus m q)
                                   (matita_arithmetics_nat.commutative_plus q
                                      m))
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S q))
                                (matita_arithmetics_nat.plus_n_Sm m q)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S q) m)
                          (matita_arithmetics_nat.commutative_plus m
                             (matita_arithmetics_nat.S q))))))))
        p.

def lt_mod_m_m :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  (__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2)
                    (matita_arithmetics_div_and_mod.mod n m) m))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.prod cic.prop cic.prop cic.prop cic.I
           ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __1 __2) matita_arithmetics_nat.O __)
           (__1 :
              cic.Term cic.prop
                ((__1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __2 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __1 __2) matita_arithmetics_nat.O
                   __) =>
            (__2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __2 __3)
              (matita_arithmetics_div_and_mod.mod n __) __))
        (abs :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                matita_arithmetics_nat.O) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.lift cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_div_and_mod.mod n
                    matita_arithmetics_nat.O)
                 matita_arithmetics_nat.O))
           (matita_basics_logic.absurd
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.O)
              abs
              (matita_arithmetics_nat.not_le_Sn_O matita_arithmetics_nat.O)))
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                (matita_arithmetics_nat.S p)) =>
         matita_arithmetics_nat.le_S_S
           (matita_arithmetics_div_and_mod.mod_aux n n p) p
           (matita_arithmetics_div_and_mod.le_mod_aux_m_m n n p
              (matita_arithmetics_nat.le_n n)))
        m.

def div_aux_mod_aux :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div_aux p n m)
                          (matita_arithmetics_nat.S m))
                       (matita_arithmetics_div_and_mod.mod_aux p n m))))))
      :=
      p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div_aux _x_365 n m)
                          (matita_arithmetics_nat.S m))
                       (matita_arithmetics_div_and_mod.mod_aux _x_365 n m))))))
        (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           n)
        (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                   matita_arithmetics_nat.nat
                   (m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      n
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_div_and_mod.div_aux q n m)
                            (matita_arithmetics_nat.S m))
                         (matita_arithmetics_div_and_mod.mod_aux q n m))))) =>
         n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.leb_elim n m
           (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_basics_bool.match_bool (cic.type cic.z)
                          (_0 :
                             cic.Term (cic.type cic.z)
                               matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.div_aux q
                                (matita_arithmetics_nat.minus n
                                   (matita_arithmetics_nat.S m))
                                m))
                          __)
                       (matita_arithmetics_nat.S m))
                    (matita_basics_bool.match_bool (cic.type cic.z)
                       (_0 :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_div_and_mod.mod_aux q
                          (matita_arithmetics_nat.minus n
                             (matita_arithmetics_nat.S m))
                          m)
                       __))))
           (lenm :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __) n m) =>
            matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              n)
           (lenm :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) n m)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus m
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div_aux q
                          (matita_arithmetics_nat.minus n
                             (matita_arithmetics_nat.S m))
                          m)
                       (matita_arithmetics_nat.S m))
                    (matita_arithmetics_div_and_mod.mod_aux q
                       (matita_arithmetics_nat.minus n
                          (matita_arithmetics_nat.S m))
                       m)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.plus m
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_div_and_mod.div_aux q
                                  (matita_arithmetics_nat.minus n
                                     (matita_arithmetics_nat.S m))
                                  m)
                               (matita_arithmetics_nat.S m))
                            (matita_arithmetics_div_and_mod.mod_aux q
                               (matita_arithmetics_nat.minus n
                                  (matita_arithmetics_nat.S m))
                               m)))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n (matita_arithmetics_nat.S x)))
              (matita_basics_logic.eq_ind
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus n (matita_arithmetics_nat.S m))
                 (x_1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus n
                            (matita_arithmetics_nat.S m))
                         x_1) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus m x_1))))
                 (matita_basics_logic.eq_coerc
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.minus n
                                (matita_arithmetics_nat.S m))
                             (matita_arithmetics_nat.S m))))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.minus n
                                   (matita_arithmetics_nat.S m))))))
                    (matita_arithmetics_nat.plus_minus_m_m n
                       (matita_arithmetics_nat.S m)
                       (matita_arithmetics_nat.not_le_to_lt n m lenm))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.minus n m))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n
                                   (matita_arithmetics_nat.plus x
                                      (matita_arithmetics_nat.S m))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.minus n
                                            (matita_arithmetics_nat.S m))))))))
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.minus n m))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      n
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m))
                                         (matita_arithmetics_nat.S m))))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      n
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus m x))))))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.minus n m))))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         n
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.pred
                                               (matita_arithmetics_nat.minus
                                                  n m))
                                            (matita_arithmetics_nat.S m))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         n x))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.minus n m))))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            n x))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            n
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred
                                                     (matita_arithmetics_nat.minus
                                                        n m))))))))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         n
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.pred
                                                  (matita_arithmetics_nat.minus
                                                     n m)))))))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.minus n m))
                                   (matita_arithmetics_nat.S m))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m))
                                         m))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.pred
                                                  (matita_arithmetics_nat.minus
                                                     n m))))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m)))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S x)
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred
                                                     (matita_arithmetics_nat.minus
                                                        n m))))))
                                      (matita_arithmetics_nat.plus_n_Sm m
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m)))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m))
                                         m)
                                      (matita_arithmetics_nat.commutative_plus
                                         m
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.minus n m))))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.minus n m))
                                      (matita_arithmetics_nat.S m))
                                   (matita_arithmetics_nat.plus_n_Sm
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.minus n m))
                                      m)))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.minus n m))))
                             (matita_arithmetics_nat.plus_n_Sm m
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.minus n m))))
                          (matita_arithmetics_nat.minus n
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.eq_minus_S_pred n m))
                       (matita_arithmetics_nat.minus n
                          (matita_arithmetics_nat.S m))
                       (matita_arithmetics_nat.eq_minus_S_pred n m)))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div_aux q
                          (matita_arithmetics_nat.minus n
                             (matita_arithmetics_nat.S m))
                          m)
                       (matita_arithmetics_nat.S m))
                    (matita_arithmetics_div_and_mod.mod_aux q
                       (matita_arithmetics_nat.minus n
                          (matita_arithmetics_nat.S m))
                       m))
                 (Hind
                    (matita_arithmetics_nat.minus n
                       (matita_arithmetics_nat.S m))
                    m))
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.plus m
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div_aux q
                          (matita_arithmetics_nat.minus n
                             (matita_arithmetics_nat.S m))
                          m)
                       (matita_arithmetics_nat.S m)))
                 (matita_arithmetics_div_and_mod.mod_aux q
                    (matita_arithmetics_nat.minus n
                       (matita_arithmetics_nat.S m))
                    m))
              (matita_arithmetics_nat.associative_plus m
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div_aux q
                       (matita_arithmetics_nat.minus n
                          (matita_arithmetics_nat.S m))
                       m)
                    (matita_arithmetics_nat.S m))
                 (matita_arithmetics_div_and_mod.mod_aux q
                    (matita_arithmetics_nat.minus n
                       (matita_arithmetics_nat.S m))
                    m))))
        p.

def div_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n m) m)
                    (matita_arithmetics_div_and_mod.mod n m)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) cic.I A)
            _x __1)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           n
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div n __) __)
              (matita_arithmetics_div_and_mod.mod n __)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n (matita_arithmetics_nat.plus x n)))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n x))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n x))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n)
                 (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.plus_n_O n))
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
              (matita_arithmetics_nat.commutative_plus
                 matita_arithmetics_nat.O n))
           (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
           (matita_arithmetics_nat.times_n_O n))
        (auto : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_logic.rewrite_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div_aux n n auto)
                 (matita_arithmetics_nat.S auto))
              (matita_arithmetics_div_and_mod.mod_aux n n auto))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 x
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div_aux n n auto)
                       (matita_arithmetics_nat.S auto))
                    (matita_arithmetics_div_and_mod.mod_aux n n auto))))
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div_aux n n auto)
                    (matita_arithmetics_nat.S auto))
                 (matita_arithmetics_div_and_mod.mod_aux n n auto)))
           n (matita_arithmetics_div_and_mod.div_aux_mod_aux n n auto))
        m.

def eq_times_div_minus_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div a b) b)
                 (matita_arithmetics_nat.minus a
                    (matita_arithmetics_div_and_mod.mod a b)))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_coerc
        (cic.lift cic.prop (cic.type cic.z) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times b
                 (matita_arithmetics_div_and_mod.div a b))
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times b
                       (matita_arithmetics_div_and_mod.div a b))
                    (matita_arithmetics_div_and_mod.mod a b))
                 (matita_arithmetics_div_and_mod.mod a b))))
        (cic.lift cic.prop (cic.type cic.z) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div a b) b)
              (matita_arithmetics_nat.minus a
                 (matita_arithmetics_div_and_mod.mod a b))))
        (matita_arithmetics_nat.minus_plus_m_m
           (matita_arithmetics_nat.times b
              (matita_arithmetics_div_and_mod.div a b))
           (matita_arithmetics_div_and_mod.mod a b))
        (matita_basics_logic.rewrite_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod a b)
              (matita_arithmetics_nat.times b
                 (matita_arithmetics_div_and_mod.div a b)))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_nat.minus x
                          (matita_arithmetics_div_and_mod.mod a b))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div a b) b)
                       (matita_arithmetics_nat.minus a
                          (matita_arithmetics_div_and_mod.mod a b))))))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times b
                 (matita_arithmetics_div_and_mod.div a b))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times b
                             (matita_arithmetics_div_and_mod.div a b))
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod a b)
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_div_and_mod.div a b)))
                             (matita_arithmetics_div_and_mod.mod a b))))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_div_and_mod.mod a b))))))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 a
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b))
                             (matita_arithmetics_nat.minus x
                                (matita_arithmetics_div_and_mod.mod a b))))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b))
                             (matita_arithmetics_nat.minus a
                                (matita_arithmetics_div_and_mod.mod a b))))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times b
                             (matita_arithmetics_div_and_mod.div a b))
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_div_and_mod.mod a b)))))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod a b)
                    (matita_arithmetics_nat.times b
                       (matita_arithmetics_div_and_mod.div a b)))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div a b) b)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             a
                             (matita_arithmetics_nat.plus x
                                (matita_arithmetics_div_and_mod.mod a b))))
                       (matita_arithmetics_div_and_mod.div_mod a b)
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_div_and_mod.div a b) b))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod a b)
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b)))
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b))))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div a b) b)
              (matita_arithmetics_nat.commutative_times
                 (matita_arithmetics_div_and_mod.div a b) b))
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times b
                 (matita_arithmetics_div_and_mod.div a b))
              (matita_arithmetics_div_and_mod.mod a b))
           (matita_arithmetics_nat.commutative_plus
              (matita_arithmetics_nat.times b
                 (matita_arithmetics_div_and_mod.div a b))
              (matita_arithmetics_div_and_mod.mod a b))).

div_mod_spec :
  cic.Term (cic.type cic.z)
    (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
       matita_arithmetics_nat.nat
       (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
          matita_arithmetics_nat.nat
          (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             matita_arithmetics_nat.nat
             (_q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I matita_arithmetics_nat.nat
                (_r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))))).

div_mod_spec_intro :
  cic.Term cic.prop
    (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
       matita_arithmetics_nat.nat
       (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
          matita_arithmetics_nat.nat
          (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
             matita_arithmetics_nat.nat
             (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   (matita_arithmetics_nat.lt r m)
                   (__ : cic.Term cic.prop (matita_arithmetics_nat.lt r m) =>
                    cic.prod cic.prop cic.prop cic.prop cic.I
                      (matita_basics_logic.eq
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         n
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times q m) r))
                      (__1 :
                         cic.Term cic.prop
                           (matita_basics_logic.eq
                              (cic.lift (cic.type cic.z)
                                 (cic.type (cic.s (cic.s cic.z))) cic.I
                                 matita_arithmetics_nat.nat)
                              n
                              (matita_arithmetics_nat.plus
                                 (matita_arithmetics_nat.times q m) r)) =>
                       matita_arithmetics_div_and_mod.div_mod_spec n m q r))))))).

def match_div_mod_spec :
      return_sort : cic.Sort ->
      _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) ->
         cic.Univ return_sort) ->
      case_div_mod_spec_intro :
        (__ : cic.Term cic.prop (matita_arithmetics_nat.lt _r _m) ->
         __1 :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                _n
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times _q _m) _r)) ->
         cic.Term return_sort
           (return_type
              (matita_arithmetics_div_and_mod.div_mod_spec_intro _n _m _q _r
                 __ __1))) ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) ->
      cic.Term return_sort (return_type z).

[ return_sort, _n, _m, _q, _r, return_type, case_div_mod_spec_intro, __, __1 ]
  match_div_mod_spec return_sort _n _m _q _r return_type
    case_div_mod_spec_intro
    (matita_arithmetics_div_and_mod.div_mod_spec_intro _n _m _q _r __ __1) -->
  case_div_mod_spec_intro __ __1.

def filter_div_mod_spec :
      return_sort : cic.Sort ->
      _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      return_type :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term cic.prop
             (matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term cic.prop
          (matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) ->
      cic.Term return_sort (return_type z).

[ return_sort1, n, m, q, r, __, __1, return_type, return ]
  filter_div_mod_spec return_sort1 (n) (m) (q) (r) return_type return
    (matita_arithmetics_div_and_mod.div_mod_spec_intro n m q r __ __1) -->
  return (matita_arithmetics_div_and_mod.div_mod_spec_intro n m q r __ __1).

def div_mod_spec_ind :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z)
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_809 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ cic.prop (cic.type cic.z) cic.I))
                       (Q_ :
                          cic.Term (cic.type cic.z)
                            (cic.prod cic.prop (cic.type cic.z)
                               (cic.type cic.z) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_809 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          (cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_811 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_810 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_809 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_809)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_811 x_810))))
                          (_H_div_mod_spec_intro :
                             cic.Term cic.prop
                               (cic.prod cic.prop cic.prop cic.prop cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_811 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop cic.prop cic.prop cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_810 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_809 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_809)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_811 x_810)))) =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_809 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_809 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_809) x_809)))))))).

def div_mod_spec_ind_body :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z)
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_809 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ cic.prop (cic.type cic.z) cic.I))
                       (Q_ :
                          cic.Term (cic.type cic.z)
                            (cic.prod cic.prop (cic.type cic.z)
                               (cic.type cic.z) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_809 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          (cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_811 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_810 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_809 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_809)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_811 x_810))))
                          (_H_div_mod_spec_intro :
                             cic.Term cic.prop
                               (cic.prod cic.prop cic.prop cic.prop cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_811 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop cic.prop cic.prop cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_810 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_809 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_809)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_811 x_810)))) =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_809 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_809 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_809) x_809)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_809 ]
  div_mod_spec_ind _n _m _q _r Q_ _H_div_mod_spec_intro x_809 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec cic.prop _n _m _q _r
    (x_809 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_809 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_809) x_809)
    (matita_arithmetics_div_and_mod.div_mod_spec_ind_body _n _m _q _r Q_
       _H_div_mod_spec_intro)
    x_809.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_809 ]
  div_mod_spec_ind_body _n _m _q _r Q_ _H_div_mod_spec_intro x_809 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec cic.prop _n _m _q _r
    (_x_809 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_809)
    (x_811 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_810 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_811 x_810)
    x_809.

def div_mod_spec_rect_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_813 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_813 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_815 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_814 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_813 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_813)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_815 x_814))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_815 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_814 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_813 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_813)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_815 x_814)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_813 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_813 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_813) x_813)))))))).

def div_mod_spec_rect_Type4_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_813 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_813 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_815 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_814 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_813 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_813)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_815 x_814))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_815 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_814 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_813 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_813)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_815 x_814)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_813 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_813 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_813) x_813)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_813 ]
  div_mod_spec_rect_Type4 _n _m _q _r Q_ _H_div_mod_spec_intro x_813 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _n _m _q _r
    (x_813 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_813 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_813) x_813)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type4_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_813.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_813 ]
  div_mod_spec_rect_Type4_body _n _m _q _r Q_ _H_div_mod_spec_intro x_813 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _n _m _q _r
    (_x_813 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_813)
    (x_815 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_814 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_815 x_814)
    x_813.

def div_mod_spec_rect_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_817 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_817 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_819 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_818 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_817 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_817)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_819 x_818))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_819 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_818 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_817 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_817)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_819 x_818)))) =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_817 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_817 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_817) x_817)))))))).

def div_mod_spec_rect_Type5_body :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_817 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_817 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_819 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_818 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_817 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_817)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_819 x_818))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_819 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_818 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_817 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_817)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_819 x_818)))) =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_817 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_817 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_817) x_817)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_817 ]
  div_mod_spec_rect_Type5 _n _m _q _r Q_ _H_div_mod_spec_intro x_817 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _n _m _q _r
    (x_817 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_817 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_817) x_817)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type5_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_817.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_817 ]
  div_mod_spec_rect_Type5_body _n _m _q _r Q_ _H_div_mod_spec_intro x_817 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _n _m _q _r
    (_x_817 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_817)
    (x_819 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_818 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_819 x_818)
    x_817.

def div_mod_spec_rect_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_821 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_821 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_823 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_822 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_821 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_821)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_823 x_822))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_823 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_822 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_821 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_821)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_823 x_822)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_821 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_821 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_821) x_821)))))))).

def div_mod_spec_rect_Type3_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_821 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_821 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_823 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_822 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_821 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_821)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_823 x_822))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_823 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_822 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_821 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_821)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_823 x_822)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_821 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_821 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_821) x_821)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_821 ]
  div_mod_spec_rect_Type3 _n _m _q _r Q_ _H_div_mod_spec_intro x_821 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _n _m _q _r
    (x_821 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_821 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_821) x_821)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type3_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_821.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_821 ]
  div_mod_spec_rect_Type3_body _n _m _q _r Q_ _H_div_mod_spec_intro x_821 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _n _m _q _r
    (_x_821 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_821)
    (x_823 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_822 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_823 x_822)
    x_821.

def div_mod_spec_rect_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_825 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_825 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_827 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_826 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_825 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_825)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_827 x_826))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_827 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_826 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_825 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_825)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_827 x_826)))) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_825 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_825 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_825) x_825)))))))).

def div_mod_spec_rect_Type2_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_825 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_825 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_827 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_826 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_825 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_825)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_827 x_826))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_827 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_826 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_825 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_825)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_827 x_826)))) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_825 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_825 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_825) x_825)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_825 ]
  div_mod_spec_rect_Type2 _n _m _q _r Q_ _H_div_mod_spec_intro x_825 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s cic.z))) _n _m _q _r
    (x_825 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_825 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_825) x_825)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type2_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_825.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_825 ]
  div_mod_spec_rect_Type2_body _n _m _q _r Q_ _H_div_mod_spec_intro x_825 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s cic.z))) _n _m _q _r
    (_x_825 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_825)
    (x_827 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_826 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_827 x_826)
    x_825.

def div_mod_spec_rect_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_829 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_829 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                        cic.prod (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                          cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_831 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_830 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_829 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_829)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_831 x_830))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_831 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_830 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_829 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_829)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_831 x_830)))) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_829 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_829 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_829) x_829)))))))).

def div_mod_spec_rect_Type1_body :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_829 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_829 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                        cic.prod (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                          cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_831 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_830 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_829 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_829)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_831 x_830))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_831 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_830 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_829 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_829)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_831 x_830)))) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_829 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_829 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_829) x_829)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_829 ]
  div_mod_spec_rect_Type1 _n _m _q _r Q_ _H_div_mod_spec_intro x_829 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec (cic.type (cic.s cic.z))
    _n _m _q _r
    (x_829 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_829 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_829) x_829)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type1_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_829.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_829 ]
  div_mod_spec_rect_Type1_body _n _m _q _r Q_ _H_div_mod_spec_intro x_829 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec (cic.type (cic.s cic.z))
    _n _m _q _r
    (_x_829 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_829)
    (x_831 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_830 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_831 x_830)
    x_829.

def div_mod_spec_rect_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                       (cic.type (cic.s cic.z)) cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_833 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_833 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) cic.I)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I
                          (cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_835 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_834 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_833 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_833)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_835 x_834))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (cic.type cic.z) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_835 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_834 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_833 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_833)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_835 x_834)))) =>
                           cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_833 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_833 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_833) x_833)))))))).

def div_mod_spec_rect_Type0_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                       (cic.type (cic.s cic.z)) cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_833 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_833 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) cic.I)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I
                          (cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_835 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_834 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_833 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_833)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_835 x_834))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (cic.type cic.z) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_835 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_834 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_833 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_833)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_835 x_834)))) =>
                           cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_833 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_833 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_833) x_833)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_833 ]
  div_mod_spec_rect_Type0 _n _m _q _r Q_ _H_div_mod_spec_intro x_833 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec (cic.type cic.z) _n _m
    _q _r
    (x_833 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_833 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_833) x_833)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type0_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_833.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_833 ]
  div_mod_spec_rect_Type0_body _n _m _q _r Q_ _H_div_mod_spec_intro x_833 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec (cic.type cic.z) _n _m _q
    _r
    (_x_833 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_833)
    (x_835 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_834 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_835 x_834)
    x_833.

def div_mod_spec_rect_CProp4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_837 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_837 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_839 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_838 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_837 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_837)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_839 x_838))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_839 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_838 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_837 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_837)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_839 x_838)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_837 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_837 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_837) x_837)))))))).

def div_mod_spec_rect_CProp4_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_837 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_837 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_839 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_838 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_837 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_837)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_839 x_838))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_839 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_838 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_837 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_837)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_839 x_838)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_837 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_837 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_837) x_837)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_837 ]
  div_mod_spec_rect_CProp4 _n _m _q _r Q_ _H_div_mod_spec_intro x_837 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _n _m _q _r
    (x_837 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_837 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_837) x_837)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp4_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_837.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_837 ]
  div_mod_spec_rect_CProp4_body _n _m _q _r Q_ _H_div_mod_spec_intro x_837 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _n _m _q _r
    (_x_837 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_837)
    (x_839 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_838 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_839 x_838)
    x_837.

def div_mod_spec_rect_CProp5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_841 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_841 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_843 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_842 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_841 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_841)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_843 x_842))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_843 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_842 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_841 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_841)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_843 x_842)))) =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_841 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_841 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_841) x_841)))))))).

def div_mod_spec_rect_CProp5_body :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                       cic.I
                       (cic.prod cic.prop
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          (cic.type
                             (cic.s
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_841 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type
                               (cic.s
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               (cic.type
                                  (cic.s
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_841 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))))
                                  cic.I)) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_843 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_842 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_841 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_841)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_843 x_842))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_843 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_842 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_841 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_841)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_843 x_842)))) =>
                           cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_841 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_841 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_841) x_841)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_841 ]
  div_mod_spec_rect_CProp5 _n _m _q _r Q_ _H_div_mod_spec_intro x_841 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _n _m _q _r
    (x_841 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_841 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_841) x_841)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp5_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_841.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_841 ]
  div_mod_spec_rect_CProp5_body _n _m _q _r Q_ _H_div_mod_spec_intro x_841 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _n _m _q _r
    (_x_841 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_841)
    (x_843 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_842 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_843 x_842)
    x_841.

def div_mod_spec_rect_CProp3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_845 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_845 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_847 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_846 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_845 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_845)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_847 x_846))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_847 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_846 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_845 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_845)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_847 x_846)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_845 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_845 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_845) x_845)))))))).

def div_mod_spec_rect_CProp3_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_845 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I))
                       (Q_ :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_845 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_847 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_846 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_845 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_845)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_847 x_846))))
                          (_H_div_mod_spec_intro :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_847 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_846 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_845 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_845)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_847 x_846)))) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_845 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_845 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_845) x_845)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_845 ]
  div_mod_spec_rect_CProp3 _n _m _q _r Q_ _H_div_mod_spec_intro x_845 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _n _m _q _r
    (x_845 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_845 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_845) x_845)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp3_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_845.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_845 ]
  div_mod_spec_rect_CProp3_body _n _m _q _r Q_ _H_div_mod_spec_intro x_845 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _n _m _q _r
    (_x_845 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_845)
    (x_847 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_846 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_847 x_846)
    x_845.

def div_mod_spec_rect_CProp2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_849 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_849 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_851 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_850 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_849 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_849)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_851 x_850))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_851 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_850 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_849 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_849)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_851 x_850)))) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_849 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_849 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_849) x_849)))))))).

def div_mod_spec_rect_CProp2_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       (cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_849 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_849 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I)) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_851 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_850 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_849 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_849)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_851 x_850))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_851 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_850 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_849 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_849)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_851 x_850)))) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_849 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_849 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_849) x_849)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_849 ]
  div_mod_spec_rect_CProp2 _n _m _q _r Q_ _H_div_mod_spec_intro x_849 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec
    (cic.type (cic.s (cic.s cic.z))) _n _m _q _r
    (x_849 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_849 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_849) x_849)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp2_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_849.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_849 ]
  div_mod_spec_rect_CProp2_body _n _m _q _r Q_ _H_div_mod_spec_intro x_849 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec
    (cic.type (cic.s (cic.s cic.z))) _n _m _q _r
    (_x_849 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_849)
    (x_851 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_850 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_851 x_850)
    x_849.

def div_mod_spec_rect_CProp1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_853 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_853 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                        cic.prod (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                          cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_855 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_854 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_853 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_853)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_855 x_854))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_855 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_854 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_853 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_853)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_855 x_854)))) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_853 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_853 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_853) x_853)))))))).

def div_mod_spec_rect_CProp1_body :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_853 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_853 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type (cic.s cic.z))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                        cic.prod (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                          cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_855 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_854 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_853 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_853)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_855 x_854))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_855 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_854 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_853 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_853)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_855 x_854)))) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_853 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_853 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_853) x_853)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_853 ]
  div_mod_spec_rect_CProp1 _n _m _q _r Q_ _H_div_mod_spec_intro x_853 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec (cic.type (cic.s cic.z))
    _n _m _q _r
    (x_853 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_853 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_853) x_853)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp1_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_853.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_853 ]
  div_mod_spec_rect_CProp1_body _n _m _q _r Q_ _H_div_mod_spec_intro x_853 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec (cic.type (cic.s cic.z))
    _n _m _q _r
    (_x_853 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_853)
    (x_855 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_854 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_855 x_854)
    x_853.

def div_mod_spec_rect_CProp0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                       (cic.type (cic.s cic.z)) cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_857 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_857 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) cic.I)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I
                          (cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_859 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_858 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_857 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_857)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_859 x_858))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (cic.type cic.z) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_859 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_858 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_857 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_857)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_859 x_858)))) =>
                           cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_857 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_857 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_857) x_857)))))))).

def div_mod_spec_rect_CProp0_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (_q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (_r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                       (cic.type (cic.s cic.z)) cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((_n1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n1
                              _m1 _q1 _r1)
                             _n _m _q _r)
                          (_x_857 :
                             cic.Term cic.prop
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r) =>
                           cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (Q_ :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((_n1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n1 _m1 _q1 _r1)
                                  _n _m _q _r)
                               (_x_857 :
                                  cic.Term cic.prop
                                    ((_n1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _q1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _r1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_div_and_mod.div_mod_spec
                                        _n1 _m1 _q1 _r1)
                                       _n _m _q _r) =>
                                cic.univ (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) cic.I)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I
                          (cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) _r _m)
                             (x_859 :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m) =>
                              cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   _n
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times _q _m) _r))
                                (x_858 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r)) =>
                                 (_x_857 :
                                    cic.Term cic.prop
                                      ((_n1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n1 _m1 _q1 _r1)
                                         _n _m _q _r) =>
                                  Q_ _x_857)
                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                      _n _m _q _r x_859 x_858))))
                          (_H_div_mod_spec_intro :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (cic.type cic.z) cic.I
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) _r _m)
                                  (x_859 :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) _r
                                          _m) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        _n
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times _q
                                              _m)
                                           _r))
                                     (x_858 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             _n
                                             (matita_arithmetics_nat.plus
                                                (matita_arithmetics_nat.times
                                                   _q _m)
                                                _r)) =>
                                      (_x_857 :
                                         cic.Term cic.prop
                                           ((_n1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n1 _m1 _q1 _r1)
                                              _n _m _q _r) =>
                                       Q_ _x_857)
                                        (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                           _n _m _q _r x_859 x_858)))) =>
                           cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((_n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec
                                 _n1 _m1 _q1 _r1)
                                _n _m _q _r)
                             (x_857 :
                                cic.Term cic.prop
                                  ((_n1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n1 _m1 _q1 _r1)
                                     _n _m _q _r) =>
                              (_x_857 :
                                 cic.Term cic.prop
                                   ((_n1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n1 _m1 _q1 _r1)
                                      _n _m _q _r) =>
                               Q_ _x_857) x_857)))))))).

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_857 ]
  div_mod_spec_rect_CProp0 _n _m _q _r Q_ _H_div_mod_spec_intro x_857 -->
  matita_arithmetics_div_and_mod.filter_div_mod_spec (cic.type cic.z) _n _m
    _q _r
    (x_857 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     (_x_857 :
        cic.Term cic.prop
          ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n
             _m _q _r) =>
      Q_ _x_857) x_857)
    (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp0_body _n _m _q _r
       Q_ _H_div_mod_spec_intro)
    x_857.

[ _n, _m, _q, _r, Q_, _H_div_mod_spec_intro, x_857 ]
  div_mod_spec_rect_CProp0_body _n _m _q _r Q_ _H_div_mod_spec_intro x_857 -->
  matita_arithmetics_div_and_mod.match_div_mod_spec (cic.type cic.z) _n _m _q
    _r
    (_x_857 :
       cic.Term cic.prop
         ((_n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           _r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_div_and_mod.div_mod_spec _n1 _m1 _q1 _r1) _n _m
            _q _r) =>
     Q_ _x_857)
    (x_859 :
       cic.Term cic.prop
         ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_arithmetics_nat.lt __ __1) _r _m) =>
     x_858 :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
               matita_arithmetics_nat.nat)
            _n
            (matita_arithmetics_nat.plus (matita_arithmetics_nat.times _q _m)
               _r)) =>
     _H_div_mod_spec_intro x_859 x_858)
    x_857.

def div_mod_spec_inv_ind :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          (cic.prod cic.prop (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1434 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ cic.prop (cic.type cic.z) cic.I))
                          (P :
                             cic.Term (cic.type cic.z)
                               (cic.prod cic.prop (cic.type cic.z)
                                  (cic.type cic.z) cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1434 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             (cic.prod cic.prop cic.prop cic.prop cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_811 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_810 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop cic.prop cic.prop cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_811 x_810))
                                      (_z1435 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_811 x_810)) =>
                                       (_z1434 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1434)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_811 x_810)))))
                             (_H1 :
                                cic.Term cic.prop
                                  (cic.prod cic.prop cic.prop cic.prop cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_811 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop cic.prop cic.prop
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_810 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop cic.prop cic.prop
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_811 x_810))
                                           (_z1435 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_811 x_810)) =>
                                            (_z1434 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1434)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_811 x_810))))) =>
                              (_z1434 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1434) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1434 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
      H1 :
        cic.Term cic.prop
          (cic.prod cic.prop cic.prop cic.prop cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_811 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop cic.prop cic.prop cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_810 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_811 x_810))
                   (_z1435 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_811 x_810)) =>
                    (_z1434 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1434)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_811 x_810))))) =>
      (Hcut :
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1435 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1434 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1434) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_ind x1 x2 x3 x4
           (_x_809 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift cic.prop cic.prop cic.I
              (cic.prod cic.prop cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_809)
                 (_z1435 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_809) =>
                  (_z1434 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1434) _x_809)))
           H1 Hterm).

def div_mod_spec_inv_rect_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1440 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1440 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I)) =>
                           cic.prod
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_815 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_814 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_815 x_814))
                                      (_z1441 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_815 x_814)) =>
                                       (_z1440 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1440)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_815 x_814)))))
                             (_H1 :
                                cic.Term
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_815 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_814 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_815 x_814))
                                           (_z1441 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_815 x_814)) =>
                                            (_z1440 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1440)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_815 x_814))))) =>
                              (_z1440 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1440) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
          (cic.prod cic.prop
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1440 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_815 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_814 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_815 x_814))
                   (_z1441 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_815 x_814)) =>
                    (_z1440 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1440)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_815 x_814))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.prod cic.prop
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1441 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1440 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1440) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type4 x1 x2 x3 x4
           (_x_813 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              (cic.prod cic.prop
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_813)
                 (_z1441 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_813) =>
                  (_z1440 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1440) _x_813)))
           H1 Hterm).

def div_mod_spec_inv_rect_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1446 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1446 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I)) =>
                           cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_823 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_822 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_823 x_822))
                                      (_z1447 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_823 x_822)) =>
                                       (_z1446 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1446)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_823 x_822)))))
                             (_H1 :
                                cic.Term
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_823 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_822 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_823 x_822))
                                           (_z1447 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_823 x_822)) =>
                                            (_z1446 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1446)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_823 x_822))))) =>
                              (_z1446 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1446) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1446 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_823 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_822 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_823 x_822))
                   (_z1447 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_823 x_822)) =>
                    (_z1446 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1446)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_823 x_822))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1447 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1446 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1446) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type3 x1 x2 x3 x4
           (_x_821 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_821)
                 (_z1447 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_821) =>
                  (_z1446 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1446) _x_821)))
           H1 Hterm).

def div_mod_spec_inv_rect_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1452 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1452 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)) =>
                           cic.prod (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_827 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_826 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_827 x_826))
                                      (_z1453 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_827 x_826)) =>
                                       (_z1452 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1452)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_827 x_826)))))
                             (_H1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z)))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_827 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_826 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_827 x_826))
                                           (_z1453 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_827 x_826)) =>
                                            (_z1452 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1452)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_827 x_826))))) =>
                              (_z1452 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1452) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1452 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
             (cic.type (cic.s (cic.s cic.z))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_827 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_826 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s cic.z))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_827 x_826))
                   (_z1453 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_827 x_826)) =>
                    (_z1452 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1452)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_827 x_826))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s cic.z)))
           (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1453 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1452 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1452) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type2 x1 x2 x3 x4
           (_x_825 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_825)
                 (_z1453 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_825) =>
                  (_z1452 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1452) _x_825)))
           H1 Hterm).

def div_mod_spec_inv_rect_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1458 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I))
                          (P :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1458 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                           cic.prod (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             (cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_831 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop (cic.type (cic.s cic.z))
                                   (cic.type (cic.s cic.z)) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_830 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s cic.z)) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_831 x_830))
                                      (_z1459 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_831 x_830)) =>
                                       (_z1458 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1458)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_831 x_830)))))
                             (_H1 :
                                cic.Term (cic.type (cic.s cic.z))
                                  (cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_831 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z)) cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_830 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z)) cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_831 x_830))
                                           (_z1459 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_831 x_830)) =>
                                            (_z1458 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1458)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_831 x_830))))) =>
                              (_z1458 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1458) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
             (cic.type (cic.s (cic.s cic.z))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1458 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod cic.prop (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z)) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_831 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z)) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_830 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z)) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_831 x_830))
                   (_z1459 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_831 x_830)) =>
                    (_z1458 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1458)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_831 x_830))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s cic.z))
           (cic.prod cic.prop (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1459 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1458 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1458) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type1 x1 x2 x3 x4
           (_x_829 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z)) cic.I
              (cic.prod cic.prop (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_829)
                 (_z1459 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_829) =>
                  (_z1458 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1458) _x_829)))
           H1 Hterm).

def div_mod_spec_inv_rect_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z)) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                          (cic.type (cic.s cic.z)) cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1464 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (P :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1464 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type cic.z)
                                     (cic.type (cic.s cic.z)) cic.I)) =>
                           cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             (cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_835 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop (cic.type cic.z)
                                   (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_834 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_835 x_834))
                                      (_z1465 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_835 x_834)) =>
                                       (_z1464 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1464)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_835 x_834)))))
                             (_H1 :
                                cic.Term (cic.type cic.z)
                                  (cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_835 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_834 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_835 x_834))
                                           (_z1465 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_835 x_834)) =>
                                            (_z1464 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1464)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_835 x_834))))) =>
                              (_z1464 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1464) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod cic.prop (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z)) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1464 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)) =>
      H1 :
        cic.Term (cic.type cic.z)
          (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_835 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_834 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_835 x_834))
                   (_z1465 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_835 x_834)) =>
                    (_z1464 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1464)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_835 x_834))))) =>
      (Hcut :
         cic.Term (cic.type cic.z)
           (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1465 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1464 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1464) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_Type0 x1 x2 x3 x4
           (_x_833 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_833)
                 (_z1465 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_833) =>
                  (_z1464 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1464) _x_833)))
           H1 Hterm).

def div_mod_spec_inv_rect_CProp4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 cic.I matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    cic.I matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             (cic.type
                                (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                             cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1470 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s
                                      (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  (cic.type
                                     (cic.s
                                        (cic.s (cic.s (cic.s (cic.s cic.z))))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1470 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z))))))
                                     cic.I)) =>
                           cic.prod
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             (cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_839 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   (cic.type
                                      (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                   cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_838 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      (cic.type
                                         (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                      cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_839 x_838))
                                      (_z1471 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_839 x_838)) =>
                                       (_z1470 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1470)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_839 x_838)))))
                             (_H1 :
                                cic.Term
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_839 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        (cic.type
                                           (cic.s
                                              (cic.s (cic.s (cic.s cic.z)))))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_838 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           (cic.type
                                              (cic.s
                                                 (cic.s (cic.s (cic.s cic.z)))))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_839 x_838))
                                           (_z1471 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_839 x_838)) =>
                                            (_z1470 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1470)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_839 x_838))))) =>
                              (_z1470 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1470) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
          (cic.prod cic.prop
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1470 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_839 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_838 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_839 x_838))
                   (_z1471 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_839 x_838)) =>
                    (_z1470 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1470)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_839 x_838))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.prod cic.prop
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1471 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1470 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1470) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp4 x1 x2 x3 x4
           (_x_837 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              (cic.prod cic.prop
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_837)
                 (_z1471 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_837) =>
                  (_z1470 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1470) _x_837)))
           H1 Hterm).

def div_mod_spec_inv_rect_CProp3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type cic.z)
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1476 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1476 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     cic.I)) =>
                           cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_847 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_846 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_847 x_846))
                                      (_z1477 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_847 x_846)) =>
                                       (_z1476 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1476)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_847 x_846)))))
                             (_H1 :
                                cic.Term
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_847 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        (cic.type
                                           (cic.s (cic.s (cic.s cic.z))))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_846 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           (cic.type
                                              (cic.s (cic.s (cic.s cic.z))))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_847 x_846))
                                           (_z1477 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_847 x_846)) =>
                                            (_z1476 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1476)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_847 x_846))))) =>
                              (_z1476 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1476) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1476 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_847 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_846 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                   (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_847 x_846))
                   (_z1477 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_847 x_846)) =>
                    (_z1476 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1476)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_847 x_846))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1477 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1476 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1476) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp3 x1 x2 x3 x4
           (_x_845 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_845)
                 (_z1477 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_845) =>
                  (_z1476 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1476) _x_845)))
           H1 Hterm).

def div_mod_spec_inv_rect_CProp2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
           matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                          (cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1482 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                cic.I))
                          (P :
                             cic.Term
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1482 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     cic.I)) =>
                           cic.prod (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_851 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_850 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_851 x_850))
                                      (_z1483 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_851 x_850)) =>
                                       (_z1482 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1482)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_851 x_850)))))
                             (_H1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z)))
                                  (cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_851 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_850 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_851 x_850))
                                           (_z1483 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_851 x_850)) =>
                                            (_z1482 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1482)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_851 x_850))))) =>
                              (_z1482 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1482) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
             (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1482 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
             (cic.type (cic.s (cic.s cic.z))) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_851 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_850 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                   (cic.type (cic.s (cic.s cic.z))) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_851 x_850))
                   (_z1483 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_851 x_850)) =>
                    (_z1482 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1482)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_851 x_850))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s cic.z)))
           (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1483 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1482 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1482) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp2 x1 x2 x3 x4
           (_x_849 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_849)
                 (_z1483 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_849) =>
                  (_z1482 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1482) _x_849)))
           H1 Hterm).

def div_mod_spec_inv_rect_CProp1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1488 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I))
                          (P :
                             cic.Term (cic.type (cic.s (cic.s cic.z)))
                               (cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1488 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type (cic.s cic.z))
                                     (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
                           cic.prod (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             (cic.prod cic.prop (cic.type (cic.s cic.z))
                                (cic.type (cic.s cic.z)) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_855 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop (cic.type (cic.s cic.z))
                                   (cic.type (cic.s cic.z)) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_854 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s cic.z)) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_855 x_854))
                                      (_z1489 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_855 x_854)) =>
                                       (_z1488 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1488)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_855 x_854)))))
                             (_H1 :
                                cic.Term (cic.type (cic.s cic.z))
                                  (cic.prod cic.prop (cic.type (cic.s cic.z))
                                     (cic.type (cic.s cic.z)) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_855 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop
                                        (cic.type (cic.s cic.z))
                                        (cic.type (cic.s cic.z)) cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_854 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop
                                           (cic.type (cic.s cic.z))
                                           (cic.type (cic.s cic.z)) cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_855 x_854))
                                           (_z1489 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_855 x_854)) =>
                                            (_z1488 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1488)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_855 x_854))))) =>
                              (_z1488 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1488) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
             (cic.type (cic.s (cic.s cic.z))) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1488 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type (cic.s cic.z))
                (cic.type (cic.s (cic.s cic.z))) cic.I)) =>
      H1 :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod cic.prop (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z)) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_855 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type (cic.s cic.z))
                (cic.type (cic.s cic.z)) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_854 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z)) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_855 x_854))
                   (_z1489 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_855 x_854)) =>
                    (_z1488 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1488)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_855 x_854))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s cic.z))
           (cic.prod cic.prop (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1489 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1488 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1488) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp1 x1 x2 x3 x4
           (_x_853 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z)) cic.I
              (cic.prod cic.prop (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_853)
                 (_z1489 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_853) =>
                  (_z1488 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1488) _x_853)))
           H1 Hterm).

def div_mod_spec_inv_rect_CProp0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
           (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                 (x3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I matita_arithmetics_nat.nat
                    (x4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z)) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4)
                       (Hterm :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4) =>
                        cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                          (cic.type (cic.s cic.z)) cic.I
                          (cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                x1 x2 x3 x4)
                             (_z1494 :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4) =>
                              cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (P :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     x1 x2 x3 x4)
                                  (_z1494 :
                                     cic.Term cic.prop
                                       ((_n :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _m :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _q :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         _r :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_div_and_mod.div_mod_spec
                                           _n _m _q _r)
                                          x1 x2 x3 x4) =>
                                   cic.univ (cic.type cic.z)
                                     (cic.type (cic.s cic.z)) cic.I)) =>
                           cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I
                             (cic.prod cic.prop (cic.type cic.z)
                                (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x4 x2)
                                (x_859 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2) =>
                                 cic.prod cic.prop (cic.type cic.z)
                                   (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x1
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times x3 x2)
                                         x4))
                                   (x_858 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4)) =>
                                    cic.prod cic.prop (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4))
                                         Hterm
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_859 x_858))
                                      (_z1495 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_859 x_858)) =>
                                       (_z1494 :
                                          cic.Term cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _q :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _r :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_div_and_mod.div_mod_spec
                                                _n _m _q _r)
                                               x1 x2 x3 x4) =>
                                        P _z1494)
                                         (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                            x1 x2 x3 x4 x_859 x_858)))))
                             (_H1 :
                                cic.Term (cic.type cic.z)
                                  (cic.prod cic.prop (cic.type cic.z)
                                     (cic.type cic.z) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x4
                                        x2)
                                     (x_859 :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             x4 x2) =>
                                      cic.prod cic.prop (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 x3 x2)
                                              x4))
                                        (x_858 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x1
                                                (matita_arithmetics_nat.plus
                                                   (matita_arithmetics_nat.times
                                                      x3 x2)
                                                   x4)) =>
                                         cic.prod cic.prop (cic.type cic.z)
                                           (cic.type cic.z) cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift cic.prop
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4))
                                              Hterm
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_859 x_858))
                                           (_z1495 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((_n :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _m :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _q :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        _r :
                                                          cic.Term
                                                            (cic.type cic.z)
                                                            matita_arithmetics_nat.nat =>
                                                        matita_arithmetics_div_and_mod.div_mod_spec
                                                          _n _m _q _r)
                                                         x1 x2 x3 x4))
                                                   Hterm
                                                   (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                      x1 x2 x3 x4 x_859 x_858)) =>
                                            (_z1494 :
                                               cic.Term cic.prop
                                                 ((_n :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _m :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _q :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _r :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_div_and_mod.div_mod_spec
                                                     _n _m _q _r)
                                                    x1 x2 x3 x4) =>
                                             P _z1494)
                                              (matita_arithmetics_div_and_mod.div_mod_spec_intro
                                                 x1 x2 x3 x4 x_859 x_858))))) =>
                              (_z1494 :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      x1 x2 x3 x4) =>
                               P _z1494) Hterm))))))))
      :=
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2 x3
             x4) =>
      P :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod cic.prop (cic.type (cic.s cic.z))
             (cic.type (cic.s cic.z)) cic.I
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1 x2
                x3 x4)
             (_z1494 :
                cic.Term cic.prop
                  ((_n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _q :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    _r :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                     x1 x2 x3 x4) =>
              cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)) =>
      H1 :
        cic.Term (cic.type cic.z)
          (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) x4 x2)
             (x_859 :
                cic.Term cic.prop
                  ((__ :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    __1 :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_nat.lt __ __1) x4 x2) =>
              cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times x3 x2) x4))
                (x_858 :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) cic.I A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) cic.I
                           matita_arithmetics_nat.nat)
                        x1
                        (matita_arithmetics_nat.plus
                           (matita_arithmetics_nat.times x3 x2) x4)) =>
                 cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_859 x_858))
                   (_z1495 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _q :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _r :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_div_and_mod.div_mod_spec
                                  _n _m _q _r)
                                 x1 x2 x3 x4))
                           Hterm
                           (matita_arithmetics_div_and_mod.div_mod_spec_intro
                              x1 x2 x3 x4 x_859 x_858)) =>
                    (_z1494 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4) =>
                     P _z1494)
                      (matita_arithmetics_div_and_mod.div_mod_spec_intro x1
                         x2 x3 x4 x_859 x_858))))) =>
      (Hcut :
         cic.Term (cic.type cic.z)
           (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4))
                 Hterm Hterm)
              (_z1495 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _q :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _r :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_div_and_mod.div_mod_spec _n _m
                             _q _r)
                            x1 x2 x3 x4))
                      Hterm Hterm) =>
               (_z1494 :
                  cic.Term cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _q :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _r :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                       x1 x2 x3 x4) =>
                P _z1494) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
               ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                  x2 x3 x4))
            Hterm))
        (matita_arithmetics_div_and_mod.div_mod_spec_rect_CProp0 x1 x2 x3 x4
           (_x_857 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) x1
                   x2 x3 x4) =>
            cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod cic.prop (cic.type cic.z) (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4))
                    Hterm _x_857)
                 (_z1495 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               x1 x2 x3 x4))
                         Hterm _x_857) =>
                  (_z1494 :
                     cic.Term cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          x1 x2 x3 x4) =>
                   P _z1494) _x_857)))
           H1 Hterm).

def div_mod_spec_discr :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I matita_arithmetics_nat.nat
           (a1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat
              (a2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 matita_arithmetics_nat.nat
                 (a3 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    matita_arithmetics_nat.nat
                    (a4 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          a1 a2 a3 a4)
                       (x :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               a1 a2 a3 a4) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _q :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _r :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_div_and_mod.div_mod_spec _n _m
                              _q _r)
                             a1 a2 a3 a4)
                          (y :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _q :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _r :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_div_and_mod.div_mod_spec
                                   _n _m _q _r)
                                  a1 a2 a3 a4) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _q :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _r :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_div_and_mod.div_mod_spec
                                       _n _m _q _r)
                                      a1 a2 a3 a4))
                                x y)
                             (_e :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _q :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _r :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_div_and_mod.div_mod_spec
                                            _n _m _q _r)
                                           a1 a2 a3 a4))
                                     x y) =>
                              matita_arithmetics_div_and_mod.match_div_mod_spec
                                (cic.type (cic.s (cic.s (cic.s cic.z)))) a1
                                a2 a3 a4
                                (__ :
                                   cic.Term cic.prop
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _q :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _r :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_div_and_mod.div_mod_spec
                                         _n _m _q _r)
                                        a1 a2 a3 a4) =>
                                 cic.univ (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   cic.I)
                                (t0 :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) a4
                                        a2) =>
                                 t1 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        a1
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times a3
                                              a2)
                                           a4)) =>
                                 matita_arithmetics_div_and_mod.match_div_mod_spec
                                   (cic.type (cic.s (cic.s (cic.s cic.z))))
                                   a1 a2 a3 a4
                                   (__ :
                                      cic.Term cic.prop
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _q :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _r :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_div_and_mod.div_mod_spec
                                            _n _m _q _r)
                                           a1 a2 a3 a4) =>
                                    cic.univ (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s (cic.s cic.z))))
                                      cic.I)
                                   (u0 :
                                      cic.Term cic.prop
                                        ((__ :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __ __1)
                                           a4 a2) =>
                                    u1 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           a1
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 a3 a2)
                                              a4)) =>
                                    cic.prod (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I)
                                      (P :
                                         cic.Univ (cic.type (cic.s cic.z)) =>
                                       cic.prod (cic.type (cic.s cic.z))
                                         (cic.type (cic.s cic.z))
                                         (cic.type (cic.s cic.z)) cic.I
                                         (cic.prod cic.prop
                                            (cic.type (cic.s cic.z))
                                            (cic.type (cic.s cic.z)) cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     a4 a2))
                                               (matita_basics_logic.R0
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        a4 a2))
                                                  t0)
                                               u0)
                                            (e0 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift cic.prop
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       ((__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __ __1)
                                                          a4 a2))
                                                    (matita_basics_logic.R0
                                                       (cic.lift cic.prop
                                                          (cic.type cic.z)
                                                          cic.I
                                                          ((__ :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            __1 :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            matita_arithmetics_nat.lt
                                                              __ __1)
                                                             a4 a2))
                                                       t0)
                                                    u0) =>
                                             cic.prod cic.prop
                                               (cic.type (cic.s cic.z))
                                               (cic.type (cic.s cic.z)) cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((x0 :
                                                         cic.Term cic.prop
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              a4 a2) =>
                                                       p0 :
                                                         cic.Term cic.prop
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                              (matita_basics_logic.R0
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                 t0)
                                                              x0) =>
                                                       (A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I A)
                                                          _x __)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            matita_arithmetics_nat.nat)
                                                         a1
                                                         (matita_arithmetics_nat.plus
                                                            (matita_arithmetics_nat.times
                                                               a3 a2)
                                                            a4))
                                                        u0 e0))
                                                  (matita_basics_logic.R1
                                                     (cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           a4 a2))
                                                     t0
                                                     (x0 :
                                                        cic.Term cic.prop
                                                          ((__ :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            __1 :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            matita_arithmetics_nat.lt
                                                              __ __1)
                                                             a4 a2) =>
                                                      p0 :
                                                        cic.Term cic.prop
                                                          ((A :
                                                              cic.Univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                            _x :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            __ :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            matita_basics_logic.eq
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I A)
                                                              _x __)
                                                             (cic.lift
                                                                cic.prop
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                cic.I
                                                                ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                   a4 a2))
                                                             t0 x0) =>
                                                      cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           a1
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 a3 a2)
                                                              a4)))
                                                     t1 u0 e0)
                                                  u1)
                                               (_e1 :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I A)
                                                        _x __)
                                                       (cic.lift cic.prop
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I
                                                          ((x0 :
                                                              cic.Term
                                                                cic.prop
                                                                ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                   a4 a2) =>
                                                            p0 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                   (cic.lift
                                                                    cic.prop
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                    (
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                   (matita_basics_logic.R0
                                                                    (
                                                                    cic.lift
                                                                    cic.prop
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                    (
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                    t0)
                                                                   x0) =>
                                                            (A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              a1
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    a3 a2)
                                                                 a4))
                                                             u0 e0))
                                                       (matita_basics_logic.R1
                                                          (cic.lift cic.prop
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I
                                                             ((__ :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               __1 :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               matita_arithmetics_nat.lt
                                                                 __ __1)
                                                                a4 a2))
                                                          t0
                                                          (x0 :
                                                             cic.Term
                                                               cic.prop
                                                               ((__ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 __1 :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 matita_arithmetics_nat.lt
                                                                   __ __1)
                                                                  a4 a2) =>
                                                           p0 :
                                                             cic.Term
                                                               cic.prop
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                  t0 x0) =>
                                                           cic.lift cic.prop
                                                             (cic.type cic.z)
                                                             cic.I
                                                             ((A :
                                                                 cic.Univ
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                               _x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               __ :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               matita_basics_logic.eq
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                 _x __)
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                a1
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    a3 a2)
                                                                   a4)))
                                                          t1 u0 e0)
                                                       u1) =>
                                                P)))
                                         (_z53 :
                                            cic.Term (cic.type (cic.s cic.z))
                                              (cic.prod cic.prop
                                                 (cic.type (cic.s cic.z))
                                                 (cic.type (cic.s cic.z))
                                                 cic.I
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift cic.prop
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       ((__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __ __1)
                                                          a4 a2))
                                                    (matita_basics_logic.R0
                                                       (cic.lift cic.prop
                                                          (cic.type cic.z)
                                                          cic.I
                                                          ((__ :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            __1 :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            matita_arithmetics_nat.lt
                                                              __ __1)
                                                             a4 a2))
                                                       t0)
                                                    u0)
                                                 (e0 :
                                                    cic.Term cic.prop
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I A)
                                                          _x __)
                                                         (cic.lift cic.prop
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            ((__ :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              __1 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              matita_arithmetics_nat.lt
                                                                __ __1)
                                                               a4 a2))
                                                         (matita_basics_logic.R0
                                                            (cic.lift
                                                               cic.prop
                                                               (cic.type
                                                                  cic.z)
                                                               cic.I
                                                               ((__ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 __1 :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 matita_arithmetics_nat.lt
                                                                   __ __1)
                                                                  a4 a2))
                                                            t0)
                                                         u0) =>
                                                  cic.prod cic.prop
                                                    (cic.type (cic.s cic.z))
                                                    (cic.type (cic.s cic.z))
                                                    cic.I
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I A)
                                                        _x __)
                                                       (cic.lift cic.prop
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I
                                                          ((x0 :
                                                              cic.Term
                                                                cic.prop
                                                                ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                   a4 a2) =>
                                                            p0 :
                                                              cic.Term
                                                                cic.prop
                                                                ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                   (cic.lift
                                                                    cic.prop
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                    (
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                   (matita_basics_logic.R0
                                                                    (
                                                                    cic.lift
                                                                    cic.prop
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                    (
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                    t0)
                                                                   x0) =>
                                                            (A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              a1
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    a3 a2)
                                                                 a4))
                                                             u0 e0))
                                                       (matita_basics_logic.R1
                                                          (cic.lift cic.prop
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I
                                                             ((__ :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               __1 :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               matita_arithmetics_nat.lt
                                                                 __ __1)
                                                                a4 a2))
                                                          t0
                                                          (x0 :
                                                             cic.Term
                                                               cic.prop
                                                               ((__ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 __1 :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                 matita_arithmetics_nat.lt
                                                                   __ __1)
                                                                  a4 a2) =>
                                                           p0 :
                                                             cic.Term
                                                               cic.prop
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                  t0 x0) =>
                                                           cic.lift cic.prop
                                                             (cic.type cic.z)
                                                             cic.I
                                                             ((A :
                                                                 cic.Univ
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                               _x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               __ :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               matita_basics_logic.eq
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                 _x __)
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                a1
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.times
                                                                    a3 a2)
                                                                   a4)))
                                                          t1 u0 e0)
                                                       u1)
                                                    (_e1 :
                                                       cic.Term cic.prop
                                                         ((A :
                                                             cic.Univ
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                           _x :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           __ :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           matita_basics_logic.eq
                                                             (cic.lift
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                cic.I A)
                                                             _x __)
                                                            (cic.lift
                                                               cic.prop
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               ((x0 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2) =>
                                                                 p0 :
                                                                   cic.Term
                                                                    cic.prop
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                    (
                                                                   matita_basics_logic.R0
                                                                    (
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                   (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                    t0) x0) =>
                                                                 (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                  _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                  matita_basics_logic.eq
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                   a1
                                                                   (matita_arithmetics_nat.plus
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    a3 a2) a4))
                                                                  u0 e0))
                                                            (matita_basics_logic.R1
                                                               (cic.lift
                                                                  cic.prop
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                    matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                               t0
                                                               (x0 :
                                                                  cic.Term
                                                                    cic.prop
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2) =>
                                                                p0 :
                                                                  cic.Term
                                                                    cic.prop
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    a4 a2))
                                                                    t0 x0) =>
                                                                cic.lift
                                                                  cic.prop
                                                                  (cic.type
                                                                    cic.z)
                                                                  cic.I
                                                                  ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    a1
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    (
                                                                   matita_arithmetics_nat.times
                                                                    a3 a2) a4)))
                                                               t1 u0 e0)
                                                            u1) =>
                                                     P))) =>
                                          P)))
                                   y)
                                x))))))))
      :=
      a1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a3 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a4 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1 a2 a3
             a4) =>
      y :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1 a2 a3
             a4) =>
      Deq :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1
                   a2 a3 a4))
             x y) =>
      matita_basics_logic.eq_rect_Type2
        (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1 a2
              a3 a4))
        x
        (x_13 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1 a2
                a3 a4) =>
         _x_14 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _q :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                      a1 a2 a3 a4))
                x x_13) =>
         cic.lift (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) cic.I
           (matita_arithmetics_div_and_mod.match_div_mod_spec
              (cic.type (cic.s (cic.s (cic.s cic.z)))) a1 a2 a3 a4
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _q :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                      a1 a2 a3 a4) =>
               cic.univ (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
              (t0 :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1) a4 a2) =>
               t1 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      a1
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times a3 a2) a4)) =>
               matita_arithmetics_div_and_mod.match_div_mod_spec
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) a1 a2 a3 a4
                 (__ :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _q :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _r :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                          _r)
                         a1 a2 a3 a4) =>
                  cic.univ (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
                 (u0 :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1) a4 a2) =>
                  u1 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         a1
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times a3 a2) a4)) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    (cic.univ (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I)
                    (P : cic.Univ (cic.type (cic.s cic.z)) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                       cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) a4 a2))
                             (matita_basics_logic.R0
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) a4 a2))
                                t0)
                             u0)
                          (e0 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift cic.prop
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) a4
                                        a2))
                                  (matita_basics_logic.R0
                                     (cic.lift cic.prop (cic.type cic.z)
                                        cic.I
                                        ((__ :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __ __1)
                                           a4 a2))
                                     t0)
                                  u0) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((x0 :
                                       cic.Term cic.prop
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            a4 a2) =>
                                     p0 :
                                       cic.Term cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  a4 a2))
                                            (matita_basics_logic.R0
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     a4 a2))
                                               t0)
                                            x0) =>
                                     (A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                      u0 e0))
                                (matita_basics_logic.R1
                                   (cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) a4
                                         a2))
                                   t0
                                   (x0 :
                                      cic.Term cic.prop
                                        ((__ :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __ __1)
                                           a4 a2) =>
                                    p0 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift cic.prop
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              ((__ :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __
                                                  __1)
                                                 a4 a2))
                                           t0 x0) =>
                                    cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         a1
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times a3
                                               a2)
                                            a4)))
                                   t1 u0 e0)
                                u1)
                             (_e1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((x0 :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __
                                                  __1)
                                                 a4 a2) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    ((__ :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_nat.lt
                                                        __ __1)
                                                       a4 a2))
                                                 (matita_basics_logic.R0
                                                    (cic.lift cic.prop
                                                       (cic.type cic.z) cic.I
                                                       ((__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __ __1)
                                                          a4 a2))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            a1
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a3 a2)
                                               a4))
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((__ :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             __1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_nat.lt __ __1)
                                              a4 a2))
                                        t0
                                        (x0 :
                                           cic.Term cic.prop
                                             ((__ :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __
                                                 __1)
                                                a4 a2) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift cic.prop
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   ((__ :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __ __1)
                                                      a4 a2))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              a1
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    a3 a2)
                                                 a4)))
                                        t1 u0 e0)
                                     u1) =>
                              P)))
                       (_z53 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift cic.prop
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) a4
                                        a2))
                                  (matita_basics_logic.R0
                                     (cic.lift cic.prop (cic.type cic.z)
                                        cic.I
                                        ((__ :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __ __1)
                                           a4 a2))
                                     t0)
                                  u0)
                               (e0 :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __)
                                       (cic.lift cic.prop
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             a4 a2))
                                       (matita_basics_logic.R0
                                          (cic.lift cic.prop (cic.type cic.z)
                                             cic.I
                                             ((__ :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __
                                                 __1)
                                                a4 a2))
                                          t0)
                                       u0) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((x0 :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __
                                                  __1)
                                                 a4 a2) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    ((__ :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      __1 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_nat.lt
                                                        __ __1)
                                                       a4 a2))
                                                 (matita_basics_logic.R0
                                                    (cic.lift cic.prop
                                                       (cic.type cic.z) cic.I
                                                       ((__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __ __1)
                                                          a4 a2))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            a1
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a3 a2)
                                               a4))
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((__ :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             __1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_nat.lt __ __1)
                                              a4 a2))
                                        t0
                                        (x0 :
                                           cic.Term cic.prop
                                             ((__ :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __
                                                 __1)
                                                a4 a2) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift cic.prop
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   ((__ :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __ __1)
                                                      a4 a2))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              a1
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    a3 a2)
                                                 a4)))
                                        t1 u0 e0)
                                     u1)
                                  (_e1 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I A)
                                           _x __)
                                          (cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I
                                             ((x0 :
                                                 cic.Term cic.prop
                                                   ((__ :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __ __1)
                                                      a4 a2) =>
                                               p0 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I A)
                                                       _x __)
                                                      (cic.lift cic.prop
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         ((__ :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat =>
                                                           __1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat =>
                                                           matita_arithmetics_nat.lt
                                                             __ __1)
                                                            a4 a2))
                                                      (matita_basics_logic.R0
                                                         (cic.lift cic.prop
                                                            (cic.type cic.z)
                                                            cic.I
                                                            ((__ :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              __1 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              matita_arithmetics_nat.lt
                                                                __ __1)
                                                               a4 a2))
                                                         t0)
                                                      x0) =>
                                               (A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 a1
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       a3 a2)
                                                    a4))
                                                u0 e0))
                                          (matita_basics_logic.R1
                                             (cic.lift cic.prop
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                ((__ :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  __1 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_arithmetics_nat.lt
                                                    __ __1)
                                                   a4 a2))
                                             t0
                                             (x0 :
                                                cic.Term cic.prop
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     a4 a2) =>
                                              p0 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           a4 a2))
                                                     t0 x0) =>
                                              cic.lift cic.prop
                                                (cic.type cic.z) cic.I
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      matita_arithmetics_nat.nat)
                                                   a1
                                                   (matita_arithmetics_nat.plus
                                                      (matita_arithmetics_nat.times
                                                         a3 a2)
                                                      a4)))
                                             t1 u0 e0)
                                          u1) =>
                                   P))) =>
                        P)))
                 x_13)
              x))
        (matita_arithmetics_div_and_mod.match_div_mod_spec
           (cic.type (cic.s (cic.s cic.z))) a1 a2 a3 a4
           (__ :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a1
                   a2 a3 a4) =>
            matita_arithmetics_div_and_mod.match_div_mod_spec
              (cic.type (cic.s (cic.s (cic.s cic.z)))) a1 a2 a3 a4
              (_0 :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _q :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                      a1 a2 a3 a4) =>
               cic.univ (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
              (t0 :
                 cic.Term cic.prop
                   ((__1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __2 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __1 __2) a4 a2) =>
               t1 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      a1
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_nat.times a3 a2) a4)) =>
               matita_arithmetics_div_and_mod.match_div_mod_spec
                 (cic.type (cic.s (cic.s (cic.s cic.z)))) a1 a2 a3 a4
                 (_0 :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _q :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _r :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                          _r)
                         a1 a2 a3 a4) =>
                  cic.univ (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
                 (u0 :
                    cic.Term cic.prop
                      ((__1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __1 __2) a4 a2) =>
                  u1 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         a1
                         (matita_arithmetics_nat.plus
                            (matita_arithmetics_nat.times a3 a2) a4)) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
                    cic.I
                    (cic.univ (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I)
                    (P : cic.Univ (cic.type (cic.s cic.z)) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                       cic.I
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          (cic.type (cic.s cic.z)) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2) a4 a2))
                             (matita_basics_logic.R0
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) a4 a2))
                                t0)
                             u0)
                          (e0 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __1)
                                  (cic.lift cic.prop
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __2 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __1 __2) a4
                                        a2))
                                  (matita_basics_logic.R0
                                     (cic.lift cic.prop (cic.type cic.z)
                                        cic.I
                                        ((__1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __2 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __1 __2)
                                           a4 a2))
                                     t0)
                                  u0) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             (cic.type (cic.s cic.z)) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __1)
                                (cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((x0 :
                                       cic.Term cic.prop
                                         ((__1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __2 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __1 __2)
                                            a4 a2) =>
                                     p0 :
                                       cic.Term cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((__1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __2 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt
                                                   __1 __2)
                                                  a4 a2))
                                            (matita_basics_logic.R0
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __2 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __1 __2)
                                                     a4 a2))
                                               t0)
                                            x0) =>
                                     (A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __1 :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __1)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4))
                                      u0 e0))
                                (matita_basics_logic.R1
                                   (cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((__1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __1 __2) a4
                                         a2))
                                   t0
                                   (x0 :
                                      cic.Term cic.prop
                                        ((__1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __2 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __1 __2)
                                           a4 a2) =>
                                    p0 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __1 :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __1)
                                           (cic.lift cic.prop
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              ((__1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __2 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __1
                                                  __2)
                                                 a4 a2))
                                           t0 x0) =>
                                    cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         a1
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times a3
                                               a2)
                                            a4)))
                                   t1 u0 e0)
                                u1)
                             (_e1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __1)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((x0 :
                                            cic.Term cic.prop
                                              ((__1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __2 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __1
                                                  __2)
                                                 a4 a2) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __1)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    ((__1 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      __2 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_nat.lt
                                                        __1 __2)
                                                       a4 a2))
                                                 (matita_basics_logic.R0
                                                    (cic.lift cic.prop
                                                       (cic.type cic.z) cic.I
                                                       ((__1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __2 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __1 __2)
                                                          a4 a2))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            a1
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a3 a2)
                                               a4))
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((__1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             __2 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_nat.lt __1
                                               __2)
                                              a4 a2))
                                        t0
                                        (x0 :
                                           cic.Term cic.prop
                                             ((__1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __2 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __1
                                                 __2)
                                                a4 a2) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __1 :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __1)
                                                (cic.lift cic.prop
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   ((__1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __2 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __1 __2)
                                                      a4 a2))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __1 :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __1)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              a1
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    a3 a2)
                                                 a4)))
                                        t1 u0 e0)
                                     u1) =>
                              P)))
                       (_z53 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               (cic.type (cic.s cic.z)) cic.I
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __1)
                                  (cic.lift cic.prop
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     ((__1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __2 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __1 __2) a4
                                        a2))
                                  (matita_basics_logic.R0
                                     (cic.lift cic.prop (cic.type cic.z)
                                        cic.I
                                        ((__1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __2 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __1 __2)
                                           a4 a2))
                                     t0)
                                  u0)
                               (e0 :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __1 :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __1)
                                       (cic.lift cic.prop
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I
                                          ((__1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __2 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __1 __2)
                                             a4 a2))
                                       (matita_basics_logic.R0
                                          (cic.lift cic.prop (cic.type cic.z)
                                             cic.I
                                             ((__1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __2 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __1
                                                 __2)
                                                a4 a2))
                                          t0)
                                       u0) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  (cic.type (cic.s cic.z)) cic.I
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __1)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I
                                        ((x0 :
                                            cic.Term cic.prop
                                              ((__1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __2 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __1
                                                  __2)
                                                 a4 a2) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __1)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    ((__1 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      __2 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_nat.lt
                                                        __1 __2)
                                                       a4 a2))
                                                 (matita_basics_logic.R0
                                                    (cic.lift cic.prop
                                                       (cic.type cic.z) cic.I
                                                       ((__1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __2 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __1 __2)
                                                          a4 a2))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            a1
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a3 a2)
                                               a4))
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift cic.prop
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I
                                           ((__1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             __2 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_nat.lt __1
                                               __2)
                                              a4 a2))
                                        t0
                                        (x0 :
                                           cic.Term cic.prop
                                             ((__1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __2 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __1
                                                 __2)
                                                a4 a2) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __1 :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __1)
                                                (cic.lift cic.prop
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   ((__1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __2 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __1 __2)
                                                      a4 a2))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           cic.I
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __1 :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __1)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              a1
                                              (matita_arithmetics_nat.plus
                                                 (matita_arithmetics_nat.times
                                                    a3 a2)
                                                 a4)))
                                        t1 u0 e0)
                                     u1)
                                  (_e1 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __1 :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I A)
                                           _x __1)
                                          (cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I
                                             ((x0 :
                                                 cic.Term cic.prop
                                                   ((__1 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     __2 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         matita_arithmetics_nat.nat =>
                                                     matita_arithmetics_nat.lt
                                                       __1 __2)
                                                      a4 a2) =>
                                               p0 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I A)
                                                       _x __1)
                                                      (cic.lift cic.prop
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         ((__1 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat =>
                                                           __2 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               matita_arithmetics_nat.nat =>
                                                           matita_arithmetics_nat.lt
                                                             __1 __2)
                                                            a4 a2))
                                                      (matita_basics_logic.R0
                                                         (cic.lift cic.prop
                                                            (cic.type cic.z)
                                                            cic.I
                                                            ((__1 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              __2 :
                                                                cic.Term
                                                                  (cic.type
                                                                    cic.z)
                                                                  matita_arithmetics_nat.nat =>
                                                              matita_arithmetics_nat.lt
                                                                __1 __2)
                                                               a4 a2))
                                                         t0)
                                                      x0) =>
                                               (A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __1)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 a1
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       a3 a2)
                                                    a4))
                                                u0 e0))
                                          (matita_basics_logic.R1
                                             (cic.lift cic.prop
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                ((__1 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  __2 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_arithmetics_nat.lt
                                                    __1 __2)
                                                   a4 a2))
                                             t0
                                             (x0 :
                                                cic.Term cic.prop
                                                  ((__1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __2 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __1 __2)
                                                     a4 a2) =>
                                              p0 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __1)
                                                     (cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((__1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __2 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __1 __2)
                                                           a4 a2))
                                                     t0 x0) =>
                                              cic.lift cic.prop
                                                (cic.type cic.z) cic.I
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __1 :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __1)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      matita_arithmetics_nat.nat)
                                                   a1
                                                   (matita_arithmetics_nat.plus
                                                      (matita_arithmetics_nat.times
                                                         a3 a2)
                                                      a4)))
                                             t1 u0 e0)
                                          u1) =>
                                   P))) =>
                        P)))
                 __)
              __)
           (a0 :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1) a4 a2) =>
            a10 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   a1
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times a3 a2) a4)) =>
            P : cic.Univ (cic.type (cic.s cic.z)) =>
            DH :
              cic.Term (cic.type (cic.s cic.z))
                (cic.prod cic.prop (cic.type (cic.s cic.z))
                   (cic.type (cic.s cic.z)) cic.I
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                         cic.I
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) a4 a2))
                      (matita_basics_logic.R0
                         (cic.lift cic.prop (cic.type cic.z) cic.I
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) a4 a2))
                         a0)
                      a0)
                   (e0 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) cic.I A)
                            _x __)
                           (cic.lift cic.prop
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              ((__ :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                __1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.lt __ __1) a4 a2))
                           (matita_basics_logic.R0
                              (cic.lift cic.prop (cic.type cic.z) cic.I
                                 ((__ :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __ __1) a4 a2))
                              a0)
                           a0) =>
                    cic.prod cic.prop (cic.type (cic.s cic.z))
                      (cic.type (cic.s cic.z)) cic.I
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            cic.I
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               a1
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times a3 a2) a4)))
                         (matita_basics_logic.R1
                            (cic.lift cic.prop
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) a4 a2))
                            a0
                            (x0 :
                               cic.Term cic.prop
                                 ((__ :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __ __1) a4 a2) =>
                             p0 :
                               cic.Term cic.prop
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __ :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I A)
                                     _x __)
                                    (cic.lift cic.prop
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) a4
                                          a2))
                                    a0 x0) =>
                             cic.lift cic.prop (cic.type cic.z) cic.I
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  a1
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times a3 a2) a4)))
                            a10 a0 e0)
                         a10)
                      (_e1 :
                         cic.Term cic.prop
                           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                             _x :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             __ :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             matita_basics_logic.eq
                               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
                               _x __)
                              (cic.lift cic.prop
                                 (cic.type (cic.s (cic.s cic.z))) cic.I
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __ :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I A)
                                     _x __)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       matita_arithmetics_nat.nat)
                                    a1
                                    (matita_arithmetics_nat.plus
                                       (matita_arithmetics_nat.times a3 a2)
                                       a4)))
                              (matita_basics_logic.R1
                                 (cic.lift cic.prop
                                    (cic.type (cic.s (cic.s cic.z))) cic.I
                                    ((__ :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __ __1) a4 a2))
                                 a0
                                 (x0 :
                                    cic.Term cic.prop
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) a4
                                         a2) =>
                                  p0 :
                                    cic.Term cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               a4 a2))
                                         a0 x0) =>
                                  cic.lift cic.prop (cic.type cic.z) cic.I
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       a1
                                       (matita_arithmetics_nat.plus
                                          (matita_arithmetics_nat.times a3 a2)
                                          a4)))
                                 a10 a0 e0)
                              a10) =>
                       P))) =>
            DH
              (matita_basics_logic.refl
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) a4 a2))
                 (matita_basics_logic.R0
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1) a4 a2))
                    a0))
              (matita_basics_logic.refl
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       a1
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times a3 a2) a4)))
                 (matita_basics_logic.R1
                    (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1) a4 a2))
                    a0
                    (x0 :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) a4 a2) =>
                     p0 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift cic.prop
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) a4 a2))
                            a0 x0) =>
                     cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a1
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times a3 a2) a4)))
                    a10 a0
                    (matita_basics_logic.refl
                       (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) a4 a2))
                       (matita_basics_logic.R0
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) a4 a2))
                          a0)))))
           x)
        y Deq.

def div_mod_spec_to_not_eq_O :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _q :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _r :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_div_and_mod.div_mod_spec _n _m _q
                           _r)
                          n m q r)
                       (__ :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _q :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _r :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_div_and_mod.div_mod_spec _n
                                _m _q _r)
                               n m q r) =>
                        (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             m matita_arithmetics_nat.O)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) n m q r) =>
      matita_arithmetics_div_and_mod.match_div_mod_spec cic.prop n m q r
        (__ :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) n m q
                r) =>
         (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              m matita_arithmetics_nat.O))
        (auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) r m) =>
         auto' :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                n
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times q m) r)) =>
         matita_basics_logic.not_to_not
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              m matita_arithmetics_nat.O)
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __) (matita_arithmetics_nat.S n)
              matita_arithmetics_nat.O)
           (auto'' :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   m matita_arithmetics_nat.O) =>
            matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_nat.S r) m))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_nat.S n) matita_arithmetics_nat.O))
              auto
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S x) m))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S n)
                             matita_arithmetics_nat.O))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    m
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.S n) m))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.S n) x))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S n) m)))
                    matita_arithmetics_nat.O auto'')
                 r
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus m r)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n x))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times m q)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n (matita_arithmetics_nat.plus x r)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times q m)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n (matita_arithmetics_nat.plus x r)))
                          auto' (matita_arithmetics_nat.times m q)
                          (matita_arithmetics_nat.commutative_times q m))
                       m
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                m (matita_arithmetics_nat.times x q)))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times
                                      matita_arithmetics_nat.O q)))
                             (matita_arithmetics_nat.times_O_n q) m auto'')
                          m auto''))
                    r
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             r (matita_arithmetics_nat.plus x r)))
                       (matita_arithmetics_nat.plus_O_n r) m auto''))))
           (matita_arithmetics_nat.not_le_Sn_O n))
        _clearme.

def div_mod_spec_div_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _q :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _r :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) n
                    m (matita_arithmetics_div_and_mod.div n m)
                    (matita_arithmetics_div_and_mod.mod n m)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_intro n m
        (matita_arithmetics_div_and_mod.div n m)
        (matita_arithmetics_div_and_mod.mod n m)
        (matita_arithmetics_div_and_mod.lt_mod_m_m n m posm)
        (matita_basics_logic.rewrite_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times m
              (matita_arithmetics_div_and_mod.div n m))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (matita_arithmetics_nat.plus x
                    (matita_arithmetics_div_and_mod.mod n m))))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod n m)
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div n m)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n x))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 n
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n x))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod n m)
                    (matita_arithmetics_nat.times m
                       (matita_arithmetics_div_and_mod.div n m)))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.mod n m))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n m) m)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.plus x
                                (matita_arithmetics_div_and_mod.mod n m))))
                       (matita_arithmetics_div_and_mod.div_mod n m)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_div_and_mod.div n m) m))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod n m)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m)))
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.mod n m))))
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div n m))
                 (matita_arithmetics_div_and_mod.mod n m))
              (matita_arithmetics_nat.commutative_plus
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div n m))
                 (matita_arithmetics_div_and_mod.mod n m)))
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div n m) m)
           (matita_arithmetics_nat.commutative_times
              (matita_arithmetics_div_and_mod.div n m) m)).

def let_clause_1078 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (q1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (r1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                a b q r)
                             (_clearme :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     a b q r) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) r b)
                                (ltrb :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) r b) =>
                                 cic.prod cic.prop cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      a
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q b) r))
                                   (spec :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           a
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times q
                                                 b)
                                              r)) =>
                                    cic.prod cic.prop cic.prop cic.prop cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n _m _q _r)
                                         a b q1 r1)
                                      (_clearme0 :
                                         cic.Term cic.prop
                                           ((_n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n _m _q _r)
                                              a b q1 r1) =>
                                       cic.prod cic.prop cic.prop cic.prop
                                         cic.I
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            r1 b)
                                         (ltr1b :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __
                                                  __1)
                                                 r1 b) =>
                                          cic.prod cic.prop cic.prop cic.prop
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               a
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     q1 b)
                                                  r1))
                                            (spec1 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    a
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q1 b)
                                                       r1)) =>
                                             cic.prod cic.prop cic.prop
                                               cic.prop cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  q q1)
                                               (leqq1 :
                                                  cic.Term cic.prop
                                                    ((_n :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_nat.le
                                                        _n __)
                                                       q q1) =>
                                                cic.prod cic.prop cic.prop
                                                  cic.prop cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     q q1)
                                                  (ltqq1 :
                                                     cic.Term cic.prop
                                                       ((__ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __1 :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.lt
                                                           __ __1)
                                                          q q1) =>
                                                   (A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     a
                                                     (matita_arithmetics_nat.plus
                                                        r
                                                        (matita_arithmetics_nat.times
                                                           b q)))))))))))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q r) =>
      ltrb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r b) =>
      spec :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b)
                r)) =>
      _clearme0 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q1
             r1) =>
      ltr1b :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r1 b) =>
      spec1 :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b)
                r1)) =>
      leqq1 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __) q q1) =>
      ltqq1 :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) q q1) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q) r)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              a x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times q b)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 a (matita_arithmetics_nat.plus x r)))
           spec (matita_arithmetics_nat.times b q)
           (matita_arithmetics_nat.commutative_times q b))
        (matita_arithmetics_nat.plus r (matita_arithmetics_nat.times b q))
        (matita_arithmetics_nat.commutative_plus
           (matita_arithmetics_nat.times b q) r).

def let_clause_1062 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (q1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (r1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                a b q r)
                             (_clearme :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     a b q r) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) r b)
                                (ltrb :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) r b) =>
                                 cic.prod cic.prop cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      a
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q b) r))
                                   (spec :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           a
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times q
                                                 b)
                                              r)) =>
                                    cic.prod cic.prop cic.prop cic.prop cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _q :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _r :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_div_and_mod.div_mod_spec
                                          _n _m _q _r)
                                         a b q1 r1)
                                      (_clearme0 :
                                         cic.Term cic.prop
                                           ((_n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _m :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _q :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _r :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_div_and_mod.div_mod_spec
                                               _n _m _q _r)
                                              a b q1 r1) =>
                                       cic.prod cic.prop cic.prop cic.prop
                                         cic.I
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            r1 b)
                                         (ltr1b :
                                            cic.Term cic.prop
                                              ((__ :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_nat.lt __
                                                  __1)
                                                 r1 b) =>
                                          cic.prod cic.prop cic.prop cic.prop
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               a
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     q1 b)
                                                  r1))
                                            (spec1 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    a
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          q1 b)
                                                       r1)) =>
                                             cic.prod cic.prop cic.prop
                                               cic.prop cic.I
                                               ((_A : cic.Univ cic.prop =>
                                                 matita_basics_logic.Not _A)
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     q q1))
                                               (leqq1 :
                                                  cic.Term cic.prop
                                                    ((_A :
                                                        cic.Univ cic.prop =>
                                                      matita_basics_logic.Not
                                                        _A)
                                                       ((_n :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_nat.le
                                                           _n __)
                                                          q q1)) =>
                                                (A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  a
                                                  (matita_arithmetics_nat.plus
                                                     r1
                                                     (matita_arithmetics_nat.times
                                                        b q1))))))))))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q r) =>
      ltrb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r b) =>
      spec :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q b)
                r)) =>
      _clearme0 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q1
             r1) =>
      ltr1b :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r1 b) =>
      spec1 :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             a
             (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q1 b)
                r1)) =>
      leqq1 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) q q1)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus (matita_arithmetics_nat.times b q1) r1)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              a x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times q1 b)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 a (matita_arithmetics_nat.plus x r1)))
           spec1 (matita_arithmetics_nat.times b q1)
           (matita_arithmetics_nat.commutative_times q1 b))
        (matita_arithmetics_nat.plus r1 (matita_arithmetics_nat.times b q1))
        (matita_arithmetics_nat.commutative_plus
           (matita_arithmetics_nat.times b q1) r1).

def div_mod_spec_to_eq :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (q1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (r1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                a b q r)
                             (__ :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     a b q r) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _q :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _r :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_div_and_mod.div_mod_spec
                                    _n _m _q _r)
                                   a b q1 r1)
                                (__1 :
                                   cic.Term cic.prop
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _q :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _r :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_div_and_mod.div_mod_spec
                                         _n _m _q _r)
                                        a b q1 r1) =>
                                 (A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __2 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   q q1)))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q r) =>
      matita_arithmetics_div_and_mod.match_div_mod_spec cic.prop a b q r
        (__ :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q
                r) =>
         cic.prod cic.prop cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q1
              r1)
           (__1 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a
                   b q1 r1) =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __2)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              q q1))
        (ltrb :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) r b) =>
         spec :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                a
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times q b) r)) =>
         _clearme0 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b
                q1 r1) =>
         matita_arithmetics_div_and_mod.match_div_mod_spec cic.prop a b q1 r1
           (__ :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a
                   b q1 r1) =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              q q1)
           (ltr1b :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1) r1 b) =>
            spec1 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   a
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q1 b) r1)) =>
            matita_arithmetics_nat.leb_elim q q1
              (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    q q1))
              (leqq1 :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) q q1) =>
               matita_basics_logic.Or_ind
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) q q1)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    q q1)
                 (_x_170 :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.Or _A _B)
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) q q1)
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            q q1)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       q q1))
                 (ltqq1 :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1) q q1) =>
                  matita_basics_logic.False_ind
                    (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                     cic.lift cic.prop cic.prop cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          q q1))
                    (matita_basics_logic.absurd
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_nat.S a) a)
                       (matita_arithmetics_nat.lt_to_le_to_lt a
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S q) b)
                          a
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times q b) r)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.times q b) r)) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2) x
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S q) b)))
                             (matita_basics_logic.eq_coerc
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q b) r)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q b) b)))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q b) r)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S q) b)))
                                (matita_arithmetics_nat.monotonic_lt_plus_r
                                   (matita_arithmetics_nat.times q b) r b
                                   ltrb)
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times b q)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               (matita_arithmetics_nat.plus x
                                                  r)
                                               (matita_arithmetics_nat.plus x
                                                  b)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               (matita_arithmetics_nat.plus x
                                                  r)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S q)
                                                  b)))))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus r
                                         (matita_arithmetics_nat.times b q))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        b q)
                                                     r)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        b q)
                                                     b)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        q)
                                                     b)))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         a
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b q)
                                                        r)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b q)
                                                        b)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     x
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.S
                                                           q)
                                                        b)))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.S q))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              b q)
                                                           r)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              b q)
                                                           b)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        a x))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus b
                                                  (matita_arithmetics_nat.times
                                                     b q))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 b q)
                                                              r)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 b q)
                                                              b)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           a x))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     r
                                                     (matita_arithmetics_nat.times
                                                        b q))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              x
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    b q)
                                                                 b)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              a
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    b q))))))
                                                  (matita_basics_logic.rewrite_l
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     a
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 x
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b q) b)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 a
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b q))))))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              b q))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1) a
                                                                    x))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1) a
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b q))))))
                                                        (matita_basics_logic.refl
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 a
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b q)))))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              b q)
                                                           b)
                                                        (matita_arithmetics_nat.commutative_plus
                                                           (matita_arithmetics_nat.times
                                                              b q)
                                                           b))
                                                     (matita_arithmetics_nat.plus
                                                        r
                                                        (matita_arithmetics_nat.times
                                                           b q))
                                                     (matita_arithmetics_div_and_mod.let_clause_1078
                                                        a b q r q1 r1
                                                        _clearme ltrb spec
                                                        _clearme0 ltr1b spec1
                                                        leqq1 ltqq1))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        b q)
                                                     r)
                                                  (matita_arithmetics_nat.commutative_plus
                                                     (matita_arithmetics_nat.times
                                                        b q)
                                                     r))
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.S q))
                                               (matita_arithmetics_nat.times_n_Sm
                                                  b q))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S q) b)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_nat.S q) b))
                                         (matita_arithmetics_nat.plus r
                                            (matita_arithmetics_nat.times b q))
                                         (matita_arithmetics_div_and_mod.let_clause_1078
                                            a b q r q1 r1 _clearme ltrb spec
                                            _clearme0 ltr1b spec1 leqq1 ltqq1))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b q) r)
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_nat.times b q) r))
                                   (matita_arithmetics_nat.times q b)
                                   (matita_arithmetics_nat.commutative_times
                                      q b)))
                             a spec)
                          (matita_arithmetics_nat.transitive_le
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S q) b)
                             (matita_arithmetics_nat.times q1 b) a
                             (matita_basics_logic.eq_coerc
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_nat.S q))
                                      (matita_arithmetics_nat.times b q1)))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S q) b)
                                      (matita_arithmetics_nat.times q1 b)))
                                (matita_arithmetics_nat.monotonic_le_times_r
                                   b (matita_arithmetics_nat.S q) q1 ltqq1)
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times b
                                      (matita_arithmetics_nat.S q))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.S q))
                                               (matita_arithmetics_nat.times
                                                  b q1)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               x
                                               (matita_arithmetics_nat.times
                                                  q1 b)))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times b q))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b
                                                     (matita_arithmetics_nat.S
                                                        q))
                                                  (matita_arithmetics_nat.times
                                                     b q1)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     q1 b)))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times b q1)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.times
                                                        b
                                                        (matita_arithmetics_nat.S
                                                           q))
                                                     (matita_arithmetics_nat.times
                                                        b q1)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           b q))
                                                     x))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  b q))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        x
                                                        (matita_arithmetics_nat.times
                                                           b q1)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              b q))
                                                        (matita_arithmetics_nat.times
                                                           b q1)))))
                                            (matita_basics_logic.refl
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           b q))
                                                     (matita_arithmetics_nat.times
                                                        b q1))))
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.S q))
                                            (matita_arithmetics_nat.times_n_Sm
                                               b q))
                                         (matita_arithmetics_nat.times q1 b)
                                         (matita_arithmetics_nat.commutative_times
                                            q1 b))
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_nat.S q))
                                      (matita_arithmetics_nat.times_n_Sm b q))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S q) b)
                                   (matita_arithmetics_nat.commutative_times
                                      (matita_arithmetics_nat.S q) b)))
                             (matita_basics_logic.eq_coerc
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times q1 b)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q1 b)
                                         r1)))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times q1 b) a))
                                (matita_arithmetics_nat.le_plus_n_r r1
                                   (matita_arithmetics_nat.times q1 b))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times b q1)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               x
                                               (matita_arithmetics_nat.plus x
                                                  r1)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               x a))))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus r1
                                         (matita_arithmetics_nat.times b q1))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  x))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  a))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         a
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.times
                                                        b q1)
                                                     x))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.times
                                                        b q1)
                                                     a))))
                                         (matita_basics_logic.refl
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  a)))
                                         (matita_arithmetics_nat.plus r1
                                            (matita_arithmetics_nat.times b
                                               q1))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  b q1)
                                               r1)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  a x))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  q1 b)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     a
                                                     (matita_arithmetics_nat.plus
                                                        x r1)))
                                               spec1
                                               (matita_arithmetics_nat.times
                                                  b q1)
                                               (matita_arithmetics_nat.commutative_times
                                                  q1 b))
                                            (matita_arithmetics_nat.plus r1
                                               (matita_arithmetics_nat.times
                                                  b q1))
                                            (matita_arithmetics_nat.commutative_plus
                                               (matita_arithmetics_nat.times
                                                  b q1)
                                               r1)))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b q1)
                                         r1)
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_nat.times b q1)
                                         r1))
                                   (matita_arithmetics_nat.times q1 b)
                                   (matita_arithmetics_nat.commutative_times
                                      q1 b)))))
                       (matita_arithmetics_nat.not_le_Sn_n a)))
                 (_x_172 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         q q1) =>
                  matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    q
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          q x))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       q)
                    q1 _x_172)
                 (matita_arithmetics_nat.le_to_or_lt_eq q q1 leqq1))
              (leqq1 :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __) q q1)) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       q q1))
                 (matita_basics_logic.absurd
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.S a) a)
                    (matita_arithmetics_nat.lt_to_le_to_lt a
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S q1) b)
                       a
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q1 b) r1)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times q1 b) r1)) =>
                           cic.lift cic.prop cic.prop cic.I
                             ((__1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __1 __2) x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S q1) b)))
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q1 b) r1)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q1 b) b)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q1 b) r1)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S q1) b)))
                             (matita_arithmetics_nat.monotonic_lt_plus_r
                                (matita_arithmetics_nat.times q1 b) r1 b
                                ltr1b)
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times b q1)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            (matita_arithmetics_nat.plus x r1)
                                            (matita_arithmetics_nat.plus x b)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            (matita_arithmetics_nat.plus x r1)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S q1)
                                               b)))))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus r1
                                      (matita_arithmetics_nat.times b q1))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  r1)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  b)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               x
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     q1)
                                                  b)))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      a
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        b q1)
                                                     r1)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        b q1)
                                                     b)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        q1)
                                                     b)))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_nat.S q1))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b q1)
                                                        r1)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b q1)
                                                        b)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     a x))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  b q1))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              b q1)
                                                           r1)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              b q1)
                                                           b)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        a x))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  r1
                                                  (matita_arithmetics_nat.times
                                                     b q1))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 b q1)
                                                              b)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           a
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 b q1))))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  a
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              x
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    b q1)
                                                                 b)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              a
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    b q1))))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           b q1))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 a x))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 a
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b q1))))))
                                                     (matita_basics_logic.refl
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              a
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    b q1)))))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b q1)
                                                        b)
                                                     (matita_arithmetics_nat.commutative_plus
                                                        (matita_arithmetics_nat.times
                                                           b q1)
                                                        b))
                                                  (matita_arithmetics_nat.plus
                                                     r1
                                                     (matita_arithmetics_nat.times
                                                        b q1))
                                                  (matita_arithmetics_div_and_mod.let_clause_1062
                                                     a b q r q1 r1 _clearme
                                                     ltrb spec _clearme0
                                                     ltr1b spec1 leqq1))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  r1)
                                               (matita_arithmetics_nat.commutative_plus
                                                  (matita_arithmetics_nat.times
                                                     b q1)
                                                  r1))
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.S q1))
                                            (matita_arithmetics_nat.times_n_Sm
                                               b q1))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S q1) b)
                                         (matita_arithmetics_nat.commutative_times
                                            (matita_arithmetics_nat.S q1) b))
                                      (matita_arithmetics_nat.plus r1
                                         (matita_arithmetics_nat.times b q1))
                                      (matita_arithmetics_div_and_mod.let_clause_1062
                                         a b q r q1 r1 _clearme ltrb spec
                                         _clearme0 ltr1b spec1 leqq1))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b q1) r1)
                                   (matita_arithmetics_nat.commutative_plus
                                      (matita_arithmetics_nat.times b q1) r1))
                                (matita_arithmetics_nat.times q1 b)
                                (matita_arithmetics_nat.commutative_times q1
                                   b)))
                          a spec1)
                       (matita_arithmetics_nat.transitive_le
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S q1) b)
                          (matita_arithmetics_nat.times q b) a
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times b
                                      (matita_arithmetics_nat.S q1))
                                   (matita_arithmetics_nat.times b q)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S q1) b)
                                   (matita_arithmetics_nat.times q b)))
                             (matita_arithmetics_nat.monotonic_le_times_r b
                                (matita_arithmetics_nat.S q1) q
                                (matita_arithmetics_nat.not_le_to_lt q q1
                                   leqq1))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_nat.S q1))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.S q1))
                                            (matita_arithmetics_nat.times b q)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) x
                                            (matita_arithmetics_nat.times q b)))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times b q1))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.S
                                                     q1))
                                               (matita_arithmetics_nat.times
                                                  b q)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               x
                                               (matita_arithmetics_nat.times
                                                  q b)))))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times b q)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b
                                                     (matita_arithmetics_nat.S
                                                        q1))
                                                  (matita_arithmetics_nat.times
                                                     b q)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        b q1))
                                                  x))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times b
                                               q1))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     x
                                                     (matita_arithmetics_nat.times
                                                        b q)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           b q1))
                                                     (matita_arithmetics_nat.times
                                                        b q)))))
                                         (matita_basics_logic.refl
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        b q1))
                                                  (matita_arithmetics_nat.times
                                                     b q))))
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_nat.S q1))
                                         (matita_arithmetics_nat.times_n_Sm b
                                            q1))
                                      (matita_arithmetics_nat.times q b)
                                      (matita_arithmetics_nat.commutative_times
                                         q b))
                                   (matita_arithmetics_nat.times b
                                      (matita_arithmetics_nat.S q1))
                                   (matita_arithmetics_nat.times_n_Sm b q1))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S q1) b)
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_nat.S q1) b)))
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times q b)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q b) r)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times q b) a))
                             (matita_arithmetics_nat.le_plus_n_r r
                                (matita_arithmetics_nat.times q b))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times b q)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) x
                                            (matita_arithmetics_nat.plus x r)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) x
                                            a))))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus r
                                      (matita_arithmetics_nat.times b q))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b q)
                                               x))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b q)
                                               a))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      a
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b q)
                                                  x))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.times
                                                     b q)
                                                  a))))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b q)
                                               a)))
                                      (matita_arithmetics_nat.plus r
                                         (matita_arithmetics_nat.times b q))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times b q)
                                            r)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               a x))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times q b)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  a
                                                  (matita_arithmetics_nat.plus
                                                     x r)))
                                            spec
                                            (matita_arithmetics_nat.times b q)
                                            (matita_arithmetics_nat.commutative_times
                                               q b))
                                         (matita_arithmetics_nat.plus r
                                            (matita_arithmetics_nat.times b q))
                                         (matita_arithmetics_nat.commutative_plus
                                            (matita_arithmetics_nat.times b q)
                                            r)))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b q) r)
                                   (matita_arithmetics_nat.commutative_plus
                                      (matita_arithmetics_nat.times b q) r))
                                (matita_arithmetics_nat.times q b)
                                (matita_arithmetics_nat.commutative_times q b)))))
                    (matita_arithmetics_nat.not_le_Sn_n a))))
           _clearme0)
        _clearme.

def div_mod_spec_to_eq2 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    matita_arithmetics_nat.nat
                    (r :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       matita_arithmetics_nat.nat
                       (q1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (r1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _q :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _r :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_div_and_mod.div_mod_spec _n
                                 _m _q _r)
                                a b q r)
                             (__ :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _q :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _r :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_div_and_mod.div_mod_spec
                                      _n _m _q _r)
                                     a b q r) =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _q :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _r :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_div_and_mod.div_mod_spec
                                    _n _m _q _r)
                                   a b q1 r1)
                                (__1 :
                                   cic.Term cic.prop
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _q :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _r :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_div_and_mod.div_mod_spec
                                         _n _m _q _r)
                                        a b q1 r1) =>
                                 (A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __2 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   r r1)))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      spec :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q r) =>
      spec1 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q1
             r1) =>
      matita_arithmetics_div_and_mod.div_mod_spec_ind a b q r
        (_x_809 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a b q
                r) =>
         cic.lift cic.prop cic.prop cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              r r1))
        (__ :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) r b) =>
         eqa :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __1)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                a
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times q b) r)) =>
         matita_arithmetics_div_and_mod.div_mod_spec_ind a b q1 r1
           (_x_809 :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _q :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _r :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r) a
                   b q1 r1) =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 r r1))
           (_0 :
              cic.Term cic.prop
                ((__1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __2 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __1 __2) r1 b) =>
            eqa1 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   a
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_nat.times q1 b) r1)) =>
            matita_arithmetics_nat.injective_plus_r
              (matita_arithmetics_nat.times q b) r r1
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times b q)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus x r)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q b) r1)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus r
                       (matita_arithmetics_nat.times b q))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q b) r1)))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       a
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times q b) r1)))
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times b q)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                a (matita_arithmetics_nat.plus x r1)))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus r1
                                (matita_arithmetics_nat.times b q))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   a x))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                a
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __1 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      a x))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   a)
                                (matita_arithmetics_nat.plus r1
                                   (matita_arithmetics_nat.times b q))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   q1
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         a
                                         (matita_arithmetics_nat.plus r1
                                            (matita_arithmetics_nat.times b x))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b q1)
                                         r1)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            a x))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times q1 b)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __1 :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __1)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               a
                                               (matita_arithmetics_nat.plus x
                                                  r1)))
                                         eqa1
                                         (matita_arithmetics_nat.times b q1)
                                         (matita_arithmetics_nat.commutative_times
                                            q1 b))
                                      (matita_arithmetics_nat.plus r1
                                         (matita_arithmetics_nat.times b q1))
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_nat.times b q1)
                                         r1))
                                   q
                                   (matita_arithmetics_div_and_mod.div_mod_spec_to_eq
                                      a b q r q1 r1 spec spec1)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times b q) r1)
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.times b q) r1))
                          (matita_arithmetics_nat.times q b)
                          (matita_arithmetics_nat.commutative_times q b))
                       (matita_arithmetics_nat.plus r
                          (matita_arithmetics_nat.times b q))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times b q) r)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                a x))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times q b)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   a (matita_arithmetics_nat.plus x r)))
                             eqa (matita_arithmetics_nat.times b q)
                             (matita_arithmetics_nat.commutative_times q b))
                          (matita_arithmetics_nat.plus r
                             (matita_arithmetics_nat.times b q))
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.times b q) r)))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b q) r)
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times b q) r))
                 (matita_arithmetics_nat.times q b)
                 (matita_arithmetics_nat.commutative_times q b)))
           spec1)
        spec.

def div_plus_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) r m)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) r m) =>
                     (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q m) r)
                          m)
                       q)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltrm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq
        (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m)
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m)
        q r
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m (matita_arithmetics_nat.ltn_to_ltO r m ltrm))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m q r ltrm
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times m q)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus x r)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times q m) r)))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus r
                    (matita_arithmetics_nat.times m q))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q m) r)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times m q)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus r
                             (matita_arithmetics_nat.times m q))
                          (matita_arithmetics_nat.plus x r)))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times m q) r)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times m q) r)))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times m q) r))
                       (matita_arithmetics_nat.plus r
                          (matita_arithmetics_nat.times m q))
                       (matita_arithmetics_nat.commutative_plus r
                          (matita_arithmetics_nat.times m q)))
                    (matita_arithmetics_nat.times q m)
                    (matita_arithmetics_nat.commutative_times q m))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times m q) r)
                 (matita_arithmetics_nat.commutative_plus
                    (matita_arithmetics_nat.times m q) r))
              (matita_arithmetics_nat.times q m)
              (matita_arithmetics_nat.commutative_times q m))).

def mod_plus_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) r m)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) r m) =>
                     (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q m) r)
                          m)
                       r)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltrm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) r m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
        (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r) m
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m)
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m)
        q r
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m (matita_arithmetics_nat.ltn_to_ltO r m ltrm))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_nat.plus (matita_arithmetics_nat.times q m) r)
           m q r ltrm
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times m q)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus x r)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times q m) r)))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus r
                    (matita_arithmetics_nat.times m q))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q m) r)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus r
                       (matita_arithmetics_nat.times q m))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus r
                             (matita_arithmetics_nat.times m q))
                          x))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times q m)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus r x)
                             (matita_arithmetics_nat.plus r
                                (matita_arithmetics_nat.times q m))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus r
                             (matita_arithmetics_nat.times q m)))
                       (matita_arithmetics_nat.times m q)
                       (matita_arithmetics_nat.commutative_times m q))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times q m) r)
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times q m) r))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times m q) r)
                 (matita_arithmetics_nat.commutative_plus
                    (matita_arithmetics_nat.times m q) r))
              (matita_arithmetics_nat.times q m)
              (matita_arithmetics_nat.commutative_times q m))).

def div_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    b)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O b) =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.times a b) b)
                    a))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O b) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq
        (matita_arithmetics_nat.times a b) b
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_nat.times a b) b)
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_nat.times a b) b)
        a matita_arithmetics_nat.O
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
           (matita_arithmetics_nat.times a b) b posb)
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_nat.times a b) b a matita_arithmetics_nat.O
           posb
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                 (matita_arithmetics_nat.times a b))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times a b) x))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times a b)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times a b) x))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times a b))
                 (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                    (matita_arithmetics_nat.times a b))
                 (matita_arithmetics_nat.plus_O_n
                    (matita_arithmetics_nat.times a b)))
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times a b)
                 matita_arithmetics_nat.O)
              (matita_arithmetics_nat.commutative_plus
                 (matita_arithmetics_nat.times a b) matita_arithmetics_nat.O))).

def div_n_n :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O n) =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.div n n)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      auto :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      matita_basics_logic.eq_coerc
        (cic.lift cic.prop (cic.type cic.z) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
                    matita_arithmetics_nat.O)
                 n)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (cic.lift cic.prop (cic.type cic.z) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.div n n)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_arithmetics_div_and_mod.div_plus_times n
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.O auto)
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div x n)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div n n)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              n
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div x n)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div n n)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
              (matita_basics_logic.refl
                 (cic.lift (cic.type (cic.s cic.z))
                    (cic.type (cic.s (cic.s cic.z))) cic.I
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div n n)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          n)
                       x))
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
                 n (matita_arithmetics_nat.times_n_1 n)))
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              matita_arithmetics_nat.O)
           (matita_arithmetics_nat.plus_n_O
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n))).

def eq_div_O :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) n m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1) n m) =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div n m)
                    matita_arithmetics_nat.O))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltnm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) n m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq n m
        (matita_arithmetics_div_and_mod.div n m)
        (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O n
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod n m
           (matita_arithmetics_nat.ltn_to_ltO n m ltnm))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro n m
           matita_arithmetics_nat.O n ltnm
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n (matita_arithmetics_nat.plus x n)))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n (matita_arithmetics_nat.plus x n)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n)
                       (matita_arithmetics_nat.plus n
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O n))
                    (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                    (matita_arithmetics_nat.commutative_plus
                       matita_arithmetics_nat.O n))
                 (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.times_n_O m))
              (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
              (matita_arithmetics_nat.commutative_times
                 matita_arithmetics_nat.O m))).

def mod_n_n :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O n) =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.mod n n)
                 matita_arithmetics_nat.O)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq2 n n
        (matita_arithmetics_div_and_mod.div n n)
        (matita_arithmetics_div_and_mod.mod n n)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        matita_arithmetics_nat.O
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod n n posn)
        (matita_arithmetics_div_and_mod.div_mod_spec_intro n n
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.O posn
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times n
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n
                    (matita_arithmetics_nat.plus x matita_arithmetics_nat.O)))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus n
                    (matita_arithmetics_nat.times n matita_arithmetics_nat.O))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.plus x
                          matita_arithmetics_nat.O)))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.plus n x)
                             matita_arithmetics_nat.O)))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n
                             (matita_arithmetics_nat.plus x
                                matita_arithmetics_nat.O)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n x))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n)
                          (matita_arithmetics_nat.plus n
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.plus_n_O n))
                       (matita_arithmetics_nat.plus n
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O n))
                    (matita_arithmetics_nat.times n matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.times_n_O n))
                 (matita_arithmetics_nat.times n
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times_n_Sm n
                    matita_arithmetics_nat.O))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (matita_arithmetics_nat.commutative_times
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n))).

def mod_S :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n m))
                       m)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_div_and_mod.mod n m))
                            m) =>
                     (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.S n) m)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n m)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      H :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1)
             (matita_arithmetics_nat.S
                (matita_arithmetics_div_and_mod.mod n m))
             m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
        (matita_arithmetics_nat.S n) m
        (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.S n) m)
        (matita_arithmetics_div_and_mod.mod (matita_arithmetics_nat.S n) m)
        (matita_arithmetics_div_and_mod.div n m)
        (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n m))
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
           (matita_arithmetics_nat.S n) m posm)
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_nat.S n) m
           (matita_arithmetics_div_and_mod.div n m)
           (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n m))
           H
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m))
                          (matita_arithmetics_div_and_mod.mod n m)))))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n m) m)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n m)))))
              (matita_basics_logic.eq_f
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.S n
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times m
                       (matita_arithmetics_div_and_mod.div n m))
                    (matita_arithmetics_div_and_mod.mod n m))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod n m)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n m)
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div n m))
                             (matita_arithmetics_div_and_mod.mod n m))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n x))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div n m) m)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n
                                   (matita_arithmetics_nat.plus x
                                      (matita_arithmetics_div_and_mod.mod n m))))
                             (matita_arithmetics_div_and_mod.div_mod n m)
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div n m))
                             (matita_arithmetics_nat.commutative_times
                                (matita_arithmetics_div_and_mod.div n m) m))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod n m)
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div n m)))
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div n m))
                             (matita_arithmetics_div_and_mod.mod n m))))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.mod n m))
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.mod n m))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div n m))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m))
                                   (matita_arithmetics_div_and_mod.mod n m)))))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n)
                             (matita_arithmetics_nat.plus x
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_div_and_mod.mod n m)))))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n m)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n) x))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_div_and_mod.mod n m)))))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_div_and_mod.mod n m))))))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m))
                          (matita_arithmetics_div_and_mod.mod n m)))
                    (matita_arithmetics_nat.plus_n_Sm
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.mod n m)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n m) m)
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_div_and_mod.div n m) m)))).

def mod_O_n :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod matita_arithmetics_nat.O n)
              matita_arithmetics_nat.O))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.sym_eq
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        matita_arithmetics_nat.O
        (matita_arithmetics_div_and_mod.mod matita_arithmetics_nat.O n)
        (matita_basics_logic.eq_coerc
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (matita_arithmetics_div_and_mod.mod matita_arithmetics_nat.O
                    n)))
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (matita_arithmetics_div_and_mod.mod matita_arithmetics_nat.O
                    n)))
           (matita_arithmetics_nat.le_n_O_to_eq
              (matita_arithmetics_div_and_mod.mod matita_arithmetics_nat.O n)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod
                                matita_arithmetics_nat.O n)
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.div
                                   matita_arithmetics_nat.O n)))
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.div
                                   matita_arithmetics_nat.O n))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod
                             matita_arithmetics_nat.O n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div
                                matita_arithmetics_nat.O n)))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_div_and_mod.mod
                          matita_arithmetics_nat.O n)
                       matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.minus_le
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod
                          matita_arithmetics_nat.O n)
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div
                             matita_arithmetics_nat.O n)))
                    (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div
                             matita_arithmetics_nat.O n))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_div_and_mod.mod
                          matita_arithmetics_nat.O n)
                       matita_arithmetics_nat.O)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) x
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod
                                      matita_arithmetics_nat.O n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.div
                                         matita_arithmetics_nat.O n)))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_div_and_mod.mod
                                   matita_arithmetics_nat.O n)
                                matita_arithmetics_nat.O))))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.mod
                          matita_arithmetics_nat.O n)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) x
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod
                                         matita_arithmetics_nat.O n)
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_div_and_mod.div
                                            matita_arithmetics_nat.O n)))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_div_and_mod.mod
                                      matita_arithmetics_nat.O n)
                                   matita_arithmetics_nat.O))))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_div_and_mod.mod
                                         matita_arithmetics_nat.O n)
                                      x))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_div_and_mod.mod
                                         matita_arithmetics_nat.O n)
                                      matita_arithmetics_nat.O))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_div_and_mod.mod
                                      matita_arithmetics_nat.O n)
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod
                                matita_arithmetics_nat.O n)
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.div
                                   matita_arithmetics_nat.O n)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n))
                                (matita_arithmetics_div_and_mod.mod
                                   matita_arithmetics_nat.O n))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   matita_arithmetics_nat.O x))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n)
                                   n)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      (matita_arithmetics_nat.plus x
                                         (matita_arithmetics_div_and_mod.mod
                                            matita_arithmetics_nat.O n))))
                                (matita_arithmetics_div_and_mod.div_mod
                                   matita_arithmetics_nat.O n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n))
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n)
                                   n))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod
                                   matita_arithmetics_nat.O n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n)))
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div
                                      matita_arithmetics_nat.O n))
                                (matita_arithmetics_div_and_mod.mod
                                   matita_arithmetics_nat.O n))))
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_div_and_mod.mod
                             matita_arithmetics_nat.O n)
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.minus_n_O
                          (matita_arithmetics_div_and_mod.mod
                             matita_arithmetics_nat.O n)))
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod
                             matita_arithmetics_nat.O n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div
                                matita_arithmetics_nat.O n)))
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div
                                matita_arithmetics_nat.O n))))
                    (matita_arithmetics_nat.minus_plus_plus_l
                       (matita_arithmetics_div_and_mod.mod
                          matita_arithmetics_nat.O n)
                       matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div
                             matita_arithmetics_nat.O n))))))
           (matita_basics_logic.refl
              (cic.lift (cic.type (cic.s cic.z))
                 (cic.type (cic.s (cic.s cic.z))) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (matita_arithmetics_div_and_mod.mod
                       matita_arithmetics_nat.O n))))).

def lt_to_eq_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) n m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1) n m) =>
                  (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.mod n m) n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltnm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) n m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq2 n m
        (matita_arithmetics_div_and_mod.div n m)
        (matita_arithmetics_div_and_mod.mod n m) matita_arithmetics_nat.O n
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod n m
           (matita_arithmetics_nat.ltn_to_ltO n m ltnm))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro n m
           matita_arithmetics_nat.O n ltnm
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n (matita_arithmetics_nat.plus x n)))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n (matita_arithmetics_nat.plus x n)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus n matita_arithmetics_nat.O)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       n
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n)
                       (matita_arithmetics_nat.plus n
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.plus_n_O n))
                    (matita_arithmetics_nat.plus matita_arithmetics_nat.O n)
                    (matita_arithmetics_nat.commutative_plus
                       matita_arithmetics_nat.O n))
                 (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.times_n_O m))
              (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
              (matita_arithmetics_nat.commutative_times
                 matita_arithmetics_nat.O m))).

def or_div_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    q)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O q) =>
                  (_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.mod n q))
                          q)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_div_and_mod.div n q))
                             q)))
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.mod n q))
                          q)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div n q) q)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_div_and_mod.mod n q)))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posq :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O q) =>
      matita_basics_logic.Or_ind
        ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.lt __ __1)
           (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
           q)
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) cic.I A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
           q)
        (_x_170 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_div_and_mod.mod n q))
                   q)
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_div_and_mod.mod n q))
                   q)) =>
         cic.lift cic.prop cic.prop cic.I
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.div n q))
                       q)))
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.mod n q))
                    q)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S n)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div n q) q)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n q)))))))
        (H :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_div_and_mod.mod n q))
                q) =>
         matita_basics_logic.or_intror
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q))
                    q)))
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.mod n q)))))
           (matita_basics_logic.conj
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.mod n q))))
              H
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_div_and_mod.div n q))
                             (matita_arithmetics_div_and_mod.mod n q)))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q) q)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.mod n q)))))
                 (matita_basics_logic.eq_f
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.S n
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times q
                          (matita_arithmetics_div_and_mod.div n q))
                       (matita_arithmetics_div_and_mod.mod n q))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n q)
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n x))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod n q)
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_div_and_mod.div n q)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_div_and_mod.mod n q))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n x))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n q) q)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      n
                                      (matita_arithmetics_nat.plus x
                                         (matita_arithmetics_div_and_mod.mod
                                            n q))))
                                (matita_arithmetics_div_and_mod.div_mod n q)
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_div_and_mod.div n q) q))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod n q)
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q)))
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_div_and_mod.mod n q))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times q
                       (matita_arithmetics_div_and_mod.div n q))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_div_and_mod.div
                                            n q))
                                      (matita_arithmetics_div_and_mod.mod n q)))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n)
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_div_and_mod.mod n q)))))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.mod n q)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n) x))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S n)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_div_and_mod.div
                                            n q))
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_div_and_mod.mod
                                            n q)))))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S n)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_div_and_mod.div n q))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_div_and_mod.mod n q))))))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_div_and_mod.div n q))
                             (matita_arithmetics_div_and_mod.mod n q)))
                       (matita_arithmetics_nat.plus_n_Sm
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_div_and_mod.div n q) q)))))
        (H :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_div_and_mod.mod n q))
                q) =>
         matita_basics_logic.or_introl
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q))
                    q)))
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.mod n q)))))
           (matita_basics_logic.conj
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 q)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S n)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q))
                    q))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 q
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       x q))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    q)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod n q))
                 H)
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times q
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n) x))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus q
                       (matita_arithmetics_nat.times q
                          (matita_arithmetics_div_and_mod.div n q)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n) x))
                    (matita_basics_logic.eq_ind
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod n q))
                       (x_1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_div_and_mod.mod n q))
                               x_1) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S n)
                             (matita_arithmetics_nat.plus x_1
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q)))))
                       (matita_basics_logic.eq_f
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.S n
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod n q)
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_div_and_mod.div n q)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n x))
                             (matita_basics_logic.refl
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod n q)
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q)))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_div_and_mod.div n q))
                                   (matita_arithmetics_div_and_mod.mod n q))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      n x))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         n
                                         (matita_arithmetics_nat.plus x
                                            (matita_arithmetics_div_and_mod.mod
                                               n q))))
                                   (matita_arithmetics_div_and_mod.div_mod n
                                      q)
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_div_and_mod.div n q))
                                   (matita_arithmetics_nat.commutative_times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod n q)
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_div_and_mod.div n q)))
                                (matita_arithmetics_nat.commutative_plus
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_div_and_mod.div n q))
                                   (matita_arithmetics_div_and_mod.mod n q)))))
                       q H)
                    (matita_arithmetics_nat.times q
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.div n q)))
                    (matita_arithmetics_nat.times_n_Sm q
                       (matita_arithmetics_div_and_mod.div n q)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q))
                    q)
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n q))
                    q))))
        (matita_arithmetics_nat.le_to_or_lt_eq
           (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.mod n q))
           q (matita_arithmetics_div_and_mod.lt_mod_m_m n q posq)).

def injective_times_r :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O n) =>
               (A : cic.Univ (cic.type cic.z) =>
                B : cic.Univ (cic.type cic.z) =>
                _f :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A => B)) =>
                matita_basics_relations.injective
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B) _f)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.times n m))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      eqn :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.times n a)
             (matita_arithmetics_nat.times n b)) =>
      matita_basics_logic.eq_ind
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_nat.times a n) n)
        (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _x_2 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                (matita_arithmetics_div_and_mod.div
                   (matita_arithmetics_nat.times a n) n)
                x_1) =>
         cic.lift cic.prop cic.prop cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              x_1 b))
        (matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_nat.times b n) n)
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_nat.times b n) n)
                   x_1) =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_nat.times a n) n)
                 x_1))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times n a)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div x n)
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.times b n) n)))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times n b)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.times n a) n)
                       (matita_arithmetics_div_and_mod.div x n)))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times n a)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_nat.times n a) n)
                          (matita_arithmetics_div_and_mod.div x n)))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.times n a) n))
                    (matita_arithmetics_nat.times n b) eqn)
                 (matita_arithmetics_nat.times b n)
                 (matita_arithmetics_nat.commutative_times b n))
              (matita_arithmetics_nat.times a n)
              (matita_arithmetics_nat.commutative_times a n))
           b (matita_arithmetics_div_and_mod.div_times b n posn))
        a (matita_arithmetics_div_and_mod.div_times a n posn).

def injective_times_l :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O n) =>
               (A : cic.Univ (cic.type cic.z) =>
                B : cic.Univ (cic.type cic.z) =>
                _f :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A => B)) =>
                matita_basics_relations.injective
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B) _f)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.times m n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      auto :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      y : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      auto' :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.times x n)
             (matita_arithmetics_nat.times y n)) =>
      matita_arithmetics_div_and_mod.injective_times_r n auto x y
        (matita_basics_logic.rewrite_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times n y)
           (x0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 x0 (matita_arithmetics_nat.times n y)))
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times n y))
           (matita_arithmetics_nat.times n x)
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times y n)
              (x0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times n x) x0))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times x n)
                 (x0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       x0 (matita_arithmetics_nat.times y n)))
                 auto' (matita_arithmetics_nat.times n x)
                 (matita_arithmetics_nat.commutative_times x n))
              (matita_arithmetics_nat.times n y)
              (matita_arithmetics_nat.commutative_times y n))).

def lt_div_S :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  (__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2) n
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.div n m))
                       m)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div n m) m)
           (matita_arithmetics_div_and_mod.mod n m))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div n m) m)
                   (matita_arithmetics_div_and_mod.mod n m))) =>
         cic.lift cic.prop cic.prop cic.I
           ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __1 __2) x
              (matita_arithmetics_nat.plus m
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n m) m))))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod n m)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div n m) m))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.mod n m)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_div_and_mod.div n m) m))) =>
            cic.lift cic.prop cic.prop cic.I
              ((__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __1 __2) x
                 (matita_arithmetics_nat.plus m
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n m) m))))
           (matita_arithmetics_nat.monotonic_lt_plus_l
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_arithmetics_div_and_mod.mod n m) m
              (matita_arithmetics_div_and_mod.lt_mod_m_m n m posm))
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_arithmetics_div_and_mod.mod n m))
           (matita_arithmetics_nat.commutative_plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div n m) m)
              (matita_arithmetics_div_and_mod.mod n m)))
        n (matita_arithmetics_div_and_mod.div_mod n m).

def le_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    n)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O n) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_div_and_mod.div m n) m))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div m n) n)
           (matita_arithmetics_div_and_mod.mod m n))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_div_and_mod.div m n) n)
                   (matita_arithmetics_div_and_mod.mod m n))) =>
         cic.lift cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1)
              (matita_arithmetics_div_and_mod.div m n) x))
        (matita_arithmetics_nat.transitive_le
           (matita_arithmetics_div_and_mod.div m n)
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div m n) n)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div m n) n)
              (matita_arithmetics_div_and_mod.mod m n))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div m n)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div m n) n)))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_div_and_mod.div m n)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div m n) n)))
              (matita_arithmetics_nat.monotonic_le_times_r
                 (matita_arithmetics_div_and_mod.div m n)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n posn)
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times n
                    (matita_arithmetics_div_and_mod.div m n))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m n) n)))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_div_and_mod.div m n) x))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div m n)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div m n) n)))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_div_and_mod.div m n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div m n))))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div m n))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_div_and_mod.div m n) x))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_div_and_mod.div m n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.div m n))))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_div_and_mod.div m n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div m n)))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div m n) n)
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_div_and_mod.div m n) n))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div m n)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.times_n_1
                       (matita_arithmetics_div_and_mod.div m n)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div m n) n)
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_div_and_mod.div m n) n)))
           (matita_arithmetics_nat.le_plus_n_r
              (matita_arithmetics_div_and_mod.mod m n)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div m n) n)))
        m (matita_arithmetics_div_and_mod.div_mod m n).

def le_plus_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O q)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O q) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.plus m n) q)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod m q)
                          (matita_arithmetics_div_and_mod.mod n q)))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posq :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O q) =>
      matita_basics_logic.Or_ind
        ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.le _n __) q
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod m q)
              (matita_arithmetics_div_and_mod.mod n q)))
        ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __) q
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod m q)
                 (matita_arithmetics_div_and_mod.mod n q))))
        (_x_170 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __) q
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.mod m q)
                      (matita_arithmetics_div_and_mod.mod n q)))
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) q
                      (matita_arithmetics_nat.plus
                         (matita_arithmetics_div_and_mod.mod m q)
                         (matita_arithmetics_div_and_mod.mod n q))))) =>
         cic.lift cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_nat.plus m n) q)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod m q)
                 (matita_arithmetics_div_and_mod.mod n q))))
        (Hle :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) q
                (matita_arithmetics_nat.plus
                   (matita_arithmetics_div_and_mod.mod m q)
                   (matita_arithmetics_div_and_mod.mod n q))) =>
         matita_arithmetics_nat.transitive_le
           (matita_arithmetics_div_and_mod.mod
              (matita_arithmetics_nat.plus m n) q)
           q
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod m q)
              (matita_arithmetics_div_and_mod.mod n q))
           (matita_arithmetics_nat.le_S_S_to_le
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_nat.plus m n) q)
              q
              (matita_arithmetics_nat.le_S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_nat.plus m n) q))
                 q
                 (matita_arithmetics_div_and_mod.lt_mod_m_m
                    (matita_arithmetics_nat.plus m n) q posq)))
           Hle)
        (Hle :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __) q
                   (matita_arithmetics_nat.plus
                      (matita_arithmetics_div_and_mod.mod m q)
                      (matita_arithmetics_div_and_mod.mod n q)))) =>
         matita_basics_logic.eq_coerc
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.plus m n) q)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_nat.plus m n) q)
                    matita_arithmetics_nat.O)))
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.plus m n) q)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod m q)
                    (matita_arithmetics_div_and_mod.mod n q))))
           (matita_arithmetics_nat.le_plus_n_r matita_arithmetics_nat.O
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_nat.plus m n) q))
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_nat.plus m n) q)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.plus m n) q)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.plus m n) q)
                             matita_arithmetics_nat.O)))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.plus m n) q)
                          x))))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.plus m n) q)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.plus m n) q)
                             x))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.plus m n) q)
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.plus m n) q)))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.plus m n) q)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.plus m n) q))))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_nat.plus m n) q)
                    matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.plus_n_O
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_nat.plus m n) q)))
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod m q)
                 (matita_arithmetics_div_and_mod.mod n q))
              (matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
                 (matita_arithmetics_nat.plus m n) q
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_nat.plus m n) q)
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.plus m n) q)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.div m q)
                    (matita_arithmetics_div_and_mod.div n q))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod m q)
                    (matita_arithmetics_div_and_mod.mod n q))
                 (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
                    (matita_arithmetics_nat.plus m n) q posq)
                 (matita_arithmetics_div_and_mod.div_mod_spec_intro
                    (matita_arithmetics_nat.plus m n) q
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.div m q)
                       (matita_arithmetics_div_and_mod.div n q))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod m q)
                       (matita_arithmetics_div_and_mod.mod n q))
                    (matita_arithmetics_nat.not_le_to_lt q
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod m q)
                          (matita_arithmetics_div_and_mod.mod n q))
                       Hle)
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q) q)
                          (matita_arithmetics_div_and_mod.mod n q))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n q)
                                     q)
                                  (matita_arithmetics_div_and_mod.mod n q))) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus m x)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.div m q)
                                      (matita_arithmetics_div_and_mod.div n q))
                                   q)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod m q)
                                   (matita_arithmetics_div_and_mod.mod n q)))))
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q))
                                   (matita_arithmetics_div_and_mod.mod n q))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q))
                                         q)
                                      (matita_arithmetics_div_and_mod.mod m q))
                                   (matita_arithmetics_div_and_mod.mod n q))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q)
                                      (matita_arithmetics_div_and_mod.mod n q)))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.div
                                            m q)
                                         (matita_arithmetics_div_and_mod.div
                                            n q))
                                      q)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod m q)
                                      (matita_arithmetics_div_and_mod.mod n q)))))
                          (matita_basics_logic.eq_f
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.plus x
                                (matita_arithmetics_div_and_mod.mod n q))
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n q) q))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.div m q)
                                      (matita_arithmetics_div_and_mod.div n q))
                                   q)
                                (matita_arithmetics_div_and_mod.mod m q))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod m q))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div
                                                 m q)
                                              q)
                                           (matita_arithmetics_div_and_mod.mod
                                              m q))) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __1 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n q)
                                            q))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q))
                                            q)
                                         (matita_arithmetics_div_and_mod.mod
                                            m q))))
                                (matita_basics_logic.eq_coerc
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)))
                                            (matita_arithmetics_div_and_mod.mod
                                               m q))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)))
                                            (matita_arithmetics_div_and_mod.mod
                                               m q))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  m q))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q))
                                               q)
                                            (matita_arithmetics_div_and_mod.mod
                                               m q))))
                                   (matita_basics_logic.eq_f
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.plus x
                                         (matita_arithmetics_div_and_mod.mod
                                            m q))
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q)))
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q)))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)))))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.mod
                                               m q)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q)))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q)))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q)))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q))))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))
                                                        q)
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q))))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_div_and_mod.div
                                               m q))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q)))
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q)))
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q))))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        x
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q)
                                                              q)))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q))
                                                           q)
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q))))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_div_and_mod.div
                                                  n q))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q))))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)
                                                              x))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))
                                                              q)
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q))))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.mod
                                                     m q)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           m q))
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q))))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))
                                                                 q)
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q))))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     q
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.div
                                                           m q)
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                 x)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)) q)
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q))))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q)))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                 (matita_arithmetics_nat.plus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))))))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))) x))))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q))))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))))))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))))))
                                                              (matita_basics_logic.refl
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q))
                                                              (matita_arithmetics_nat.commutative_plus
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q))
                                                           (matita_arithmetics_nat.commutative_plus
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q))
                                                        (matita_arithmetics_nat.commutative_plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)))
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))
                                                        q)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))
                                                        q))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           m q))
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q)))
                                                  (matita_arithmetics_nat.distributive_times_plus
                                                     q
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q)
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     q
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q)
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)))
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                        x))
                                                  (matita_arithmetics_nat.assoc_plus1
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           m q)))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q))
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))))
                                                  (matita_arithmetics_nat.associative_plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           m q))
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_div_and_mod.div
                                                           n q)))))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q)
                                         (matita_arithmetics_nat.commutative_times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               q)
                                            (matita_arithmetics_div_and_mod.mod
                                               m q))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n q)
                                            q))
                                      (matita_arithmetics_nat.associative_plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q)
                                         (matita_arithmetics_div_and_mod.mod
                                            m q)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               n q)
                                            q))))
                                m
                                (matita_arithmetics_div_and_mod.div_mod m q)))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus m
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod n q)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q)
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q))
                                                  q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  m q))
                                            (matita_arithmetics_div_and_mod.mod
                                               n q))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)
                                                  q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q)))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q))
                                               q)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  m q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q)))))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.div
                                            m q)
                                         (matita_arithmetics_div_and_mod.div
                                            n q))
                                      q)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod m q)
                                      (matita_arithmetics_div_and_mod.mod n q)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)
                                                     q)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     n q)))
                                            x))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)
                                                     q)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     n q)))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q)
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q))
                                                  q)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.mod
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     n q)))))))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)
                                                  q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q)))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q))
                                               q)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  m q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q))))))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q))
                                         q)
                                      (matita_arithmetics_div_and_mod.mod m q))
                                   (matita_arithmetics_div_and_mod.mod n q))
                                (matita_arithmetics_nat.associative_plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.div
                                            m q)
                                         (matita_arithmetics_div_and_mod.div
                                            n q))
                                      q)
                                   (matita_arithmetics_div_and_mod.mod m q)
                                   (matita_arithmetics_div_and_mod.mod n q)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q))
                                (matita_arithmetics_div_and_mod.mod n q))
                             (matita_arithmetics_nat.associative_plus m
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n q) q)
                                (matita_arithmetics_div_and_mod.mod n q))))
                       n (matita_arithmetics_div_and_mod.div_mod n q))))))
        (matita_arithmetics_nat.decidable_le q
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod m q)
              (matita_arithmetics_div_and_mod.mod n q))).

def le_plus_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O q)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O q) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.div m q)
                          (matita_arithmetics_div_and_mod.div n q))
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.plus m n) q))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posq :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O q) =>
      matita_arithmetics_nat.le_times_to_le q
        (matita_arithmetics_nat.plus (matita_arithmetics_div_and_mod.div m q)
           (matita_arithmetics_div_and_mod.div n q))
        (matita_arithmetics_div_and_mod.div (matita_arithmetics_nat.plus m n)
           q)
        posq
        (matita_arithmetics_nat.le_plus_to_le_r
           (matita_arithmetics_div_and_mod.mod
              (matita_arithmetics_nat.plus m n) q)
           (matita_arithmetics_nat.times q
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.div m q)
                 (matita_arithmetics_div_and_mod.div n q)))
           (matita_arithmetics_nat.times q
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.plus m n) q))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_nat.plus m n) q)
                 q)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_div_and_mod.div
                            (matita_arithmetics_nat.plus m n) q)
                         q)) =>
               cic.lift cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times q
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.div m q)
                             (matita_arithmetics_div_and_mod.div n q)))
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.plus m n) q))
                    (matita_arithmetics_nat.plus x
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_nat.plus m n) q))))
              (matita_basics_logic.eq_ind
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus m n)
                 (x_1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.plus m n) x_1) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.div m q)
                                (matita_arithmetics_div_and_mod.div n q)))
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.plus m n) q))
                       x_1))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div m q) q)
                       (matita_arithmetics_div_and_mod.mod m q))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.plus
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_div_and_mod.div m q) q)
                               (matita_arithmetics_div_and_mod.mod m q))) =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __1)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.div m q)
                                   (matita_arithmetics_div_and_mod.div n q)))
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_nat.plus m n) q))
                          (matita_arithmetics_nat.plus x n)))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q) q)
                          (matita_arithmetics_div_and_mod.mod n q))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_div_and_mod.div n q)
                                     q)
                                  (matita_arithmetics_div_and_mod.mod n q))) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __1)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.div m q)
                                      (matita_arithmetics_div_and_mod.div n q)))
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_nat.plus m n) q))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod m q))
                                x)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod m q)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m q) q))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_div_and_mod.mod m q)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_div_and_mod.div m
                                           q)
                                        q))) =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __1)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times q
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.div
                                            m q)
                                         (matita_arithmetics_div_and_mod.div
                                            n q)))
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_nat.plus m n) q))
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q)
                                      (matita_arithmetics_div_and_mod.mod n q)))))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod m q)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q)
                                      (matita_arithmetics_div_and_mod.mod n q))))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_div_and_mod.mod m
                                           q)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_div_and_mod.div
                                                 m q)
                                              q)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n q)
                                                 q)
                                              (matita_arithmetics_div_and_mod.mod
                                                 n q))))) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __1)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q)))
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.plus m n) q))
                                   x))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            m q)
                                         q)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q))
                                   (matita_arithmetics_div_and_mod.mod n q))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    m q)
                                                 q)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_div_and_mod.div
                                                    n q)
                                                 q))
                                           (matita_arithmetics_div_and_mod.mod
                                              n q))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.plus m n)
                                            q))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.mod
                                            m q)
                                         x_1)))
                                (matita_basics_logic.eq_coerc
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.plus m
                                                  n)
                                               q)
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q))))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.mod
                                                  m q)
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q))
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q))))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)))
                                            (matita_arithmetics_div_and_mod.mod
                                               (matita_arithmetics_nat.plus m
                                                  n)
                                               q))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.mod
                                               m q)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q)
                                                     q)
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)
                                                     q))
                                               (matita_arithmetics_div_and_mod.mod
                                                  n q)))))
                                   (matita_arithmetics_nat.monotonic_le_plus_l
                                      (matita_arithmetics_nat.times q
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            (matita_arithmetics_div_and_mod.div
                                               n q)))
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_nat.plus m n) q)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.mod
                                            m q)
                                         (matita_arithmetics_div_and_mod.mod
                                            n q))
                                      (matita_arithmetics_div_and_mod.le_plus_mod
                                         m n q posq))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.plus m n)
                                            q)
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q))))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        (matita_arithmetics_nat.plus
                                                           m n)
                                                        q)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q)
                                                        (matita_arithmetics_div_and_mod.mod
                                                           n q))
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))))))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  x
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        m q)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              q)
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q)
                                                              q))
                                                        (matita_arithmetics_div_and_mod.mod
                                                           n q)))))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_div_and_mod.div
                                               m q))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           (matita_arithmetics_nat.plus
                                                              m n)
                                                           q)
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q))))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.mod
                                                              n q))
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q))))))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           (matita_arithmetics_nat.plus
                                                              m n)
                                                           q)
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q))))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.plus
                                                              x
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)
                                                                 q))
                                                           (matita_arithmetics_div_and_mod.mod
                                                              n q)))))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times q
                                               (matita_arithmetics_div_and_mod.div
                                                  n q))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              (matita_arithmetics_nat.plus
                                                                 m n)
                                                              q)
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 n q))
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))))))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              (matita_arithmetics_nat.plus
                                                                 m n)
                                                              q)
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q))
                                                                 x)
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 n q)))))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  q
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q)
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 (matita_arithmetics_nat.plus
                                                                    m n)
                                                                 q)
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    n q))
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 (matita_arithmetics_nat.plus
                                                                    m n)
                                                                 q)
                                                              (matita_arithmetics_nat.times
                                                                 q
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.mod
                                                                 m q)
                                                              (matita_arithmetics_nat.plus
                                                                 x
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    n q)))))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_div_and_mod.mod
                                                        n q)
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q))))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m n) q)
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    n q))
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m n) q)
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                 x)))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              n q)
                                                           (matita_arithmetics_nat.times
                                                              q
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                 (matita_arithmetics_div_and_mod.div
                                                                    n q)))))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m n) q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                 x))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m n) q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    n q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q)))))))))
                                                     (matita_basics_logic.refl
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m n) q)
                                                                 (matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_div_and_mod.mod
                                                                    m q)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.mod
                                                                    n q)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    q
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    m q)
                                                                    (
                                                                  matita_arithmetics_div_and_mod.div
                                                                    n q))))))))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.mod
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.mod
                                                              n q))
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q))))
                                                     (matita_arithmetics_nat.associative_plus
                                                        (matita_arithmetics_div_and_mod.mod
                                                           m q)
                                                        (matita_arithmetics_div_and_mod.mod
                                                           n q)
                                                        (matita_arithmetics_nat.times
                                                           q
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_div_and_mod.div
                                                                 m q)
                                                              (matita_arithmetics_div_and_mod.div
                                                                 n q)))))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q)))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        n q))
                                                  (matita_arithmetics_nat.commutative_plus
                                                     (matita_arithmetics_nat.times
                                                        q
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_div_and_mod.div
                                                              m q)
                                                           (matita_arithmetics_div_and_mod.div
                                                              n q)))
                                                     (matita_arithmetics_div_and_mod.mod
                                                        n q)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     q
                                                     (matita_arithmetics_div_and_mod.div
                                                        m q))
                                                  (matita_arithmetics_nat.times
                                                     q
                                                     (matita_arithmetics_div_and_mod.div
                                                        n q)))
                                               (matita_arithmetics_nat.distributive_times_plus
                                                  q
                                                  (matita_arithmetics_div_and_mod.div
                                                     m q)
                                                  (matita_arithmetics_div_and_mod.div
                                                     n q)))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)
                                               q))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q)
                                         (matita_arithmetics_nat.commutative_times
                                            (matita_arithmetics_div_and_mod.div
                                               m q)
                                            q))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.plus m n)
                                            q))
                                      (matita_arithmetics_nat.commutative_plus
                                         (matita_arithmetics_nat.times q
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_div_and_mod.div
                                                  m q)
                                               (matita_arithmetics_div_and_mod.div
                                                  n q)))
                                         (matita_arithmetics_div_and_mod.mod
                                            (matita_arithmetics_nat.plus m n)
                                            q))))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_div_and_mod.div
                                            n q)
                                         q)
                                      (matita_arithmetics_div_and_mod.mod n q)))
                                (matita_arithmetics_nat.associative_plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod n q)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod m q)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div m q)
                                      q))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod n q)))
                             (matita_arithmetics_nat.associative_plus
                                (matita_arithmetics_div_and_mod.mod m q)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div m q) q)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_div_and_mod.div n q)
                                      q)
                                   (matita_arithmetics_div_and_mod.mod n q))))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m q) q)
                             (matita_arithmetics_div_and_mod.mod m q))
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div m q) q)
                             (matita_arithmetics_div_and_mod.mod m q)))
                       n (matita_arithmetics_div_and_mod.div_mod n q))
                    m (matita_arithmetics_div_and_mod.div_mod m q))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.plus m n) q)
                       q)
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_nat.plus m n) q))
                 (matita_arithmetics_div_and_mod.div_mod
                    (matita_arithmetics_nat.plus m n) q))
              (matita_arithmetics_nat.times q
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_nat.plus m n) q))
              (matita_arithmetics_nat.commutative_times q
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_nat.plus m n) q)))).

def le_times_to_le_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O b)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O b) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __1)
                          (matita_arithmetics_nat.times b c) a)
                       (__1 :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __1)
                               (matita_arithmetics_nat.times b c) a) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2) c
                          (matita_arithmetics_div_and_mod.div a b)))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O b) =>
      Hle :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __)
             (matita_arithmetics_nat.times b c) a) =>
      matita_arithmetics_nat.le_S_S_to_le c
        (matita_arithmetics_div_and_mod.div a b)
        (matita_arithmetics_nat.lt_times_n_to_lt_l b c
           (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div a b))
           (matita_arithmetics_nat.le_to_lt_to_lt
              (matita_arithmetics_nat.times c b) a
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.div a b))
                 b)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.times b c) a))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.times c b) a))
                 Hle
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times b c)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.times b c) a))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) x a))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times b c) a)))
                    (matita_arithmetics_nat.times c b)
                    (matita_arithmetics_nat.commutative_times c b)))
              (matita_arithmetics_div_and_mod.lt_div_S a b posb))).

def le_times_to_le_div2 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O q)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O q) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __1) n
                          (matita_arithmetics_nat.times m q))
                       (__1 :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __1) n
                               (matita_arithmetics_nat.times m q)) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2)
                          (matita_arithmetics_div_and_mod.div n q) m))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posq :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O q) =>
      Hle :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __) n
             (matita_arithmetics_nat.times m q)) =>
      matita_arithmetics_nat.le_times_to_le q
        (matita_arithmetics_div_and_mod.div n q) m posq
        (matita_arithmetics_nat.le_plus_to_le
           (matita_arithmetics_div_and_mod.mod n q)
           (matita_arithmetics_nat.times q
              (matita_arithmetics_div_and_mod.div n q))
           (matita_arithmetics_nat.times q m)
           (matita_arithmetics_nat.le_plus_a
              (matita_arithmetics_div_and_mod.mod n q)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod n q)
                 (matita_arithmetics_nat.times q
                    (matita_arithmetics_div_and_mod.div n q)))
              (matita_arithmetics_nat.times q m)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __) n
                       (matita_arithmetics_nat.times m q)))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n q)
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q)))
                       (matita_arithmetics_nat.times q m)))
                 Hle
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) n
                                (matita_arithmetics_nat.times m q)))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) x
                                (matita_arithmetics_nat.times q m)))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times m q)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) n
                                   (matita_arithmetics_nat.times m q)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) n x))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) n
                                (matita_arithmetics_nat.times m q))))
                       (matita_arithmetics_nat.times q m)
                       (matita_arithmetics_nat.commutative_times q m))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod n q)
                       (matita_arithmetics_nat.times q
                          (matita_arithmetics_div_and_mod.div n q)))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q) q)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_div_and_mod.mod n q))))
                          (matita_arithmetics_div_and_mod.div_mod n q)
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_nat.commutative_times
                             (matita_arithmetics_div_and_mod.div n q) q))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n q)
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q)))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q))))))).

def lt_times_to_lt_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) n
                       (matita_arithmetics_nat.times m q))
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) n
                            (matita_arithmetics_nat.times m q)) =>
                     (__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       (matita_arithmetics_div_and_mod.div n q) m)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hlt :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) n
             (matita_arithmetics_nat.times m q)) =>
      matita_arithmetics_nat.lt_times_n_to_lt_l q
        (matita_arithmetics_div_and_mod.div n q) m
        (matita_arithmetics_nat.lt_plus_to_lt_l
           (matita_arithmetics_div_and_mod.mod n q)
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div n q) q)
           (matita_arithmetics_nat.times m q)
           (matita_arithmetics_nat.lt_to_le_to_lt
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n q) q)
                 (matita_arithmetics_div_and_mod.mod n q))
              (matita_arithmetics_nat.times m q)
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times m q)
                 (matita_arithmetics_div_and_mod.mod n q))
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) n
                       (matita_arithmetics_nat.times m q)))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n q) q)
                          (matita_arithmetics_div_and_mod.mod n q))
                       (matita_arithmetics_nat.times m q)))
                 Hlt
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times q
                       (matita_arithmetics_div_and_mod.div n q))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) n
                                (matita_arithmetics_nat.times m q)))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_div_and_mod.mod n q))
                                (matita_arithmetics_nat.times m q)))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n q)
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) n
                                   (matita_arithmetics_nat.times m q)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) x
                                   (matita_arithmetics_nat.times m q)))))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          n
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) n
                                      (matita_arithmetics_nat.times m q)))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) x
                                      (matita_arithmetics_nat.times m q)))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) n
                                   (matita_arithmetics_nat.times m q))))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod n q)
                             (matita_arithmetics_nat.times q
                                (matita_arithmetics_div_and_mod.div n q)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_div_and_mod.mod n q))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n x))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n q) q)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      n
                                      (matita_arithmetics_nat.plus x
                                         (matita_arithmetics_div_and_mod.mod
                                            n q))))
                                (matita_arithmetics_div_and_mod.div_mod n q)
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_div_and_mod.div n q) q))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod n q)
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q)))
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.times q
                                   (matita_arithmetics_div_and_mod.div n q))
                                (matita_arithmetics_div_and_mod.mod n q))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_div_and_mod.div n q))
                          (matita_arithmetics_div_and_mod.mod n q)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n q) q)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_div_and_mod.div n q) q)))
              (matita_arithmetics_nat.le_plus_n_r
                 (matita_arithmetics_div_and_mod.mod n q)
                 (matita_arithmetics_nat.times m q)))).

def le_div_S_S_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.S n) m)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_div_and_mod.div n m))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_div_and_mod.le_times_to_le_div2
        (matita_arithmetics_nat.S (matita_arithmetics_div_and_mod.div n m))
        (matita_arithmetics_nat.S n) m posm
        (matita_arithmetics_div_and_mod.lt_div_S n m posm).

def le_times_div_div_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O m)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O m) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_nat.times a
                          (matita_arithmetics_div_and_mod.div n m))
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.times a n) m))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_div_and_mod.le_times_to_le_div
        (matita_arithmetics_nat.times a n) m
        (matita_arithmetics_nat.times a
           (matita_arithmetics_div_and_mod.div n m))
        posm
        (matita_basics_logic.eq_coerc
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_div_and_mod.div n m)))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_div_and_mod.mod n m))
                    (matita_arithmetics_nat.times m
                       (matita_arithmetics_nat.times a
                          (matita_arithmetics_div_and_mod.div n m))))))
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_div_and_mod.div n m)))
                 (matita_arithmetics_nat.times a n)))
           (matita_arithmetics_nat.le_plus_n
              (matita_arithmetics_nat.times a
                 (matita_arithmetics_div_and_mod.mod n m))
              (matita_arithmetics_nat.times m
                 (matita_arithmetics_nat.times a
                    (matita_arithmetics_div_and_mod.div n m))))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times a
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div n m)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) x
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_div_and_mod.mod n m))
                             x)))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) x
                          (matita_arithmetics_nat.times a n)))))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times a
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod n m)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m)))
                             x))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m)))
                             (matita_arithmetics_nat.times a n)))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    n
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.times a
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m)))
                                (matita_arithmetics_nat.times a x)))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.times a
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m)))
                                (matita_arithmetics_nat.times a n)))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m)))
                             (matita_arithmetics_nat.times a n))))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod n m)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m)))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m))
                          (matita_arithmetics_div_and_mod.mod n m))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             n x))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n m) m)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_div_and_mod.mod n m))))
                          (matita_arithmetics_div_and_mod.div_mod n m)
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m))
                          (matita_arithmetics_nat.commutative_times
                             (matita_arithmetics_div_and_mod.div n m) m))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod n m)
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m)))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div n m))
                          (matita_arithmetics_div_and_mod.mod n m))))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_div_and_mod.mod n m))
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))))
                 (matita_arithmetics_nat.distributive_times_plus a
                    (matita_arithmetics_div_and_mod.mod n m)
                    (matita_arithmetics_nat.times m
                       (matita_arithmetics_div_and_mod.div n m))))
              (matita_arithmetics_nat.times m
                 (matita_arithmetics_nat.times a
                    (matita_arithmetics_div_and_mod.div n m)))
              (matita_arithmetics_nat.times_times m a
                 (matita_arithmetics_div_and_mod.div n m)))).

def monotonic_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O n) =>
               (A : cic.Univ (cic.type cic.z) =>
                _R :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (__2 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop (cic.type cic.z) cic.I))) =>
                _f :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A => A)) =>
                matita_basics_relations.monotonic
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _R _f)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    (matita_arithmetics_nat.le _n __1))
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_div_and_mod.div m n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      leab :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __) a b) =>
      matita_arithmetics_div_and_mod.le_times_to_le_div b n
        (matita_arithmetics_div_and_mod.div a n) posn
        (matita_arithmetics_nat.le_plus_b
           (matita_arithmetics_div_and_mod.mod a n)
           (matita_arithmetics_nat.times n
              (matita_arithmetics_div_and_mod.div a n))
           b
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __) a b))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div a n))
                       (matita_arithmetics_div_and_mod.mod a n))
                    b))
              leab
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_div_and_mod.mod a n)
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_div_and_mod.div a n)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __) a b))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __) x b))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod a n)
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.div a n)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) x b))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod a n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.div a n)))
                                b))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod a n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.div a n)))
                             b)))
                    a
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div a n))
                          (matita_arithmetics_div_and_mod.mod a n))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             a x))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div a n) n)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                a
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_div_and_mod.mod a n))))
                          (matita_arithmetics_div_and_mod.div_mod a n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div a n))
                          (matita_arithmetics_nat.commutative_times
                             (matita_arithmetics_div_and_mod.div a n) n))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod a n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div a n)))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.div a n))
                          (matita_arithmetics_div_and_mod.mod a n))))
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_div_and_mod.div a n))
                    (matita_arithmetics_div_and_mod.mod a n))
                 (matita_arithmetics_nat.commutative_plus
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_div_and_mod.div a n))
                    (matita_arithmetics_div_and_mod.mod a n))))).

def pos_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    m)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O m) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       matita_arithmetics_nat.O n)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            matita_arithmetics_nat.O n) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod n m)
                          matita_arithmetics_nat.O)
                       (__2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_div_and_mod.mod n m)
                               matita_arithmetics_nat.O) =>
                        (__3 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __4 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __3 __4)
                          matita_arithmetics_nat.O
                          (matita_arithmetics_div_and_mod.div n m)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      mod0 :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I matita_arithmetics_nat.nat)
             (matita_arithmetics_div_and_mod.mod n m)
             matita_arithmetics_nat.O) =>
      matita_arithmetics_nat.lt_times_n_to_lt_l m matita_arithmetics_nat.O
        (matita_arithmetics_div_and_mod.div n m)
        (matita_basics_logic.eq_coerc
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n))
           (cic.lift cic.prop (cic.type cic.z) cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div n m) m)))
           posn
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1) x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_div_and_mod.div n m) m)))))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O n))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div n m) m)))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times m
                       (matita_arithmetics_div_and_mod.div n m))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                matita_arithmetics_nat.O n))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                matita_arithmetics_nat.O x))))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times m
                          (matita_arithmetics_div_and_mod.div n m))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   matita_arithmetics_nat.O x))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m))))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m)))))
                       n
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.minus n
                             matita_arithmetics_nat.O)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m))
                                x))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.mod n m)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div n m))
                                   (matita_arithmetics_nat.minus n x)))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div n m) m)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      x
                                      (matita_arithmetics_nat.minus n
                                         (matita_arithmetics_div_and_mod.mod
                                            n m))))
                                (matita_arithmetics_div_and_mod.eq_times_div_minus_mod
                                   n m)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div n m))
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_div_and_mod.div n m) m))
                             matita_arithmetics_nat.O mod0)
                          n (matita_arithmetics_nat.minus_n_O n)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div n m) m)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_div_and_mod.div n m) m))
                 (matita_arithmetics_nat.times m matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.times_n_O m))
              (matita_arithmetics_nat.times matita_arithmetics_nat.O m)
              (matita_arithmetics_nat.commutative_times
                 matita_arithmetics_nat.O m))).

def let_clause_1034 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O n)
                    (posn :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O n) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O m)
                       (posm :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O m) =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                          matita_arithmetics_nat.nat
                          (x2515 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                             matita_arithmetics_nat.nat
                             (x2516 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              (A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                x2515
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod x2515
                                      x2516)
                                   (matita_arithmetics_nat.times x2516
                                      (matita_arithmetics_div_and_mod.div
                                         x2515 x2516)))))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      x2515 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2516 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.plus
           (matita_arithmetics_nat.times x2516
              (matita_arithmetics_div_and_mod.div x2515 x2516))
           (matita_arithmetics_div_and_mod.mod x2515 x2516))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              x2515 x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times
              (matita_arithmetics_div_and_mod.div x2515 x2516) x2516)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 x2515
                 (matita_arithmetics_nat.plus x
                    (matita_arithmetics_div_and_mod.mod x2515 x2516))))
           (matita_arithmetics_div_and_mod.div_mod x2515 x2516)
           (matita_arithmetics_nat.times x2516
              (matita_arithmetics_div_and_mod.div x2515 x2516))
           (matita_arithmetics_nat.commutative_times
              (matita_arithmetics_div_and_mod.div x2515 x2516) x2516))
        (matita_arithmetics_nat.plus
           (matita_arithmetics_div_and_mod.mod x2515 x2516)
           (matita_arithmetics_nat.times x2516
              (matita_arithmetics_div_and_mod.div x2515 x2516)))
        (matita_arithmetics_nat.commutative_plus
           (matita_arithmetics_nat.times x2516
              (matita_arithmetics_div_and_mod.div x2515 x2516))
           (matita_arithmetics_div_and_mod.mod x2515 x2516)).

def eq_div_div_div_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O n)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O n) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          matita_arithmetics_nat.O m)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O m) =>
                        (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_div_and_mod.div q n) m)
                          (matita_arithmetics_div_and_mod.div q
                             (matita_arithmetics_nat.times n m))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq q
        (matita_arithmetics_nat.times n m)
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_div_and_mod.div q n) m)
        (matita_arithmetics_nat.plus (matita_arithmetics_div_and_mod.mod q n)
           (matita_arithmetics_nat.times n
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_div_and_mod.div q n) m)))
        (matita_arithmetics_div_and_mod.div q
           (matita_arithmetics_nat.times n m))
        (matita_arithmetics_div_and_mod.mod q
           (matita_arithmetics_nat.times n m))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro q
           (matita_arithmetics_nat.times n m)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_div_and_mod.div q n) m)
           (matita_arithmetics_nat.plus
              (matita_arithmetics_div_and_mod.mod q n)
              (matita_arithmetics_nat.times n
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_div_and_mod.div q n) m)))
           (matita_arithmetics_nat.lt_to_le_to_lt
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_div_and_mod.mod q n)
                 (matita_arithmetics_nat.times n
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_div_and_mod.div q n) m)))
              (matita_arithmetics_nat.times n
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_div_and_mod.div q n) m)))
              (matita_arithmetics_nat.times n m)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))
                       (matita_arithmetics_nat.plus n
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))))
                 (matita_arithmetics_nat.monotonic_lt_plus_l
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_div_and_mod.div q n) m))
                    (matita_arithmetics_div_and_mod.mod q n) n
                    (matita_arithmetics_div_and_mod.lt_mod_m_m q n posn))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus n
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.div q n) m)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod q n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_div_and_mod.div
                                            q n)
                                         m)))
                                (matita_arithmetics_nat.plus n
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_div_and_mod.div
                                            q n)
                                         m)))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod q n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_div_and_mod.div
                                            q n)
                                         m)))
                                x))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod q n)
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m)))
                             (matita_arithmetics_nat.plus n
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m))))))
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.div q n) m)))
                    (matita_arithmetics_nat.times_n_Sm n
                       (matita_arithmetics_div_and_mod.mod
                          (matita_arithmetics_div_and_mod.div q n) m))))
              (matita_arithmetics_nat.monotonic_le_times_r n
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_div_and_mod.div q n) m))
                 m
                 (matita_arithmetics_div_and_mod.lt_mod_m_m
                    (matita_arithmetics_div_and_mod.div q n) m posm)))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times n
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q n) m)
                    m))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    q
                    (matita_arithmetics_nat.plus x
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times m
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q n) m))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       q
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times n x)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod q n)
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_div_and_mod.div q n) m))))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod q n)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m)))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          q x))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m))))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             q
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod q n) x)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_div_and_mod.div q n) m)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m))))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                q
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod q n) x)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.div q n)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   q
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_div_and_mod.mod q n)
                                      (matita_arithmetics_nat.times n x))))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                q
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      q x))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   q)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod q n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.div q n)))
                                (matita_arithmetics_div_and_mod.let_clause_1034
                                   n m q posn posm q n))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_div_and_mod.div q n) m)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m)))
                             (matita_arithmetics_div_and_mod.let_clause_1034
                                n m q posn posm
                                (matita_arithmetics_div_and_mod.div q n) m))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_div_and_mod.div q n) m))
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m))))
                          (matita_arithmetics_nat.distributive_times_plus n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m)))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m)))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_nat.times m
                             (matita_arithmetics_div_and_mod.div
                                (matita_arithmetics_div_and_mod.div q n) m)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod q n)
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m))))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times n
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_div_and_mod.div
                                         (matita_arithmetics_div_and_mod.div
                                            q n)
                                         m)))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_div_and_mod.mod q n)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_div_and_mod.mod
                                         (matita_arithmetics_div_and_mod.div
                                            q n)
                                         m))))
                             x))
                       (matita_arithmetics_nat.assoc_plus1
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m))
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m))))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_div_and_mod.div
                                      (matita_arithmetics_div_and_mod.div q n)
                                      m)))
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_div_and_mod.mod
                                   (matita_arithmetics_div_and_mod.div q n) m))))
                       (matita_arithmetics_nat.associative_plus
                          (matita_arithmetics_div_and_mod.mod q n)
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_div_and_mod.div
                                   (matita_arithmetics_div_and_mod.div q n) m)))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_div_and_mod.mod
                                (matita_arithmetics_div_and_mod.div q n) m)))))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q n) m)
                    m)
                 (matita_arithmetics_nat.commutative_times
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q n) m)
                    m))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_div_and_mod.div q n) m)
                 (matita_arithmetics_nat.times n m))
              (matita_arithmetics_nat.times_times
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_div_and_mod.div q n) m)
                 n m)))
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod q
           (matita_arithmetics_nat.times n m)
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1)
                    (matita_arithmetics_nat.times matita_arithmetics_nat.O
                       matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.times n m)))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                    (matita_arithmetics_nat.times n m)))
              (matita_arithmetics_nat.lt_times matita_arithmetics_nat.O n
                 matita_arithmetics_nat.O m posn posm)
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) x
                             (matita_arithmetics_nat.times n m)))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.times n m)))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.times n m))))
                 (matita_arithmetics_nat.times matita_arithmetics_nat.O
                    matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.times_O_n matita_arithmetics_nat.O)))).

def eq_div_div_div_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O n)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O n) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          matita_arithmetics_nat.O m)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O m) =>
                        (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_div_and_mod.div q n) m)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_div_and_mod.div q m) n)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_basics_logic.trans_eq
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_div_and_mod.div q n) m)
        (matita_arithmetics_div_and_mod.div q
           (matita_arithmetics_nat.times n m))
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_div_and_mod.div q m) n)
        (matita_arithmetics_div_and_mod.eq_div_div_div_times n m q posn posm)
        (matita_basics_logic.sym_eq
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_div_and_mod.div q m) n)
           (matita_arithmetics_div_and_mod.div q
              (matita_arithmetics_nat.times n m))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q m) n)
                    (matita_arithmetics_div_and_mod.div q
                       (matita_arithmetics_nat.times m n))))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_div_and_mod.div q m) n)
                    (matita_arithmetics_div_and_mod.div q
                       (matita_arithmetics_nat.times n m))))
              (matita_arithmetics_div_and_mod.eq_div_div_div_times m n q posm
                 posn)
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times n m)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.div
                                (matita_arithmetics_div_and_mod.div q m) n)
                             (matita_arithmetics_div_and_mod.div q x)))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.div
                                (matita_arithmetics_div_and_mod.div q m) n)
                             (matita_arithmetics_div_and_mod.div q
                                (matita_arithmetics_nat.times n m))))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_div_and_mod.div q m) n)
                          (matita_arithmetics_div_and_mod.div q
                             (matita_arithmetics_nat.times n m)))))
                 (matita_arithmetics_nat.times m n)
                 (matita_arithmetics_nat.commutative_times m n)))).

def lt_to_le_times_to_lt_S_to_div :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O b)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O b) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __1)
                          (matita_arithmetics_nat.times b c) a)
                       (__1 :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __1)
                               (matita_arithmetics_nat.times b c) a) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((__2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __3 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __2 __3) a
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_nat.S c)))
                          (__2 :
                             cic.Term cic.prop
                               ((__2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __3 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __2 __3) a
                                  (matita_arithmetics_nat.times b
                                     (matita_arithmetics_nat.S c))) =>
                           (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __3 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __3)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_div_and_mod.div a b) c)))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O b) =>
      lea :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __)
             (matita_arithmetics_nat.times b c) a) =>
      lta :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) a
             (matita_arithmetics_nat.times b (matita_arithmetics_nat.S c))) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq a b
        (matita_arithmetics_div_and_mod.div a b)
        (matita_arithmetics_div_and_mod.mod a b) c
        (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c))
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod a b posb)
        (matita_arithmetics_div_and_mod.div_mod_spec_intro a b c
           (matita_arithmetics_nat.minus a (matita_arithmetics_nat.times b c))
           (matita_arithmetics_nat.lt_plus_to_minus a
              (matita_arithmetics_nat.times b c) b lea
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) a
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_nat.S c))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) a
                       (matita_arithmetics_nat.plus b
                          (matita_arithmetics_nat.times b c))))
                 lta
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus b
                       (matita_arithmetics_nat.times b c))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) a x))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) a
                                (matita_arithmetics_nat.plus b
                                   (matita_arithmetics_nat.times b c))))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times c b)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) a
                                   (matita_arithmetics_nat.plus b x)))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) a
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times b c))))))
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times c b)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) a
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times c b))))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) a
                                      (matita_arithmetics_nat.plus b x)))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) a
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times c b)))))
                          (matita_arithmetics_nat.times b c)
                          (matita_arithmetics_nat.commutative_times b c))
                       (matita_arithmetics_nat.times b c)
                       (matita_arithmetics_nat.commutative_times b c))
                    (matita_arithmetics_nat.times b
                       (matita_arithmetics_nat.S c))
                    (matita_arithmetics_nat.times_n_Sm b c))))
           (matita_basics_logic.sym_eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.plus (matita_arithmetics_nat.times c b)
                 (matita_arithmetics_nat.minus a
                    (matita_arithmetics_nat.times b c)))
              a
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_nat.times c b))
                          (matita_arithmetics_nat.times c b))
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.plus a
                             (matita_arithmetics_nat.times c b))
                          (matita_arithmetics_nat.times c b))))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times c b)
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_nat.times b c)))
                       a))
                 (matita_arithmetics_nat.plus_minus
                    (matita_arithmetics_nat.times c b) a
                    (matita_arithmetics_nat.times c b)
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times b c) a))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.times c b) a))
                       lea
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.times c b)
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __) x a))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times c b) a))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times c b) a)))
                          (matita_arithmetics_nat.times b c)
                          (matita_arithmetics_nat.commutative_times b c))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times c b)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.minus a
                                      (matita_arithmetics_nat.times c b))
                                   (matita_arithmetics_nat.times c b))
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.times c b))
                                   (matita_arithmetics_nat.times c b))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times c b)
                                   (matita_arithmetics_nat.minus a x))
                                a))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times c b)
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_nat.times c b)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times c b))
                                      (matita_arithmetics_nat.times c b))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times c b)
                                      (matita_arithmetics_nat.minus a
                                         (matita_arithmetics_nat.times c b)))
                                   a))))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times c b)
                                         (matita_arithmetics_nat.minus a
                                            (matita_arithmetics_nat.times c b)))
                                      x))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times c b)
                                         (matita_arithmetics_nat.minus a
                                            (matita_arithmetics_nat.times c b)))
                                      a))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times c b)
                                      (matita_arithmetics_nat.minus a
                                         (matita_arithmetics_nat.times c b)))
                                   a)))
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.plus a
                                (matita_arithmetics_nat.times c b))
                             (matita_arithmetics_nat.times c b))
                          (matita_arithmetics_nat.minus_plus_m_m a
                             (matita_arithmetics_nat.times c b)))
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_nat.times c b))
                          (matita_arithmetics_nat.times c b))
                       (matita_arithmetics_nat.commutative_plus
                          (matita_arithmetics_nat.minus a
                             (matita_arithmetics_nat.times c b))
                          (matita_arithmetics_nat.times c b)))
                    (matita_arithmetics_nat.times b c)
                    (matita_arithmetics_nat.commutative_times b c))))).

def div_times_times :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O c)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O c) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          matita_arithmetics_nat.O b)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O b) =>
                        (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.div a b)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.times b c))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posc :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O c) =>
      posb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O b) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c b)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x (matita_arithmetics_nat.times c b)) =>
         cic.lift cic.prop cic.prop cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.div a b)
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a c) x)))
        (matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a c) c)
              b)
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_div_and_mod.div
                         (matita_arithmetics_nat.times a c) c)
                      b)
                   x_1) =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.div a b) x_1))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              a
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x a) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_div_and_mod.div a b)
                    (matita_arithmetics_div_and_mod.div x b)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.div a b))
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a c) c)
              (matita_arithmetics_div_and_mod.div_times a c posc))
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_nat.times a c)
              (matita_arithmetics_nat.times c b))
           (matita_arithmetics_div_and_mod.eq_div_div_div_times c b
              (matita_arithmetics_nat.times a c) posc posb))
        (matita_arithmetics_nat.times b c)
        (matita_arithmetics_nat.commutative_times b c).

def times_mod :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O c)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O c) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          matita_arithmetics_nat.O b)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O b) =>
                        (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.times b c))
                          (matita_arithmetics_nat.times c
                             (matita_arithmetics_div_and_mod.mod a b))))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posc :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O c) =>
      posb :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O b) =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq2
        (matita_arithmetics_nat.times a c) (matita_arithmetics_nat.times b c)
        (matita_arithmetics_div_and_mod.div a b)
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_nat.times a c)
           (matita_arithmetics_nat.times b c))
        (matita_arithmetics_div_and_mod.div a b)
        (matita_arithmetics_nat.times c
           (matita_arithmetics_div_and_mod.mod a b))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_nat.times a c)
              (matita_arithmetics_nat.times b c))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_nat.times a c)
                      (matita_arithmetics_nat.times b c))) =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _r : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_div_and_mod.div_mod_spec _n _m _q _r)
                 (matita_arithmetics_nat.times a c)
                 (matita_arithmetics_nat.times b c) x
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_nat.times a c)
                    (matita_arithmetics_nat.times b c))))
           (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
              (matita_arithmetics_nat.times a c)
              (matita_arithmetics_nat.times b c)
              (matita_basics_logic.eq_coerc
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       (matita_arithmetics_nat.times matita_arithmetics_nat.O
                          matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.times b c)))
                 (cic.lift cic.prop (cic.type cic.z) cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times b c)))
                 (matita_arithmetics_nat.lt_times matita_arithmetics_nat.O b
                    matita_arithmetics_nat.O c posb posc)
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) x
                                (matita_arithmetics_nat.times b c)))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1)
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.times b c)))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.times b c))))
                    (matita_arithmetics_nat.times matita_arithmetics_nat.O
                       matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.times_O_n
                       matita_arithmetics_nat.O))))
           (matita_arithmetics_div_and_mod.div a b)
           (matita_arithmetics_div_and_mod.div_times_times a b c posc posb))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_nat.times a c)
           (matita_arithmetics_nat.times b c)
           (matita_arithmetics_div_and_mod.div a b)
           (matita_arithmetics_nat.times c
              (matita_arithmetics_div_and_mod.mod a b))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1)
                    (matita_arithmetics_nat.times c
                       (matita_arithmetics_div_and_mod.mod a b))
                    (matita_arithmetics_nat.times c b)))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1)
                    (matita_arithmetics_nat.times c
                       (matita_arithmetics_div_and_mod.mod a b))
                    (matita_arithmetics_nat.times b c)))
              (matita_arithmetics_nat.monotonic_lt_times_r c posc
                 (matita_arithmetics_div_and_mod.mod a b) b
                 (matita_arithmetics_div_and_mod.lt_mod_m_m a b posb))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times b c)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             (matita_arithmetics_nat.times c
                                (matita_arithmetics_div_and_mod.mod a b))
                             x))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             (matita_arithmetics_nat.times c
                                (matita_arithmetics_div_and_mod.mod a b))
                             (matita_arithmetics_nat.times b c)))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type (cic.s cic.z))
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                          cic.I))
                    (cic.lift cic.prop (cic.type cic.z) cic.I
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          (matita_arithmetics_nat.times c
                             (matita_arithmetics_div_and_mod.mod a b))
                          (matita_arithmetics_nat.times b c))))
                 (matita_arithmetics_nat.times c b)
                 (matita_arithmetics_nat.commutative_times c b)))
           (matita_basics_logic.eq_coerc
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times a c)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.times b
                             (matita_arithmetics_div_and_mod.div a b))
                          (matita_arithmetics_div_and_mod.mod a b))
                       c)))
              (cic.lift cic.prop (cic.type cic.z) cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times a c)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div a b)
                          (matita_arithmetics_nat.times b c))
                       (matita_arithmetics_nat.times c
                          (matita_arithmetics_div_and_mod.mod a b)))))
              (matita_basics_logic.eq_f
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.times x c)
                 a
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.times b
                       (matita_arithmetics_div_and_mod.div a b))
                    (matita_arithmetics_div_and_mod.mod a b))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_div_and_mod.mod a b)
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a x))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       a
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             a x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          a)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_div_and_mod.mod a b)
                          (matita_arithmetics_nat.times b
                             (matita_arithmetics_div_and_mod.div a b)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b))
                             (matita_arithmetics_div_and_mod.mod a b))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                a x))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_div_and_mod.div a b) b)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   a
                                   (matita_arithmetics_nat.plus x
                                      (matita_arithmetics_div_and_mod.mod a b))))
                             (matita_arithmetics_div_and_mod.div_mod a b)
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b))
                             (matita_arithmetics_nat.commutative_times
                                (matita_arithmetics_div_and_mod.div a b) b))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_div_and_mod.mod a b)
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b)))
                          (matita_arithmetics_nat.commutative_plus
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_div_and_mod.div a b))
                             (matita_arithmetics_div_and_mod.mod a b))))
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b))
                    (matita_arithmetics_nat.commutative_plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b))))
              (matita_basics_logic.rewrite_l
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times c
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __)
                       (cic.lift (cic.type (cic.s cic.z))
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z))
                             cic.I))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times a c) x))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times a c)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_div_and_mod.div a b)
                                   (matita_arithmetics_nat.times b c))
                                (matita_arithmetics_nat.times c
                                   (matita_arithmetics_div_and_mod.mod a b)))))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times b
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div a b) c))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type (cic.s cic.z))
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             (cic.univ (cic.type cic.z)
                                (cic.type (cic.s cic.z)) cic.I))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.times c
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_div_and_mod.div
                                            a b))
                                      (matita_arithmetics_div_and_mod.mod a b)))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times a c)
                                (matita_arithmetics_nat.plus x
                                   (matita_arithmetics_nat.times c
                                      (matita_arithmetics_div_and_mod.mod a b)))))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times c
                          (matita_arithmetics_div_and_mod.div a b))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times a c)
                                   (matita_arithmetics_nat.times c
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_div_and_mod.div
                                               a b))
                                         (matita_arithmetics_div_and_mod.mod
                                            a b)))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times a c)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b x)
                                      (matita_arithmetics_nat.times c
                                         (matita_arithmetics_div_and_mod.mod
                                            a b)))))))
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_nat.times c
                                   (matita_arithmetics_div_and_mod.div a b)))
                             (matita_arithmetics_nat.times c
                                (matita_arithmetics_div_and_mod.mod a b)))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times a c) x))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times a c)
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_nat.times c
                                               (matita_arithmetics_div_and_mod.div
                                                  a b)))
                                         (matita_arithmetics_nat.times c
                                            (matita_arithmetics_div_and_mod.mod
                                               a b)))))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                (cic.univ (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) cic.I))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times a c)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_nat.times c
                                            (matita_arithmetics_div_and_mod.div
                                               a b)))
                                      (matita_arithmetics_nat.times c
                                         (matita_arithmetics_div_and_mod.mod
                                            a b))))))
                          (matita_arithmetics_nat.times c
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_div_and_mod.div a b))
                                (matita_arithmetics_div_and_mod.mod a b)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times c
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_div_and_mod.div a b)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times c
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_div_and_mod.div
                                               a b))
                                         (matita_arithmetics_div_and_mod.mod
                                            a b)))
                                   (matita_arithmetics_nat.plus x
                                      (matita_arithmetics_nat.times c
                                         (matita_arithmetics_div_and_mod.mod
                                            a b)))))
                             (matita_arithmetics_nat.distributive_times_plus
                                c
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_div_and_mod.div a b))
                                (matita_arithmetics_div_and_mod.mod a b))
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_nat.times c
                                   (matita_arithmetics_div_and_mod.div a b)))
                             (matita_arithmetics_nat.times_times c b
                                (matita_arithmetics_div_and_mod.div a b))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_div_and_mod.div a b) c)
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_div_and_mod.div a b) c))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_div_and_mod.div a b)
                       (matita_arithmetics_nat.times b c))
                    (matita_arithmetics_nat.times_times
                       (matita_arithmetics_div_and_mod.div a b) b c))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b))
                    c)
                 (matita_arithmetics_nat.commutative_times c
                    (matita_arithmetics_nat.plus
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_div_and_mod.div a b))
                       (matita_arithmetics_div_and_mod.mod a b)))))).

def le_div_times_m :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 matita_arithmetics_nat.nat
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1)
                       matita_arithmetics_nat.O i)
                    (__ :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O i) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2)
                          matita_arithmetics_nat.O m)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O m) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2)
                          (matita_arithmetics_div_and_mod.div
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_div_and_mod.div m i))
                             m)
                          (matita_arithmetics_div_and_mod.div a i)))))))
      :=
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posi :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O i) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_nat.transitive_le
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_nat.times a
              (matita_arithmetics_div_and_mod.div m i))
           m)
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_nat.times a m) i)
           m)
        (matita_arithmetics_div_and_mod.div a i)
        (matita_arithmetics_div_and_mod.monotonic_div m posm
           (matita_arithmetics_nat.times a
              (matita_arithmetics_div_and_mod.div m i))
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_nat.times a m) i)
           (matita_arithmetics_div_and_mod.le_times_div_div_times a m i posi))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a m) m)
              i)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_div_and_mod.div
                         (matita_arithmetics_nat.times a m) m)
                      i)) =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1) x
                 (matita_arithmetics_div_and_mod.div a i)))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              a
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x a) =>
               cic.lift cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_div_and_mod.div x i)
                    (matita_arithmetics_div_and_mod.div a i)))
              (matita_arithmetics_nat.le_n
                 (matita_arithmetics_div_and_mod.div a i))
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a m) m)
              (matita_arithmetics_div_and_mod.div_times a m posm))
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_nat.times a m) i)
              m)
           (matita_arithmetics_div_and_mod.eq_div_div_div_div i m
              (matita_arithmetics_nat.times a m) posi posm)).


