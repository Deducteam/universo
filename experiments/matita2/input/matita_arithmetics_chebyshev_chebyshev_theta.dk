(; This file was automatically generated from Matita. ;)

def theta :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.nat))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_primes.primeb p)
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        matita_arithmetics_nat.times
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p).

def theta_def :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta n)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chebyshev_chebyshev_theta.theta n).

def lt_O_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
              (matita_arithmetics_chebyshev_chebyshev_theta.theta n)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
              (matita_arithmetics_chebyshev_chebyshev_theta.theta _x_365)))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_nat.S matita_arithmetics_nat.O))
        (n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                (matita_arithmetics_chebyshev_chebyshev_theta.theta n1)) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_basics_bool.bool)
              (matita_arithmetics_primes.primeb (matita_arithmetics_nat.S n1))
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_basics_bool.bool)
              (matita_arithmetics_primes.primeb (matita_arithmetics_nat.S n1))
              matita_basics_bool.false)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_basics_bool.bool)
                      (matita_arithmetics_primes.primeb
                         (matita_arithmetics_nat.S n1))
                      matita_basics_bool.true)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_basics_bool.bool)
                      (matita_arithmetics_primes.primeb
                         (matita_arithmetics_nat.S n1))
                      matita_basics_bool.false)) =>
            (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.lt __1 __2) matita_arithmetics_nat.O
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S n1)))
           (Hc :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_basics_bool.bool)
                   (matita_arithmetics_primes.primeb
                      (matita_arithmetics_nat.S n1))
                   matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.S n1))
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S n1))
                         (p :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.primeb p)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (p :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          p))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2)
                    matita_arithmetics_nat.O x))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times (matita_arithmetics_nat.S n1)
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S n1)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb i)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        i)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S n1)
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.S n1)
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.primeb i)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               matita_arithmetics_nat.times
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                i)))) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       matita_arithmetics_nat.O x))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times matita_arithmetics_nat.O
                       matita_arithmetics_nat.O)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times
                               matita_arithmetics_nat.O
                               matita_arithmetics_nat.O)) =>
                     cic.lift cic.prop cic.prop cic.I
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S n1)
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.S n1)
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb i)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S x)
                                matita_arithmetics_nat.times
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 i)))))
                    (matita_arithmetics_nat.lt_times matita_arithmetics_nat.O
                       (matita_arithmetics_nat.S n1) matita_arithmetics_nat.O
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S n1)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb i)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.O))
                          matita_arithmetics_nat.times
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           i))
                       (matita_arithmetics_nat.lt_O_S n1) Hind)
                    matita_arithmetics_nat.O
                    (matita_arithmetics_nat.times_n_O
                       matita_arithmetics_nat.O))
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S n1))
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     i))
                 (matita_arithmetics_bigops.bigop_Strue
                    (matita_arithmetics_nat.S n1)
                    matita_arithmetics_primes.primeb
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __)
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_basics_bool.bool)
                       matita_basics_bool.true
                       (x :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_basics_bool.bool)
                             x matita_basics_bool.true))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_basics_bool.bool)
                          matita_basics_bool.true)
                       (matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.S n1))
                       Hc)))
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S n1))
              (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
                 (matita_arithmetics_nat.S n1)))
           (Hc :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_basics_bool.bool)
                   (matita_arithmetics_primes.primeb
                      (matita_arithmetics_nat.S n1))
                   matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.S n1))
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S n1))
                         (p :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.primeb p)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (p :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          p))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2)
                    matita_arithmetics_nat.O x))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S n1)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     i))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_bigops.bigop
                            (matita_arithmetics_nat.S n1)
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_arithmetics_primes.primeb i)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             i))) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       matita_arithmetics_nat.O x))
                 Hind
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S n1))
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     i))
                 (matita_arithmetics_bigops.bigop_Sfalse
                    (matita_arithmetics_nat.S n1)
                    matita_arithmetics_primes.primeb
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __)
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_basics_bool.bool)
                       matita_basics_bool.false
                       (x :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_basics_bool.bool)
                             x matita_basics_bool.false))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_basics_bool.bool)
                          matita_basics_bool.false)
                       (matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.S n1))
                       Hc)))
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S n1))
              (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
                 (matita_arithmetics_nat.S n1)))
           (matita_basics_bool.true_or_false
              (matita_arithmetics_primes.primeb (matita_arithmetics_nat.S n1))))
        n.

def divides_fact_to_divides :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.prime __) p)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.prime __) p) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_primes.divides _n _m) p
                       (matita_arithmetics_factorial.fact n))
                    (__1 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.divides _n _m) p
                            (matita_arithmetics_factorial.fact n)) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A
                             (__2 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_logic.ex
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                        _P)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __3 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __2 __3)
                                   matita_arithmetics_nat.O m)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __2) m n))
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_primes.divides _n _m) p m))))))))
      :=
      p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      primep :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.prime __) p) =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod cic.prop cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_primes.divides _n _m) p
                 (matita_arithmetics_factorial.fact _x_365))
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m) p
                      (matita_arithmetics_factorial.fact _x_365)) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2)
                             matita_arithmetics_nat.O m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __1) m _x_365))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p m))))))
        (H :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.divides _n _m) p
                (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
         matita_basics_logic.False_ind
           (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__ : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __) m
                             matita_arithmetics_nat.O))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p m)))))
           (matita_basics_logic.absurd
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) p
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_primes.divides_to_le p
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_arithmetics_nat.lt_O_S matita_arithmetics_nat.O) H)
              (matita_arithmetics_nat.lt_to_not_le
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) p
                 (matita_arithmetics_primes.prime_to_lt_SO p primep))))
        (n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod cic.prop cic.prop cic.prop cic.I
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.divides _n _m) p
                   (matita_arithmetics_factorial.fact n1))
                (__ :
                   cic.Term cic.prop
                     ((_n :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       _m :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_arithmetics_primes.divides _n _m) p
                        (matita_arithmetics_factorial.fact n1)) =>
                 (A : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__1 : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  matita_basics_logic.ex
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.lift cic.prop cic.prop cic.I
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               matita_arithmetics_nat.O m)
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __1) m n1))
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.divides _n _m) p m))))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times (matita_arithmetics_nat.S n1)
              (matita_arithmetics_factorial.fact n1))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_factorial.fact n1))) =>
            cic.lift cic.prop cic.prop cic.I
              (cic.prod cic.prop cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.divides _n _m) p x)
                 (__1 :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) p x) =>
                  (A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (__2 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_logic.ex
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((__2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __3 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __2 __3)
                                matita_arithmetics_nat.O m)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __2) m
                                (matita_arithmetics_nat.S n1)))
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_primes.divides _n _m) p m))))))
           (Hdiv :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.divides _n _m) p
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S n1)
                      (matita_arithmetics_factorial.fact n1))) =>
            matita_basics_logic.match_Or cic.prop
              (matita_arithmetics_primes.divides p
                 (matita_arithmetics_nat.S n1))
              (matita_arithmetics_primes.divides p
                 (matita_arithmetics_factorial.fact n1))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) p
                         (matita_arithmetics_nat.S n1))
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) p
                         (matita_arithmetics_factorial.fact n1))) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2)
                             matita_arithmetics_nat.O m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __1) m
                             (matita_arithmetics_nat.S n1)))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p m))))
              (Hcase :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m) p
                      (matita_arithmetics_nat.S n1)) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __) m
                             (matita_arithmetics_nat.S n1)))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p m)))
                 (matita_arithmetics_nat.S n1)
                 (matita_basics_logic.conj
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S n1))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S n1)))
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_primes.divides _n _m) p
                       (matita_arithmetics_nat.S n1))
                    (matita_basics_logic.conj
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O
                          (matita_arithmetics_nat.S n1))
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __)
                          (matita_arithmetics_nat.S n1)
                          (matita_arithmetics_nat.S n1))
                       (matita_arithmetics_nat.lt_O_S n1)
                       (matita_arithmetics_nat.le_n
                          (matita_arithmetics_nat.S n1)))
                    Hcase))
              (Hcase :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m) p
                      (matita_arithmetics_factorial.fact n1)) =>
               matita_basics_logic.match_ex cic.prop
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop cic.I
                    (matita_basics_logic.And
                       (matita_basics_logic.And
                          (matita_arithmetics_nat.lt matita_arithmetics_nat.O
                             m)
                          (matita_arithmetics_nat.le m n1))
                       (matita_arithmetics_primes.divides p m)))
                 (__ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A
                               (__ : cic.Term (cic.type cic.z) A =>
                                cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                        matita_basics_logic.ex
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          _P)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (m :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.lift cic.prop cic.prop cic.I
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1)
                                     matita_arithmetics_nat.O m)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.le _n __) m n1))
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.divides _n _m) p m)))) =>
                  (A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (__1 : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_logic.ex
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((__1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __1 __2)
                                matita_arithmetics_nat.O m)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __1) m
                                (matita_arithmetics_nat.S n1)))
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_primes.divides _n _m) p m))))
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _clearme :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O a)
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __) a n1))
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.divides _n _m) p a)) =>
                  matita_basics_logic.match_And cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O a)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) a n1))
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_primes.divides _n _m) p a)
                    (__ :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O a)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.le _n __) a n1))
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.divides _n _m) p a)) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z)
                             (cic.type cic.z) cic.I A
                             (__1 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                      matita_basics_logic.ex
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                        _P)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2)
                                   matita_arithmetics_nat.O m)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __1) m
                                   (matita_arithmetics_nat.S n1)))
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_primes.divides _n _m) p m))))
                    (_clearme0 :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O a)
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __) a n1)) =>
                     matita_basics_logic.match_And cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O a)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) a n1)
                       (__ :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O a)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.le _n __) a n1)) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_primes.divides _n _m) p a)
                          (__1 :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.divides _n _m) p a) =>
                           (A : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A
                                   (__2 : cic.Term (cic.type cic.z) A =>
                                    cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                            matita_basics_logic.ex
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A)
                              _P)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop cic.prop cic.I
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((__2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __3 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __2 __3)
                                         matita_arithmetics_nat.O m)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __2) m
                                         (matita_arithmetics_nat.S n1)))
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_primes.divides _n _m)
                                      p m)))))
                       (posa :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O a) =>
                        lea :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __) a n1) =>
                        diva :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.divides _n _m) p a) =>
                        matita_basics_logic.ex_intro
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1)
                                      matita_arithmetics_nat.O m)
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __) m
                                      (matita_arithmetics_nat.S n1)))
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_primes.divides _n _m) p
                                   m)))
                          a
                          (matita_basics_logic.conj
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   matita_arithmetics_nat.O a)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) a
                                   (matita_arithmetics_nat.S n1)))
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_primes.divides _n _m) p a)
                             (matita_basics_logic.conj
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   matita_arithmetics_nat.O a)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) a
                                   (matita_arithmetics_nat.S n1))
                                posa (matita_arithmetics_nat.le_S a n1 lea))
                             diva))
                       _clearme0)
                    _clearme)
                 (Hind Hcase))
              (matita_arithmetics_gcd.divides_times_to_divides p
                 (matita_arithmetics_nat.S n1)
                 (matita_arithmetics_factorial.fact n1) primep Hdiv))
           (matita_arithmetics_factorial.fact (matita_arithmetics_nat.S n1))
           (matita_arithmetics_factorial.factS n1))
        n.

def divides_fact_to_le :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.prime __) p)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.prime __) p) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_primes.divides _n _m) p
                       (matita_arithmetics_factorial.fact n))
                    (__1 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.divides _n _m) p
                            (matita_arithmetics_factorial.fact n)) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __2) p n)))))
      :=
      p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      primep :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.prime __) p) =>
      divp :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.divides _n _m) p
             (matita_arithmetics_factorial.fact n)) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
           matita_arithmetics_nat.nat)
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (matita_basics_logic.And
              (matita_basics_logic.And
                 (matita_arithmetics_nat.lt matita_arithmetics_nat.O m)
                 (matita_arithmetics_nat.le m n))
              (matita_arithmetics_primes.divides p m)))
        (__ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                   matita_arithmetics_nat.nat)
                (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop cic.I
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1)
                            matita_arithmetics_nat.O m)
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.le _n __) m n))
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) p m)))) =>
         (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.le _n __1) p n)
        (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O a)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) a n))
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.divides _n _m) p a)) =>
         matita_basics_logic.match_And cic.prop
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O a)
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) a n))
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_primes.divides _n _m) p a)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O a)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __) a n))
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m) p a)) =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1) p n)
           (_clearme0 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O a)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) a n)) =>
            matita_basics_logic.match_And cic.prop
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O a)
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) a n)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1)
                         matita_arithmetics_nat.O a)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __) a n)) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.divides _n _m) p a)
                 (__1 :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) p a) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __2) p n))
              (posa :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O a) =>
               lea :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) a n) =>
               diva :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m) p a) =>
               matita_arithmetics_nat.transitive_le p a n
                 (matita_arithmetics_primes.divides_to_le p a posa diva) lea)
              _clearme0)
           _clearme)
        (matita_arithmetics_chebyshev_chebyshev_theta.divides_fact_to_divides
           p n primep divp).

def prime_to_divides_M :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.prime __) p)
                 (__ :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.prime __) p) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       (matita_arithmetics_nat.S m) p)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            (matita_arithmetics_nat.S m) p) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2) p
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       (__2 :
                          cic.Term cic.prop
                            ((_n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.le _n __2) p
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     m))) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p
                          (matita_arithmetics_binomial.M m)))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      primep :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.prime __) p) =>
      lemp :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) (matita_arithmetics_nat.S m) p) =>
      lep :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __) p
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   m))) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_binomial.bc
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))
           m)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_binomial.bc
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         m))
                   m)) =>
         cic.lift cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_primes.divides _n _m) p x))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_div_and_mod.div
              (matita_arithmetics_factorial.fact
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_factorial.fact m)
                 (matita_arithmetics_factorial.fact
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m))
                       m))))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_div_and_mod.div
                      (matita_arithmetics_factorial.fact
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               m)))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_factorial.fact m)
                         (matita_arithmetics_factorial.fact
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     m))
                               m))))) =>
            cic.lift cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_primes.divides _n _m) p x))
           (matita_arithmetics_primes.match_divides cic.prop
              (matita_arithmetics_nat.times
                 (matita_arithmetics_factorial.fact m)
                 (matita_arithmetics_factorial.fact
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m))
                       m)))
              (matita_arithmetics_factorial.fact
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.divides _n _m)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_factorial.fact m)
                         (matita_arithmetics_factorial.fact
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     m))
                               m)))
                      (matita_arithmetics_factorial.fact
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               m)))) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_primes.divides _n _m) p
                 (matita_arithmetics_div_and_mod.div
                    (matita_arithmetics_factorial.fact
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_factorial.fact m)
                       (matita_arithmetics_factorial.fact
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m))
                             m)))))
              (q : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               Hq :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_factorial.fact
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               m)))
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_factorial.fact m)
                            (matita_arithmetics_factorial.fact
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        m))
                                  m)))
                         q)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_factorial.fact m)
                       (matita_arithmetics_factorial.fact
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m))
                             m)))
                    q)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_factorial.fact m)
                               (matita_arithmetics_factorial.fact
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           m))
                                     m)))
                            q)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_primes.divides _n _m) p
                       (matita_arithmetics_div_and_mod.div x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_factorial.fact m)
                             (matita_arithmetics_factorial.fact
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m))
                                   m))))))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times q
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_factorial.fact m)
                          (matita_arithmetics_factorial.fact
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m))
                                m))))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times q
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_factorial.fact m)
                                  (matita_arithmetics_factorial.fact
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              m))
                                        m))))) =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.divides _n _m) p
                          (matita_arithmetics_div_and_mod.div x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_factorial.fact m)
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m))))))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       q
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x q) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_primes.divides _n _m) p x))
                       (matita_basics_logic.match_Or cic.prop
                          (matita_arithmetics_primes.divides p
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_factorial.fact m)
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m))))
                          (matita_arithmetics_primes.divides p q)
                          (__ :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.Or _A _B)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_primes.divides _n _m)
                                     p
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_factorial.fact m)
                                        (matita_arithmetics_factorial.fact
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    m))
                                              m))))
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_primes.divides _n _m)
                                     p q)) =>
                           (_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_primes.divides _n _m) p q)
                          (Hdiv :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.divides _n _m) p
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_factorial.fact m)
                                     (matita_arithmetics_factorial.fact
                                        (matita_arithmetics_nat.minus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 m))
                                           m)))) =>
                           matita_basics_logic.False_ind
                             (_x_66 :
                                cic.Term cic.prop matita_basics_logic.False =>
                              cic.lift cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_primes.divides _n _m) p
                                   q))
                             (matita_basics_logic.match_Or cic.prop
                                (matita_arithmetics_primes.divides p
                                   (matita_arithmetics_factorial.fact m))
                                (matita_arithmetics_primes.divides p
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               m))
                                         m)))
                                (__ :
                                   cic.Term cic.prop
                                     ((_A : cic.Univ cic.prop =>
                                       _B : cic.Univ cic.prop =>
                                       matita_basics_logic.Or _A _B)
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_primes.divides
                                            _n _m)
                                           p
                                           (matita_arithmetics_factorial.fact
                                              m))
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_primes.divides
                                            _n _m)
                                           p
                                           (matita_arithmetics_factorial.fact
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       m))
                                                 m)))) =>
                                 matita_basics_logic.False)
                                (Hdiv0 :
                                   cic.Term cic.prop
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_primes.divides _n
                                         _m)
                                        p
                                        (matita_arithmetics_factorial.fact m)) =>
                                 matita_basics_logic.absurd
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __) p m)
                                   (matita_arithmetics_chebyshev_chebyshev_theta.divides_fact_to_le
                                      p m primep Hdiv0)
                                   (matita_arithmetics_nat.lt_to_not_le m p
                                      (matita_arithmetics_nat.lt_to_le
                                         (matita_arithmetics_nat.S m) p lemp)))
                                (Hdiv0 :
                                   cic.Term cic.prop
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_primes.divides _n
                                         _m)
                                        p
                                        (matita_arithmetics_factorial.fact
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    m))
                                              m))) =>
                                 matita_basics_logic.absurd
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __) p
                                      (matita_arithmetics_nat.S m))
                                   (matita_arithmetics_chebyshev_chebyshev_theta.divides_fact_to_le
                                      p (matita_arithmetics_nat.S m) primep
                                      (matita_basics_logic.eq_ind_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  m))
                                            m)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __ :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I
                                                    matita_arithmetics_nat.nat)
                                                 x
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O))
                                                          m))
                                                    m)) =>
                                          cic.lift cic.prop cic.prop cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_primes.divides
                                                _n _m)
                                               p
                                               (matita_arithmetics_factorial.fact
                                                  x)))
                                         Hdiv0 (matita_arithmetics_nat.S m)
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            m
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    m x_1) =>
                                             cic.lift cic.prop cic.prop cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S m)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.plus
                                                           m x_1))
                                                     m)))
                                            (matita_basics_logic.eq_ind_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus m
                                                  (matita_arithmetics_nat.S m))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __ :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_nat.plus
                                                          m
                                                          (matita_arithmetics_nat.S
                                                             m))) =>
                                                cic.lift cic.prop cic.prop
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __1)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        m)
                                                     (matita_arithmetics_nat.minus
                                                        x m)))
                                               (matita_basics_logic.eq_ind_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.S
                                                        m)
                                                     m)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __ :
                                                     cic.Term cic.prop
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          x
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.S
                                                                m)
                                                             m)) =>
                                                   cic.lift cic.prop cic.prop
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __1)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.S
                                                           m)
                                                        (matita_arithmetics_nat.minus
                                                           x m)))
                                                  (matita_arithmetics_nat.minus_plus_m_m
                                                     (matita_arithmetics_nat.S
                                                        m)
                                                     m)
                                                  (matita_arithmetics_nat.plus
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        m))
                                                  (matita_arithmetics_nat.commutative_plus
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        m)))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.plus
                                                     m m))
                                               (matita_arithmetics_nat.plus_n_Sm
                                                  m m))
                                            (matita_arithmetics_nat.plus m
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.plus_n_O
                                               m))))
                                   (matita_arithmetics_nat.lt_to_not_le
                                      (matita_arithmetics_nat.S m) p lemp))
                                (matita_arithmetics_gcd.divides_times_to_divides
                                   p (matita_arithmetics_factorial.fact m)
                                   (matita_arithmetics_factorial.fact
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               m))
                                         m))
                                   primep Hdiv)))
                          (auto :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.divides _n _m) p q) =>
                           auto)
                          (matita_arithmetics_gcd.divides_times_to_divides p
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_factorial.fact m)
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m)))
                             q primep
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m)))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        (matita_arithmetics_factorial.fact
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 m)))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_primes.divides _n _m)
                                      p x_1))
                                (matita_arithmetics_primes.divides_fact
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m))
                                   p
                                   (matita_arithmetics_primes.prime_to_lt_O p
                                      primep)
                                   lep)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_factorial.fact m)
                                      (matita_arithmetics_factorial.fact
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  m))
                                            m)))
                                   q)
                                Hq)))
                       (matita_arithmetics_div_and_mod.div
                          (matita_arithmetics_nat.times q
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_factorial.fact m)
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m))))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_factorial.fact m)
                             (matita_arithmetics_factorial.fact
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m))
                                   m))))
                       (matita_arithmetics_div_and_mod.div_times q
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_factorial.fact m)
                             (matita_arithmetics_factorial.fact
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m))
                                   m)))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.O)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.times
                                        matita_arithmetics_nat.O
                                        matita_arithmetics_nat.O)) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2) x
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_factorial.fact m)
                                      (matita_arithmetics_factorial.fact
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  m))
                                            m)))))
                             (matita_arithmetics_nat.lt_times
                                matita_arithmetics_nat.O
                                (matita_arithmetics_factorial.fact m)
                                matita_arithmetics_nat.O
                                (matita_arithmetics_factorial.fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m))
                                (matita_arithmetics_factorial.le_1_fact m)
                                (matita_arithmetics_factorial.le_1_fact
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m))
                                      m)))
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.times_n_O
                                matita_arithmetics_nat.O))))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_factorial.fact m)
                          (matita_arithmetics_factorial.fact
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m))
                                m)))
                       q)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_factorial.fact m)
                          (matita_arithmetics_factorial.fact
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m))
                                m)))
                       q))
                 (matita_arithmetics_factorial.fact
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 Hq)
              (matita_arithmetics_binomial.bc2
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m))
                 m
                 (matita_basics_logic.eq_ind
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    m
                    (x_1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m x_1) =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) m
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m x_1))))
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus m m))
                                (matita_arithmetics_nat.plus
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.S m)))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus m m))))
                       (cic.lift cic.prop (cic.type cic.z) cic.I
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __) m
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus m m))))
                       (matita_arithmetics_nat.minus_le
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m m))
                          (matita_arithmetics_nat.plus
                             matita_arithmetics_nat.O
                             (matita_arithmetics_nat.S m)))
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S m))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   (cic.univ (cic.type cic.z)
                                      (cic.type (cic.s cic.z)) cic.I))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.minus x
                                         (matita_arithmetics_nat.plus
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.S m)))
                                      x))
                                (cic.lift cic.prop (cic.type cic.z) cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __) m x))))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.minus m
                                matita_arithmetics_nat.O)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __) x
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.S m))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __) m
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.S m))))))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                m
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) x
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.S m))))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) m
                                            (matita_arithmetics_nat.plus m
                                               (matita_arithmetics_nat.S m))))))
                                (matita_basics_logic.refl
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __) m
                                         (matita_arithmetics_nat.plus m
                                            (matita_arithmetics_nat.S m)))))
                                (matita_arithmetics_nat.minus m
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.minus_n_O m))
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.S m))
                                (matita_arithmetics_nat.plus
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.S m)))
                             (matita_arithmetics_nat.minus_plus_plus_l m
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S m)))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m m))
                          (matita_arithmetics_nat.plus_n_Sm m m)))
                    (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.plus_n_O m))))
           (matita_arithmetics_binomial.bc
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m))
              m)
           (matita_arithmetics_binomial.bceq
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m))
              m))
        (matita_arithmetics_binomial.M m)
        (matita_arithmetics_binomial.Mdef m).

def divides_pi_p_M1 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              matita_arithmetics_nat.nat
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __) i
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m))))
                 (__ :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __) i
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  m)))) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.divides _n _m)
                    (matita_arithmetics_bigops.bigop i
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.andb
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             p)
                          (matita_arithmetics_primes.primeb p))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    (matita_arithmetics_binomial.M m)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           (cic.prod cic.prop cic.prop cic.prop cic.I
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) _x_365
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m))))
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __) _x_365
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               m)))) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_primes.divides _n _m)
                 (matita_arithmetics_bigops.bigop _x_365
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_binomial.M m))))
        (__ :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) matita_arithmetics_nat.O
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         m)))) =>
         matita_arithmetics_primes.quotient
           (matita_arithmetics_bigops.bigop matita_arithmetics_nat.O
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) p)
                 (matita_arithmetics_primes.primeb p))
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           (matita_arithmetics_binomial.M m)
           (matita_arithmetics_binomial.M m)
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times (matita_arithmetics_binomial.M m)
                 (matita_arithmetics_bigops.bigop matita_arithmetics_nat.O
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _0 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_binomial.M m)
                         (matita_arithmetics_bigops.bigop
                            matita_arithmetics_nat.O
                            (p :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_bool.andb
                               (matita_arithmetics_nat.leb
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m))
                                  p)
                               (matita_arithmetics_primes.primeb p))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (p :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             p)))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_binomial.M m) x))
              (matita_arithmetics_nat.times_n_1
                 (matita_arithmetics_binomial.M m))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_bigops.bigop matita_arithmetics_nat.O
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_binomial.M m))
              (matita_arithmetics_nat.commutative_times
                 (matita_arithmetics_bigops.bigop matita_arithmetics_nat.O
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_binomial.M m))))
        (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod cic.prop cic.prop cic.prop cic.I
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.le _n __) n
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            m))))
                (__ :
                   cic.Term cic.prop
                     ((_n :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       __ :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_arithmetics_nat.le _n __) n
                        (matita_arithmetics_nat.S
                           (matita_arithmetics_nat.S
                              (matita_arithmetics_nat.times
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O))
                                 m)))) =>
                 (_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.divides _n _m)
                   (matita_arithmetics_bigops.bigop n
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_basics_bool.andb
                         (matita_arithmetics_nat.leb
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S m))
                            p)
                         (matita_arithmetics_primes.primeb p))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       p))
                   (matita_arithmetics_binomial.M m))) =>
         len :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __) (matita_arithmetics_nat.S n)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         m)))) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_basics_bool.bool)
              (matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) n)
                 (matita_arithmetics_primes.primeb n))
              matita_basics_bool.true)
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_basics_bool.bool)
              (matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) n)
                 (matita_arithmetics_primes.primeb n))
              matita_basics_bool.false)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_basics_bool.bool)
                      (matita_basics_bool.andb
                         (matita_arithmetics_nat.leb
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S m))
                            n)
                         (matita_arithmetics_primes.primeb n))
                      matita_basics_bool.true)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_basics_bool.bool)
                      (matita_basics_bool.andb
                         (matita_arithmetics_nat.leb
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S m))
                            n)
                         (matita_arithmetics_primes.primeb n))
                      matita_basics_bool.false)) =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_primes.divides _n _m)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       p)
                    (matita_arithmetics_primes.primeb p))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))
              (matita_arithmetics_binomial.M m))
           (Hc :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_basics_bool.bool)
                   (matita_basics_bool.andb
                      (matita_arithmetics_nat.leb
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S m))
                         n)
                      (matita_arithmetics_primes.primeb n))
                   matita_basics_bool.true) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times n
                 (matita_arithmetics_bigops.bigop n
                    (i0 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          i0)
                       (matita_arithmetics_primes.primeb i0))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i0 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     i0)))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times n
                         (matita_arithmetics_bigops.bigop n
                            (i0 :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_bool.andb
                               (matita_arithmetics_nat.leb
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m))
                                  i0)
                               (matita_arithmetics_primes.primeb i0))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (i0 :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             i0)))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.divides _n _m) x
                    (matita_arithmetics_binomial.M m)))
              (matita_arithmetics_gcd.divides_to_divides_times n
                 (matita_arithmetics_bigops.bigop n
                    (i0 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          i0)
                       (matita_arithmetics_primes.primeb i0))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i0 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     i0))
                 (matita_arithmetics_binomial.M m)
                 (matita_arithmetics_primes.primeb_true_to_prime n
                    (matita_basics_bool.andb_true_r
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          n)
                       (matita_arithmetics_primes.primeb n) Hc))
                 ((p :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   primep :
                     cic.Term cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.prime __) p) =>
                   matita_arithmetics_nat.nat_ind
                     (_x_365 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      cic.lift cic.prop cic.prop cic.I
                        (cic.prod cic.prop cic.prop cic.prop cic.I
                           ((_n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             __ :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_arithmetics_nat.le _n __) _x_365 p)
                           (__ :
                              cic.Term cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) _x_365 p) =>
                            (_A : cic.Univ cic.prop =>
                             matita_basics_logic.Not _A)
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.divides _n _m) p
                                 (matita_arithmetics_bigops.bigop _x_365
                                    (p0 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_bool.andb
                                       (matita_arithmetics_nat.leb
                                          (matita_arithmetics_nat.S
                                             (matita_arithmetics_nat.S m))
                                          p0)
                                       (matita_arithmetics_primes.primeb p0))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) cic.I
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)
                                    matita_arithmetics_nat.times
                                    (p0 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     p0))))))
                     (__ :
                        cic.Term cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             matita_arithmetics_nat.O p) =>
                      matita_basics_logic.not_to_not
                        ((_n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          _m :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.divides _n _m) p
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                        ((_n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_nat.le _n __1) p
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                        (matita_arithmetics_primes.divides_to_le p
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                           (matita_arithmetics_nat.lt_O_S
                              matita_arithmetics_nat.O))
                        (matita_arithmetics_nat.lt_to_not_le
                           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                           p
                           (matita_arithmetics_primes.prime_to_lt_SO p primep)))
                     (n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      Hind1 :
                        cic.Term cic.prop
                          (cic.prod cic.prop cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) n1 p)
                             (__ :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.le _n __) n1 p) =>
                              (_A : cic.Univ cic.prop =>
                               matita_basics_logic.Not _A)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_primes.divides _n _m) p
                                   (matita_arithmetics_bigops.bigop n1
                                      (p0 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_bool.andb
                                         (matita_arithmetics_nat.leb
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S m))
                                            p0)
                                         (matita_arithmetics_primes.primeb p0))
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.times
                                      (p0 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       p0))))) =>
                      Hn1 :
                        cic.Term cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_nat.S n1) p) =>
                      matita_basics_logic.match_Or cic.prop
                        (matita_basics_logic.eq
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              matita_basics_bool.bool)
                           (matita_basics_bool.andb
                              (matita_arithmetics_nat.leb
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S m))
                                 n1)
                              (matita_arithmetics_primes.primeb n1))
                           matita_basics_bool.true)
                        (matita_basics_logic.eq
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              matita_basics_bool.bool)
                           (matita_basics_bool.andb
                              (matita_arithmetics_nat.leb
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S m))
                                 n1)
                              (matita_arithmetics_primes.primeb n1))
                           matita_basics_bool.false)
                        (__ :
                           cic.Term cic.prop
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.Or _A _B)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_basics_bool.bool)
                                   (matita_basics_bool.andb
                                      (matita_arithmetics_nat.leb
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S m))
                                         n1)
                                      (matita_arithmetics_primes.primeb n1))
                                   matita_basics_bool.true)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_basics_bool.bool)
                                   (matita_basics_bool.andb
                                      (matita_arithmetics_nat.leb
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S m))
                                         n1)
                                      (matita_arithmetics_primes.primeb n1))
                                   matita_basics_bool.false)) =>
                         (_A : cic.Univ cic.prop =>
                          matita_basics_logic.Not _A)
                           ((_n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             _m :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_arithmetics_primes.divides _n _m) p
                              (matita_arithmetics_bigops.bigop
                                 (matita_arithmetics_nat.S n1)
                                 (p0 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_bool.andb
                                    (matita_arithmetics_nat.leb
                                       (matita_arithmetics_nat.S
                                          (matita_arithmetics_nat.S m))
                                       p0)
                                    (matita_arithmetics_primes.primeb p0))
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O)
                                 matita_arithmetics_nat.times
                                 (p0 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  p0))))
                        (Hc1 :
                           cic.Term cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_basics_bool.bool)
                                (matita_basics_bool.andb
                                   (matita_arithmetics_nat.leb
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S m))
                                      n1)
                                   (matita_arithmetics_primes.primeb n1))
                                matita_basics_bool.true) =>
                         matita_basics_logic.eq_ind_r
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_nat.times n1
                              (matita_arithmetics_bigops.bigop n1
                                 (i0 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_bool.andb
                                    (matita_arithmetics_nat.leb
                                       (matita_arithmetics_nat.S
                                          (matita_arithmetics_nat.S m))
                                       i0)
                                    (matita_arithmetics_primes.primeb i0))
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O)
                                 matita_arithmetics_nat.times
                                 (i0 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  i0)))
                           (x :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_nat.times n1
                                      (matita_arithmetics_bigops.bigop n1
                                         (i0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_bool.andb
                                            (matita_arithmetics_nat.leb
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S m))
                                               i0)
                                            (matita_arithmetics_primes.primeb
                                               i0))
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.times
                                         (i0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          i0)))) =>
                            cic.lift cic.prop cic.prop cic.I
                              ((_A : cic.Univ cic.prop =>
                                matita_basics_logic.Not _A)
                                 ((_n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   _m :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_primes.divides _n _m) p
                                    x)))
                           (matita_basics_logic.nmk
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.divides _n _m) p
                                 (matita_arithmetics_nat.times n1
                                    (matita_arithmetics_bigops.bigop n1
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_bool.andb
                                          (matita_arithmetics_nat.leb
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S m))
                                             i0)
                                          (matita_arithmetics_primes.primeb
                                             i0))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)
                                       matita_arithmetics_nat.times
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        i0))))
                              (Habs :
                                 cic.Term cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_primes.divides _n _m)
                                      p
                                      (matita_arithmetics_nat.times n1
                                         (matita_arithmetics_bigops.bigop n1
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_bool.andb
                                               (matita_arithmetics_nat.leb
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        m))
                                                  i0)
                                               (matita_arithmetics_primes.primeb
                                                  i0))
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             i0)))) =>
                               matita_basics_logic.match_Or cic.prop
                                 (matita_arithmetics_primes.divides p n1)
                                 (matita_arithmetics_primes.divides p
                                    (matita_arithmetics_bigops.bigop n1
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_bool.andb
                                          (matita_arithmetics_nat.leb
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S m))
                                             i0)
                                          (matita_arithmetics_primes.primeb
                                             i0))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)
                                       matita_arithmetics_nat.times
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        i0)))
                                 (__ :
                                    cic.Term cic.prop
                                      ((_A : cic.Univ cic.prop =>
                                        _B : cic.Univ cic.prop =>
                                        matita_basics_logic.Or _A _B)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_primes.divides
                                             _n _m)
                                            p n1)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_primes.divides
                                             _n _m)
                                            p
                                            (matita_arithmetics_bigops.bigop
                                               n1
                                               (i0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_basics_bool.andb
                                                  (matita_arithmetics_nat.leb
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           m))
                                                     i0)
                                                  (matita_arithmetics_primes.primeb
                                                     i0))
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.times
                                               (i0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                i0)))) =>
                                  matita_basics_logic.False)
                                 (Habs0 :
                                    cic.Term cic.prop
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_primes.divides _n
                                          _m)
                                         p n1) =>
                                  matita_basics_logic.absurd
                                    ((_n :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __ :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.le _n __)
                                       (matita_arithmetics_nat.S n1) p)
                                    Hn1
                                    (matita_arithmetics_nat.le_to_not_lt p n1
                                       (matita_arithmetics_primes.divides_to_le
                                          p n1
                                          (matita_arithmetics_primes.prime_to_lt_O
                                             n1
                                             (matita_arithmetics_primes.primeb_true_to_prime
                                                n1
                                                (matita_basics_bool.andb_true_r
                                                   (matita_arithmetics_nat.leb
                                                      (matita_arithmetics_nat.S
                                                         (matita_arithmetics_nat.S
                                                            m))
                                                      n1)
                                                   (matita_arithmetics_primes.primeb
                                                      n1)
                                                   Hc1)))
                                          Habs0)))
                                 (Habs0 :
                                    cic.Term cic.prop
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_primes.divides _n
                                          _m)
                                         p
                                         (matita_arithmetics_bigops.bigop n1
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_bool.andb
                                               (matita_arithmetics_nat.leb
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        m))
                                                  i0)
                                               (matita_arithmetics_primes.primeb
                                                  i0))
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             i0))) =>
                                  matita_basics_logic.absurd
                                    ((_n :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      _m :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_primes.divides _n _m)
                                       p
                                       (matita_arithmetics_bigops.bigop n1
                                          (i0 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_bool.andb
                                             (matita_arithmetics_nat.leb
                                                (matita_arithmetics_nat.S
                                                   (matita_arithmetics_nat.S
                                                      m))
                                                i0)
                                             (matita_arithmetics_primes.primeb
                                                i0))
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) cic.I
                                             matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.S
                                             matita_arithmetics_nat.O)
                                          matita_arithmetics_nat.times
                                          (i0 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           i0)))
                                    Habs0
                                    (Hind1
                                       (matita_arithmetics_nat.lt_to_le n1 p
                                          Hn1)))
                                 (matita_arithmetics_gcd.divides_times_to_divides
                                    p n1
                                    (matita_arithmetics_bigops.bigop n1
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_bool.andb
                                          (matita_arithmetics_nat.leb
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S m))
                                             i0)
                                          (matita_arithmetics_primes.primeb
                                             i0))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) cic.I
                                          matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)
                                       matita_arithmetics_nat.times
                                       (i0 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        i0))
                                    primep Habs)))
                           (matita_arithmetics_bigops.bigop
                              (matita_arithmetics_nat.S n1)
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_bool.andb
                                 (matita_arithmetics_nat.leb
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S m))
                                    i0)
                                 (matita_arithmetics_primes.primeb i0))
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)
                              matita_arithmetics_nat.times
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               i0))
                           (matita_arithmetics_bigops.bigop_Strue n1
                              (__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_bool.andb
                                 (matita_arithmetics_nat.leb
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S m))
                                    __)
                                 (matita_arithmetics_primes.primeb __))
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)
                              matita_arithmetics_nat.times
                              (__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __)
                              Hc1))
                        (Hc1 :
                           cic.Term cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_basics_bool.bool)
                                (matita_basics_bool.andb
                                   (matita_arithmetics_nat.leb
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S m))
                                      n1)
                                   (matita_arithmetics_primes.primeb n1))
                                matita_basics_bool.false) =>
                         matita_basics_logic.eq_ind_r
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) cic.I
                              matita_arithmetics_nat.nat)
                           (matita_arithmetics_bigops.bigop n1
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_bool.andb
                                 (matita_arithmetics_nat.leb
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S m))
                                    i0)
                                 (matita_arithmetics_primes.primeb i0))
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)
                              matita_arithmetics_nat.times
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               i0))
                           (x :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   x
                                   (matita_arithmetics_bigops.bigop n1
                                      (i0 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_bool.andb
                                         (matita_arithmetics_nat.leb
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S m))
                                            i0)
                                         (matita_arithmetics_primes.primeb i0))
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.times
                                      (i0 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       i0))) =>
                            cic.lift cic.prop cic.prop cic.I
                              ((_A : cic.Univ cic.prop =>
                                matita_basics_logic.Not _A)
                                 ((_n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   _m :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_primes.divides _n _m) p
                                    x)))
                           (Hind1 (matita_arithmetics_nat.lt_to_le n1 p Hn1))
                           (matita_arithmetics_bigops.bigop
                              (matita_arithmetics_nat.S n1)
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_bool.andb
                                 (matita_arithmetics_nat.leb
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S m))
                                    i0)
                                 (matita_arithmetics_primes.primeb i0))
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)
                              matita_arithmetics_nat.times
                              (i0 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               i0))
                           (matita_arithmetics_bigops.bigop_Sfalse n1
                              (__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_bool.andb
                                 (matita_arithmetics_nat.leb
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S m))
                                    __)
                                 (matita_arithmetics_primes.primeb __))
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.S
                                 matita_arithmetics_nat.O)
                              matita_arithmetics_nat.times
                              (__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __)
                              (matita_basics_logic.rewrite_r
                                 (cic.lift (cic.type cic.z)
                                    (cic.type (cic.s (cic.s cic.z))) cic.I
                                    matita_basics_bool.bool)
                                 matita_basics_bool.false
                                 (x :
                                    cic.Term (cic.type cic.z)
                                      matita_basics_bool.bool =>
                                  cic.lift cic.prop
                                    (cic.type (cic.s (cic.s cic.z))) cic.I
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_basics_bool.bool)
                                       x matita_basics_bool.false))
                                 (matita_basics_logic.refl
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       matita_basics_bool.bool)
                                    matita_basics_bool.false)
                                 (matita_basics_bool.andb
                                    (matita_arithmetics_nat.leb
                                       (matita_arithmetics_nat.S
                                          (matita_arithmetics_nat.S m))
                                       n1)
                                    (matita_arithmetics_primes.primeb n1))
                                 Hc1)))
                        (matita_basics_bool.true_or_false
                           (matita_basics_bool.andb
                              (matita_arithmetics_nat.leb
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S m))
                                 n1)
                              (matita_arithmetics_primes.primeb n1))))
                     n)
                    n
                    (matita_arithmetics_primes.primeb_true_to_prime n
                       (matita_basics_bool.andb_true_r
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             n)
                          (matita_arithmetics_primes.primeb n) Hc))
                    (matita_arithmetics_nat.le_n n))
                 (matita_arithmetics_chebyshev_chebyshev_theta.prime_to_divides_M
                    m n
                    (matita_arithmetics_primes.primeb_true_to_prime n
                       (matita_basics_bool.andb_true_r
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             n)
                          (matita_arithmetics_primes.primeb n) Hc))
                    (matita_arithmetics_nat.leb_true_to_le
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       n
                       (matita_basics_bool.andb_true_l
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             n)
                          (matita_arithmetics_primes.primeb n) Hc))
                    (matita_arithmetics_nat.le_S_S_to_le n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m))
                       len))
                 (Hind
                    (matita_arithmetics_nat.lt_to_le n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       len)))
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       i0)
                    (matita_arithmetics_primes.primeb i0))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i0))
              (matita_arithmetics_bigops.bigop_Strue n
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       __)
                    (matita_arithmetics_primes.primeb __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __)
                 Hc))
           (Hc :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_basics_bool.bool)
                   (matita_basics_bool.andb
                      (matita_arithmetics_nat.leb
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S m))
                         n)
                      (matita_arithmetics_primes.primeb n))
                   matita_basics_bool.false) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop n
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       i0)
                    (matita_arithmetics_primes.primeb i0))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i0))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_bigops.bigop n
                         (i0 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_basics_bool.andb
                            (matita_arithmetics_nat.leb
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S m))
                               i0)
                            (matita_arithmetics_primes.primeb i0))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i0 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          i0))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.divides _n _m) x
                    (matita_arithmetics_binomial.M m)))
              (Hind
                 (matita_arithmetics_nat.lt_to_le n
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    len))
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       i0)
                    (matita_arithmetics_primes.primeb i0))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i0))
              (matita_arithmetics_bigops.bigop_Sfalse n
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       __)
                    (matita_arithmetics_primes.primeb __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __)
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_basics_bool.bool)
                    matita_basics_bool.false
                    (x : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_basics_bool.bool)
                          x matita_basics_bool.false))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_basics_bool.bool)
                       matita_basics_bool.false)
                    (matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          n)
                       (matita_arithmetics_primes.primeb n))
                    Hc)))
           (matita_basics_bool.true_or_false
              (matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) n)
                 (matita_arithmetics_primes.primeb n))))
        i.

def divides_pi_p_M :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_primes.divides _n _m)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       p)
                    (matita_arithmetics_primes.primeb p))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))
              (matita_arithmetics_binomial.M m)))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_chebyshev_chebyshev_theta.divides_pi_p_M1 m
        (matita_arithmetics_nat.S
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m)))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))).

def theta_pi_p_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_bigops.bigop
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.primeb p)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_bigops.bigop
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            m)))
                   (p :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_primes.primeb p)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (p :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    p))) =>
         cic.lift cic.prop cic.prop cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              x
              (matita_arithmetics_nat.times
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_bigops.bigop
              (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.primeb p)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_bigops.bigop
                      (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_arithmetics_primes.primeb p)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       p))) =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb p)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.andb
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             p)
                          (matita_arithmetics_primes.primeb p))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    x)))
           (matita_basics_logic.eq_ind
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    matita_arithmetics_nat.O)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb
                    (matita_arithmetics_nat.plus i matita_arithmetics_nat.O))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_arithmetics_bigops.op
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_sigma_pi.timesA)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.plus i matita_arithmetics_nat.O))
              (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     m)))
                            matita_arithmetics_nat.O)
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.primeb
                            (matita_arithmetics_nat.plus i
                               matita_arithmetics_nat.O))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         (matita_arithmetics_bigops.op
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_sigma_pi.timesA)
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_nat.plus i
                            matita_arithmetics_nat.O))
                      x_1) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    x_1
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.andb
                             (matita_arithmetics_nat.leb
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S m))
                                p)
                             (matita_arithmetics_primes.primeb p))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_nat.times
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           p))
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb p)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_nat.times
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           p)))))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.op
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_sigma_pi.timesA
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m)))
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.plus i
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_bigops.op
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_sigma_pi.timesA)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.plus i
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))))
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          matita_arithmetics_nat.O)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.plus i
                             matita_arithmetics_nat.O))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_bigops.op
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_sigma_pi.timesA)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.plus i
                          matita_arithmetics_nat.O)))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_bigops.op
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_sigma_pi.timesA
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           m)))
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m)))
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.primeb
                                  (matita_arithmetics_nat.plus i
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S m))))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               (matita_arithmetics_bigops.op
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)
                                  matita_arithmetics_sigma_pi.timesA)
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.plus i
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m))))
                            (matita_arithmetics_bigops.bigop
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m))
                                  matita_arithmetics_nat.O)
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.primeb
                                  (matita_arithmetics_nat.plus i
                                     matita_arithmetics_nat.O))
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               (matita_arithmetics_bigops.op
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)
                                  matita_arithmetics_sigma_pi.timesA)
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.plus i
                                  matita_arithmetics_nat.O)))) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m)))
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_bool.andb
                                (matita_arithmetics_nat.leb
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S m))
                                   p)
                                (matita_arithmetics_primes.primeb p))
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_nat.times
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              p))
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb p)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_nat.times
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              p)))))
                 (matita_basics_logic.eq_f2
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_bigops.op
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_sigma_pi.timesA)
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m)))
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.plus i
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_bigops.op
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_sigma_pi.timesA)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.plus i
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))))
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.andb
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             p)
                          (matita_arithmetics_primes.primeb p))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          matita_arithmetics_nat.O)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb
                          (matita_arithmetics_nat.plus i
                             matita_arithmetics_nat.O))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_bigops.op
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_sigma_pi.timesA)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.plus i
                          matita_arithmetics_nat.O))
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb p)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_bool.andb
                             (matita_arithmetics_nat.leb
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S m))
                                i)
                             (matita_arithmetics_primes.primeb i))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_bigops.op
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_sigma_pi.timesA)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           i))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_bigops.bigop
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           m)))
                                  (i :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_bool.andb
                                     (matita_arithmetics_nat.leb
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S m))
                                        i)
                                     (matita_arithmetics_primes.primeb i))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)
                                  (matita_arithmetics_bigops.op
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     matita_arithmetics_sigma_pi.timesA)
                                  (i :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   i))) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         m)))
                                (p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_bool.andb
                                   (matita_arithmetics_nat.leb
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S m))
                                      p)
                                   (matita_arithmetics_primes.primeb p))
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                matita_arithmetics_nat.times
                                (p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 p))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_bool.andb
                                (matita_arithmetics_nat.leb
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S m))
                                   i)
                                (matita_arithmetics_primes.primeb i))
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_bigops.op
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                matita_arithmetics_sigma_pi.timesA)
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              i)))
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m)))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m)))
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb
                             (matita_arithmetics_nat.plus i
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S m))))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_bigops.op
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_sigma_pi.timesA)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.plus i
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))))
                       (matita_arithmetics_bigops.bigop_I_gen
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          matita_arithmetics_primes.primeb
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_sigma_pi.timesA
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __)
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))))
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times m
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S m))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            m)))))
                             (matita_arithmetics_nat.minus_le
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))))
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))))
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S m))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S x))))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O))))
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        matita_arithmetics_nat.O)
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))))
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S m))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S x))))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              x))
                                                        x)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           matita_arithmetics_nat.O)
                                                        x))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           x))
                                                     x)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        m))
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.plus
                                                           m x)))))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.plus
                                                                    m x)))
                                                           (matita_arithmetics_nat.plus
                                                              m x))
                                                        (matita_arithmetics_nat.plus
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              m x)))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.plus
                                                                 m x)))
                                                        (matita_arithmetics_nat.plus
                                                           m x))))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           m))
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.plus
                                                              m
                                                              (matita_arithmetics_nat.plus
                                                                 m x))))))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            m
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    x))
                                                              x)
                                                           (matita_arithmetics_nat.plus
                                                              matita_arithmetics_nat.O
                                                              x))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 x))
                                                           x)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              m))
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.plus
                                                                 m x)))))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus m
                                                  (matita_arithmetics_nat.S m))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                 m)
                                                              (matita_arithmetics_nat.plus
                                                                 matita_arithmetics_nat.O
                                                                 m))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    m))
                                                              m)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 m))
                                                           (matita_arithmetics_nat.S
                                                              x)))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           m)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)) m)
                                                                 (matita_arithmetics_nat.plus
                                                                    matita_arithmetics_nat.O
                                                                    m))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                 m)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    m))
                                                              x))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              m))
                                                        matita_arithmetics_nat.O)
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 cic.I))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 x
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)) m)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                 (matita_arithmetics_nat.plus
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)))))))
                                                     (matita_basics_logic.rewrite_l
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              m))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)) m)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)))))))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              m
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    m)))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)) x))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m)))))))
                                                           (matita_basics_logic.refl
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    m))))))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    m))
                                                              m)
                                                           (matita_arithmetics_nat.commutative_plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    m))
                                                              m))
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 m))
                                                           matita_arithmetics_nat.O)
                                                        (matita_arithmetics_nat.minus_n_O
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 m))))
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 m))
                                                           m)
                                                        (matita_arithmetics_nat.plus
                                                           matita_arithmetics_nat.O
                                                           m))
                                                     (matita_arithmetics_nat.minus_plus_plus_l
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              m))
                                                        matita_arithmetics_nat.O
                                                        m))
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.plus
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           m)))
                                                  (matita_arithmetics_nat.plus_n_Sm
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        m)))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.plus
                                                     m m))
                                               (matita_arithmetics_nat.plus_n_Sm
                                                  m m))
                                            (matita_arithmetics_nat.plus m
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.plus_n_O
                                               m))
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times_n_O m))
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times_n_Sm m
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_arithmetics_nat.times_n_Sm m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))))
                    (matita_arithmetics_bigops.bigop_I
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       matita_arithmetics_primes.primeb
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_sigma_pi.timesA
                       (__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __)))
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       matita_arithmetics_nat.O)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb
                       (matita_arithmetics_nat.plus i
                          matita_arithmetics_nat.O))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_bigops.op
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_sigma_pi.timesA)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.plus i matita_arithmetics_nat.O))
                 (matita_arithmetics_bigops.bigop_sumI
                    matita_arithmetics_nat.O
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb p)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_sigma_pi.timesA
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p)
                    (matita_arithmetics_nat.le_O_n
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)))
                    (matita_arithmetics_nat.le_S_S
                       (matita_arithmetics_nat.S m)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m))
                       (matita_arithmetics_nat.le_S_S m
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times m
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))
                             (cic.lift cic.prop (cic.type cic.z) cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __) m
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      m)))
                             (matita_arithmetics_nat.minus_le
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) m
                                            x))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        matita_arithmetics_nat.O)
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               m x))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus m
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        x x)
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           matita_arithmetics_nat.O)
                                                        x))
                                                  (matita_arithmetics_nat.plus
                                                     x x)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  m
                                                  (matita_arithmetics_nat.plus
                                                     m x)))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         matita_arithmetics_nat.O
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.plus
                                                              m x)
                                                           (matita_arithmetics_nat.plus
                                                              m x))
                                                        (matita_arithmetics_nat.plus
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              m x)))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.plus
                                                           m x)
                                                        (matita_arithmetics_nat.plus
                                                           m x))))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     m
                                                     (matita_arithmetics_nat.plus
                                                        m
                                                        (matita_arithmetics_nat.plus
                                                           m x))))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            m
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.plus
                                                              x x)
                                                           (matita_arithmetics_nat.plus
                                                              matita_arithmetics_nat.O
                                                              x))
                                                        (matita_arithmetics_nat.plus
                                                           x x)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        m
                                                        (matita_arithmetics_nat.plus
                                                           m x)))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  m matita_arithmetics_nat.O)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              m m)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           m
                                                           (matita_arithmetics_nat.plus
                                                              m m)))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  m
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           (cic.univ
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              cic.I))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              x
                                                              (matita_arithmetics_nat.plus
                                                                 m m)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              m
                                                              (matita_arithmetics_nat.plus
                                                                 m m)))))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           m
                                                           (matita_arithmetics_nat.plus
                                                              m m))))
                                                  (matita_arithmetics_nat.minus
                                                     m
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.minus_n_O
                                                     m))
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.plus
                                                     m m)
                                                  (matita_arithmetics_nat.plus
                                                     matita_arithmetics_nat.O
                                                     m))
                                               (matita_arithmetics_nat.minus_plus_plus_l
                                                  m matita_arithmetics_nat.O
                                                  m))
                                            (matita_arithmetics_nat.plus m
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.plus_n_O
                                               m))
                                         (matita_arithmetics_nat.times m
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.times_n_O m))
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times_n_Sm m
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_arithmetics_nat.times_n_Sm m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)
                                (matita_arithmetics_nat.commutative_times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))))))
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 (matita_arithmetics_bigops.op
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_sigma_pi.timesA)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i))
              (matita_arithmetics_bigops.bigop_I
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 matita_arithmetics_primes.primeb
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_sigma_pi.timesA
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m)))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))).

def div_theta_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_div_and_mod.div
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       p)
                    (matita_arithmetics_primes.primeb p))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_div_and_mod.div_mod_spec_to_eq
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m)))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.S m))
        (matita_arithmetics_div_and_mod.div
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_bigops.bigop
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_bool.andb
              (matita_arithmetics_nat.leb
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) p)
              (matita_arithmetics_primes.primeb p))
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
        matita_arithmetics_nat.O
        (matita_arithmetics_div_and_mod.div_mod_spec_div_mod
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_chebyshev_chebyshev_theta.lt_O_theta
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_div_and_mod.div_mod_spec_intro
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_bigops.bigop
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) p)
                 (matita_arithmetics_primes.primeb p))
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           matita_arithmetics_nat.O
           (matita_arithmetics_chebyshev_chebyshev_theta.lt_O_theta
              (matita_arithmetics_nat.S m))
           (matita_basics_logic.eq_ind
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.leb
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S m))
                          p)
                       (matita_arithmetics_primes.primeb p))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))
              (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_bigops.bigop
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     m)))
                            (p :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_bool.andb
                               (matita_arithmetics_nat.leb
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S m))
                                  p)
                               (matita_arithmetics_primes.primeb p))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            matita_arithmetics_nat.times
                            (p :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             p))
                         (matita_arithmetics_chebyshev_chebyshev_theta.theta
                            (matita_arithmetics_nat.S m)))
                      x_1) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_chebyshev_chebyshev_theta.theta
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             m)))
                    x_1))
              (matita_arithmetics_chebyshev_chebyshev_theta.theta_pi_p_theta
                 m)
              (matita_arithmetics_nat.plus
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.andb
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             p)
                          (matita_arithmetics_primes.primeb p))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    (matita_arithmetics_chebyshev_chebyshev_theta.theta
                       (matita_arithmetics_nat.S m)))
                 matita_arithmetics_nat.O)
              (matita_arithmetics_nat.plus_n_O
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_bool.andb
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S m))
                             p)
                          (matita_arithmetics_primes.primeb p))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))
                    (matita_arithmetics_chebyshev_chebyshev_theta.theta
                       (matita_arithmetics_nat.S m)))))).

def le_theta_M_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (matita_arithmetics_nat.times (matita_arithmetics_binomial.M m)
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times
           (matita_arithmetics_bigops.bigop
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) p)
                 (matita_arithmetics_primes.primeb p))
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m)))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_nat.times
                   (matita_arithmetics_bigops.bigop
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               m)))
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_basics_bool.andb
                         (matita_arithmetics_nat.leb
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S m))
                            p)
                         (matita_arithmetics_primes.primeb p))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       p))
                   (matita_arithmetics_chebyshev_chebyshev_theta.theta
                      (matita_arithmetics_nat.S m)))) =>
         cic.lift cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1) x
              (matita_arithmetics_nat.times (matita_arithmetics_binomial.M m)
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S m)))))
        (matita_arithmetics_nat.le_times
           (matita_arithmetics_bigops.bigop
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m)))
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.andb
                 (matita_arithmetics_nat.leb
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)) p)
                 (matita_arithmetics_primes.primeb p))
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           (matita_arithmetics_binomial.M m)
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_primes.divides_to_le
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.leb
                       (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
                       p)
                    (matita_arithmetics_primes.primeb p))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  p))
              (matita_arithmetics_binomial.M m)
              (matita_arithmetics_binomial.lt_O_bc
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m))
                 m
                 (matita_arithmetics_nat.lt_to_le m
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m))
                    (matita_arithmetics_nat.le_S_S m
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times m
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times m
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))))
                          (cic.lift cic.prop (cic.type cic.z) cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __) m
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   m)))
                          (matita_arithmetics_nat.minus_le
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times m
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times m
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      (cic.univ (cic.type cic.z)
                                         (cic.type (cic.s cic.z)) cic.I))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times m
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (cic.lift cic.prop (cic.type cic.z) cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __) m x))))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus m
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         (cic.univ (cic.type cic.z)
                                            (cic.type (cic.s cic.z)) cic.I))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __) m
                                            x))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus m
                                      (matita_arithmetics_nat.times m
                                         matita_arithmetics_nat.O))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            (cic.univ (cic.type cic.z)
                                               (cic.type (cic.s cic.z)) cic.I))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.plus
                                                     x x)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        matita_arithmetics_nat.O)
                                                     x))
                                               (matita_arithmetics_nat.plus x
                                                  x)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            cic.I
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               m
                                               (matita_arithmetics_nat.plus m
                                                  x)))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      matita_arithmetics_nat.O
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               (cic.univ (cic.type cic.z)
                                                  (cic.type (cic.s cic.z))
                                                  cic.I))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.plus
                                                           m x)
                                                        (matita_arithmetics_nat.plus
                                                           m x))
                                                     (matita_arithmetics_nat.plus
                                                        x
                                                        (matita_arithmetics_nat.plus
                                                           m x)))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.plus
                                                        m x)
                                                     (matita_arithmetics_nat.plus
                                                        m x))))
                                            (cic.lift cic.prop
                                               (cic.type cic.z) cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  m
                                                  (matita_arithmetics_nat.plus
                                                     m
                                                     (matita_arithmetics_nat.plus
                                                        m x))))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         m
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  (cic.univ (cic.type cic.z)
                                                     (cic.type (cic.s cic.z))
                                                     cic.I))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           x x)
                                                        (matita_arithmetics_nat.plus
                                                           matita_arithmetics_nat.O
                                                           x))
                                                     (matita_arithmetics_nat.plus
                                                        x x)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z) cic.I
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     m
                                                     (matita_arithmetics_nat.plus
                                                        m x)))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.minus m
                                               matita_arithmetics_nat.O)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        x
                                                        (matita_arithmetics_nat.plus
                                                           m m)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        m
                                                        (matita_arithmetics_nat.plus
                                                           m m)))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               m
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        (cic.univ
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           cic.I))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           x
                                                           (matita_arithmetics_nat.plus
                                                              m m)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           m
                                                           (matita_arithmetics_nat.plus
                                                              m m)))))
                                               (matita_basics_logic.refl
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     (cic.univ
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        cic.I))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z) cic.I
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        m
                                                        (matita_arithmetics_nat.plus
                                                           m m))))
                                               (matita_arithmetics_nat.minus
                                                  m matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.minus_n_O
                                                  m))
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.plus m
                                                  m)
                                               (matita_arithmetics_nat.plus
                                                  matita_arithmetics_nat.O m))
                                            (matita_arithmetics_nat.minus_plus_plus_l
                                               m matita_arithmetics_nat.O m))
                                         (matita_arithmetics_nat.plus m
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.plus_n_O m))
                                      (matita_arithmetics_nat.times m
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times_n_O m))
                                   (matita_arithmetics_nat.times m
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times_n_Sm m
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times m
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.times_n_Sm m
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m)
                             (matita_arithmetics_nat.commutative_times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                m))))))
              (matita_arithmetics_chebyshev_chebyshev_theta.divides_pi_p_M m))
           (matita_arithmetics_nat.le_n
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.S m))))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m)))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta_pi_p_theta m).

def lt_O_to_le_theta_exp_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      matita_arithmetics_nat.O m) =>
               (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __1 __2)
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          m))
                    (matita_arithmetics_chebyshev_chebyshev_theta.theta
                       (matita_arithmetics_nat.S m))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      matita_arithmetics_nat.le_to_lt_to_lt
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m)))
        (matita_arithmetics_nat.times (matita_arithmetics_binomial.M m)
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_nat.times
           (matita_arithmetics_exp.exp
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m)))
        (matita_arithmetics_chebyshev_chebyshev_theta.le_theta_M_theta m)
        (matita_arithmetics_nat.monotonic_lt_times_l
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_chebyshev_chebyshev_theta.lt_O_theta
              (matita_arithmetics_nat.S m))
           (matita_arithmetics_binomial.M m)
           (matita_arithmetics_exp.exp
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))
           (matita_arithmetics_binomial.lt_M m posm)).

def theta_pred :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n))
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      lt1n :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
           matita_arithmetics_nat.nat)
        (matita_arithmetics_bigops.bigop
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 n))
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.primeb p)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   cic.I matita_arithmetics_nat.nat)
                x
                (matita_arithmetics_bigops.bigop
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         n))
                   (p :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_primes.primeb p)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (p :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    p))) =>
         cic.lift cic.prop cic.prop cic.I
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              x
              (matita_arithmetics_chebyshev_chebyshev_theta.theta
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)))))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              matita_arithmetics_nat.nat)
           (matita_arithmetics_bigops.bigop
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)))
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.primeb p)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) cic.I A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) cic.I
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_bigops.bigop
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               n)))
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_arithmetics_primes.primeb p)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (p :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       p))) =>
            cic.lift cic.prop cic.prop cic.I
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n))
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb p)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p))
                 x))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            n)
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.primeb i)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          i))) =>
               cic.lift cic.prop cic.prop cic.I
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    x
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                n)))
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb p)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        p))))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            n)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             n)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb i)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_nat.times
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           i))
                       (matita_arithmetics_bigops.bigop x
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb p)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          matita_arithmetics_nat.times
                          (p :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           p))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_bigops.bigop x
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_nat.times
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              i))
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                n)
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb p)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             matita_arithmetics_nat.times
                             (p :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              p))))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus n
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_bigops.bigop x
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb i)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                matita_arithmetics_nat.times
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 i))
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   n)
                                (p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb p)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                matita_arithmetics_nat.times
                                (p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 p))))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus n
                             (matita_arithmetics_nat.times n
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             cic.I
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_bigops.bigop
                                   (matita_arithmetics_nat.plus n x)
                                   (i :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_primes.primeb i)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.times
                                   (i :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    i))
                                (matita_arithmetics_bigops.bigop
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n)
                                   (p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_primes.primeb p)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   matita_arithmetics_nat.times
                                   (p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    p))))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_bigops.bigop
                                      (matita_arithmetics_nat.plus n
                                         (matita_arithmetics_nat.plus n x))
                                      (i :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_primes.primeb i)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.times
                                      (i :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       i))
                                   (matita_arithmetics_bigops.bigop
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)
                                      (p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_primes.primeb p)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      matita_arithmetics_nat.times
                                      (p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       p))))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                n
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_bigops.bigop
                                         (matita_arithmetics_nat.plus n x)
                                         (i :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_primes.primeb i)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.times
                                         (i :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          i))
                                      (matita_arithmetics_bigops.bigop
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            n)
                                         (p :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_primes.primeb p)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) cic.I
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         matita_arithmetics_nat.times
                                         (p :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          p))))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times n
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_bigops.bigop
                                            (matita_arithmetics_nat.plus n n)
                                            (i :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_primes.primeb
                                               i)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (i :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             i))
                                         (matita_arithmetics_bigops.bigop x
                                            (p :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_primes.primeb
                                               p)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            matita_arithmetics_nat.times
                                            (p :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             p))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus n
                                         (matita_arithmetics_nat.times n
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_bigops.bigop
                                               (matita_arithmetics_nat.plus n
                                                  n)
                                               (i :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_primes.primeb
                                                  i)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.times
                                               (i :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                i))
                                            (matita_arithmetics_bigops.bigop
                                               x
                                               (p :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                matita_arithmetics_primes.primeb
                                                  p)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               matita_arithmetics_nat.times
                                               (p :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                p))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus n
                                            (matita_arithmetics_nat.times n
                                               matita_arithmetics_nat.O))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_bigops.bigop
                                                  (matita_arithmetics_nat.plus
                                                     n n)
                                                  (i :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_primes.primeb
                                                     i)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.times
                                                  (i :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   i))
                                               (matita_arithmetics_bigops.bigop
                                                  (matita_arithmetics_nat.plus
                                                     n x)
                                                  (p :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   matita_arithmetics_primes.primeb
                                                     p)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  matita_arithmetics_nat.times
                                                  (p :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   p))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            matita_arithmetics_nat.O
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_bigops.bigop
                                                     (matita_arithmetics_nat.plus
                                                        n n)
                                                     (i :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_primes.primeb
                                                        i)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z)
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.times
                                                     (i :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      i))
                                                  (matita_arithmetics_bigops.bigop
                                                     (matita_arithmetics_nat.plus
                                                        n
                                                        (matita_arithmetics_nat.plus
                                                           n x))
                                                     (p :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_primes.primeb
                                                        p)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z)
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.times
                                                     (p :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      p))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               n
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_bigops.bigop
                                                        (matita_arithmetics_nat.plus
                                                           n n)
                                                        (i :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_primes.primeb
                                                           i)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        matita_arithmetics_nat.times
                                                        (i :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         i))
                                                     (matita_arithmetics_bigops.bigop
                                                        (matita_arithmetics_nat.plus
                                                           n x)
                                                        (p :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         matita_arithmetics_primes.primeb
                                                           p)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        matita_arithmetics_nat.times
                                                        (p :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         p))))
                                               (matita_basics_logic.refl
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_bigops.bigop
                                                     (matita_arithmetics_nat.plus
                                                        n n)
                                                     (i :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      matita_arithmetics_primes.primeb
                                                        i)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z)
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     matita_arithmetics_nat.times
                                                     (i :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      i)))
                                               (matita_arithmetics_nat.plus n
                                                  matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.plus_n_O
                                                  n))
                                            (matita_arithmetics_nat.times n
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.times_n_O
                                               n))
                                         (matita_arithmetics_nat.times n
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times_n_Sm n
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.times_n_Sm n
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n)
                                   (matita_arithmetics_nat.commutative_times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n))
                                (matita_arithmetics_nat.plus n
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.plus_n_O n))
                             (matita_arithmetics_nat.times n
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.times_n_O n))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times_n_Sm n
                             matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_nat.times_n_Sm n
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)
                    (matita_arithmetics_nat.commutative_times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n))
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 (matita_arithmetics_nat.S_pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          matita_arithmetics_nat.O)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  matita_arithmetics_nat.O)) =>
                        cic.lift cic.prop cic.prop cic.I
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                n)))
                       (matita_arithmetics_nat.monotonic_lt_times_r
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.lt_to_le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_primes.smallest_factor_fact
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          matita_arithmetics_nat.O n
                          (matita_arithmetics_nat.lt_to_le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             n lt1n))
                       matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times_n_O
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))))
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n))
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i))
              (matita_arithmetics_bigops.bigop_Sfalse
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)
                 matita_arithmetics_primes.primeb
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __)
                 (matita_arithmetics_primes.not_prime_to_primeb_false
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)
                    (matita_basics_logic.nmk
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_primes.prime __)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             n))
                       (_clearme :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.prime __)
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  n)) =>
                        matita_basics_logic.match_And cic.prop
                          (matita_arithmetics_nat.lt
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                n))
                          (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                             matita_arithmetics_nat.nat
                             (m :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod cic.prop cic.prop cic.prop cic.I
                                (matita_arithmetics_primes.divides m
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n))
                                (__ :
                                   cic.Term cic.prop
                                     (matita_arithmetics_primes.divides m
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           n)) =>
                                 cic.prod cic.prop cic.prop cic.prop cic.I
                                   (matita_arithmetics_nat.lt
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      m)
                                   (__1 :
                                      cic.Term cic.prop
                                        (matita_arithmetics_nat.lt
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           m) =>
                                    matita_basics_logic.eq
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      m
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)))))
                          (__ :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        n))
                                  (cic.prod (cic.type cic.z) cic.prop
                                     cic.prop cic.I
                                     matita_arithmetics_nat.nat
                                     (m :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      cic.prod cic.prop cic.prop cic.prop
                                        cic.I
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_primes.divides
                                            _n _m)
                                           m
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              n))
                                        (__ :
                                           cic.Term cic.prop
                                             ((_n :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               _m :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_primes.divides
                                                 _n _m)
                                                m
                                                (matita_arithmetics_nat.times
                                                   (matita_arithmetics_nat.S
                                                      (matita_arithmetics_nat.S
                                                         matita_arithmetics_nat.O))
                                                   n)) =>
                                         cic.prod cic.prop cic.prop cic.prop
                                           cic.I
                                           ((__1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             __2 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_arithmetics_nat.lt __1
                                               __2)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O)
                                              m)
                                           (__1 :
                                              cic.Term cic.prop
                                                ((__1 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  __2 :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_arithmetics_nat.lt
                                                    __1 __2)
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O)
                                                   m) =>
                                            (A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __2 :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __2)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              m
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 n)))))) =>
                           matita_basics_logic.False)
                          (lt2n :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     n)) =>
                           Hprime :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop cic.prop
                                  cic.I matita_arithmetics_nat.nat
                                  (m :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod cic.prop cic.prop cic.prop cic.I
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_primes.divides _n
                                         _m)
                                        m
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           n))
                                     (__ :
                                        cic.Term cic.prop
                                          ((_n :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            _m :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_primes.divides
                                              _n _m)
                                             m
                                             (matita_arithmetics_nat.times
                                                (matita_arithmetics_nat.S
                                                   (matita_arithmetics_nat.S
                                                      matita_arithmetics_nat.O))
                                                n)) =>
                                      cic.prod cic.prop cic.prop cic.prop
                                        cic.I
                                        ((__1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __2 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_nat.lt __1 __2)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)
                                           m)
                                        (__1 :
                                           cic.Term cic.prop
                                             ((__1 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               __2 :
                                                 cic.Term (cic.type cic.z)
                                                   matita_arithmetics_nat.nat =>
                                               matita_arithmetics_nat.lt __1
                                                 __2)
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)
                                                m) =>
                                         (A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __2 :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __2)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           m
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              n))))) =>
                           matita_basics_logic.absurd
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   n))
                             (Hprime
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_primes.quotient
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n)
                                   n
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               n)))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus n
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  n)))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus n
                                               (matita_arithmetics_nat.times
                                                  n matita_arithmetics_nat.O))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     n x)
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     n)))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               matita_arithmetics_nat.O
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        n
                                                        (matita_arithmetics_nat.plus
                                                           n x))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))
                                                        n)))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  n
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           n x)
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O))
                                                           n)))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        n
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              n n)
                                                           x))
                                                     (matita_basics_logic.rewrite_l
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 n n)
                                                              x))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 matita_arithmetics_nat.O))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    n n)
                                                                 (matita_arithmetics_nat.plus
                                                                    n x)))
                                                           (matita_basics_logic.rewrite_l
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              matita_arithmetics_nat.O
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n n)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n x))))
                                                              (matita_basics_logic.rewrite_l
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 n
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n n)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n x)))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n n))
                                                                 (matita_arithmetics_nat.plus
                                                                    n
                                                                    matita_arithmetics_nat.O)
                                                                 (matita_arithmetics_nat.plus_n_O
                                                                    n))
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 matita_arithmetics_nat.O)
                                                              (matita_arithmetics_nat.times_n_O
                                                                 n))
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O))
                                                           (matita_arithmetics_nat.times_n_Sm
                                                              n
                                                              matita_arithmetics_nat.O))
                                                        (matita_arithmetics_nat.times
                                                           n
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)))
                                                        (matita_arithmetics_nat.times_n_Sm
                                                           n
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))
                                                        n)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))
                                                        n))
                                                  (matita_arithmetics_nat.plus
                                                     n
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.plus_n_O
                                                     n))
                                               (matita_arithmetics_nat.times
                                                  n matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.times_n_O
                                                  n))
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times_n_Sm
                                               n matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times n
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (matita_arithmetics_nat.times_n_Sm n
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)
                                      (matita_arithmetics_nat.commutative_times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)))
                                (matita_arithmetics_nat.le_n
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))))
                             (matita_arithmetics_nat.lt_to_not_eq
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   n)
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))) =>
                                    cic.lift cic.prop cic.prop cic.I
                                      ((__1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __1 __2) x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            n)))
                                   (matita_arithmetics_nat.monotonic_lt_times_r
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.lt_O_S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      n lt1n)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times_n_1
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))))
                          _clearme)))))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta
              (matita_arithmetics_nat.pred
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)))
           (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
              (matita_arithmetics_nat.pred
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n))))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n))
        (matita_arithmetics_chebyshev_chebyshev_theta.theta_def
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n)).

def le_theta :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
           matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta m)
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_elim1 m
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop cic.I
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta __)
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    __))))
        (m1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                matita_arithmetics_nat.nat
                (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop cic.prop cic.I
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1) p m1)
                   (__ :
                      cic.Term cic.prop
                        ((__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_nat.lt __ __1) p m1) =>
                    (_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __1)
                      (matita_arithmetics_chebyshev_chebyshev_theta.theta p)
                      (matita_arithmetics_exp.exp
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            p))))) =>
         matita_basics_logic.match_ex cic.prop
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
              matita_arithmetics_nat.nat)
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop cic.I
              (matita_basics_logic.Or
                 (matita_basics_logic.eq
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    m1
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a))
                 (matita_basics_logic.eq
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I
                       matita_arithmetics_nat.nat)
                    m1
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)))))
           (__ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                  matita_basics_logic.ex
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _P)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                      matita_arithmetics_nat.nat)
                   (a :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.lift cic.prop cic.prop cic.I
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.Or _A _B)
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m1
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a))
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m1
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  a)))))) =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1)
              (matita_arithmetics_chebyshev_chebyshev_theta.theta m1)
              (matita_arithmetics_exp.exp
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    m1)))
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _clearme :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      m1
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      m1
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a)))) =>
            matita_basics_logic.match_Or cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 m1
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 m1
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a)))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         m1
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         m1
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a)))) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_arithmetics_chebyshev_chebyshev_theta.theta m1)
                 (matita_arithmetics_exp.exp
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       m1)))
              (Ha :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      m1
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a)) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_chebyshev_chebyshev_theta.theta x)
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             x))))
                 (matita_arithmetics_nat.match_nat cic.prop
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          m1
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             __))
                       (__1 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               m1
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  __)) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2)
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                __))
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   __)))))
                    (__ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m1
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               matita_arithmetics_nat.O)) =>
                     matita_arithmetics_nat.le_n
                       (matita_arithmetics_chebyshev_chebyshev_theta.theta
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             matita_arithmetics_nat.O)))
                    (n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.match_nat cic.prop
                       (__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) cic.I A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             m1
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S __)))
                          (__1 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  m1
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (matita_arithmetics_nat.S __))) =>
                           (_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __2)
                             (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S __)))
                             (matita_arithmetics_exp.exp
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S __))))))
                       (__ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               m1
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))) =>
                        matita_arithmetics_nat.leb_true_to_le
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_basics_bool.bool)
                             (matita_arithmetics_nat.leb
                                (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_exp.exp
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       (n1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        Hn1 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               m1
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S n1)))) =>
                        matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S n1)))))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S n1)))))) =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __1) x
                                (matita_arithmetics_exp.exp
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1)))))))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n1)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.S n1)))) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __1)
                                   (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                      x)
                                   (matita_arithmetics_exp.exp
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1)))))))
                             (matita_arithmetics_nat.transitive_le
                                (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n1))))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n1)))
                                   (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S n1))))
                                (matita_arithmetics_exp.exp
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1)))))
                                (matita_arithmetics_nat.lt_to_le
                                   (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n1))))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n1)))
                                      (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1))))
                                   (matita_arithmetics_chebyshev_chebyshev_theta.lt_O_to_le_theta_exp_theta
                                      (matita_arithmetics_nat.S n1)
                                      (matita_arithmetics_nat.lt_O_S n1)))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1))))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       n1)))
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       n1))))) =>
                                    cic.lift cic.prop cic.prop cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __1)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.S
                                                     n1)))
                                            (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            x)))
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1)))))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              x
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_exp.exp
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             n1))))
                                                 (matita_arithmetics_exp.exp
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             n1)))))) =>
                                       cic.lift cic.prop cic.prop cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __1)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n1)))
                                               (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        n1))))
                                            x))
                                      (matita_arithmetics_nat.le_times
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n1)))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1)))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (matita_arithmetics_exp.le_exp
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n1))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1)))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.lt_O_S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.monotonic_le_times_r
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n1)
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))
                                               (matita_arithmetics_nat.le_n_Sn
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (Hind
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1))
                                            (matita_basics_logic.eq_ind_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        n1)))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __ :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.S
                                                                matita_arithmetics_nat.O))
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.S
                                                                n1)))) =>
                                                cic.lift cic.prop cic.prop
                                                  cic.I
                                                  ((__1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __2 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __1 __2)
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1))
                                                     x))
                                               (matita_basics_logic.eq_ind_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1))
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __ :
                                                     cic.Term cic.prop
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          x
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.S
                                                                   n1))
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.S
                                                                   n1)))) =>
                                                   cic.lift cic.prop cic.prop
                                                     cic.I
                                                     ((__1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __2 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __1 __2)
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              n1))
                                                        x))
                                                  (matita_basics_logic.eq_coerc
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                 matita_arithmetics_nat.O)
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1)))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        cic.I
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1))
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1)))))
                                                     (matita_arithmetics_nat.lt_plus_Sn_r
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              n1))
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_nat.S
                                                           n1))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1))
                                                           (matita_arithmetics_nat.plus
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1))))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1)) x))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1)))))))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1)) x)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1)))))))
                                                           (matita_basics_logic.refl
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 cic.I
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n1))))))
                                                           (matita_arithmetics_nat.plus
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1)))
                                                           (matita_arithmetics_nat.plus_O_n
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1))))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n1))
                                                              matita_arithmetics_nat.O)
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1)))
                                                        (matita_arithmetics_nat.associative_plus
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1))
                                                           matita_arithmetics_nat.O
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 n1)))))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1)))
                                                  ((a0 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_basics_logic.rewrite_r
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.times
                                                         a0
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O)))
                                                      (x :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       cic.lift cic.prop
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         ((A :
                                                             cic.Univ
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                           _x :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           __ :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           matita_basics_logic.eq
                                                             (cic.lift
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                cic.I A)
                                                             _x __)
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               matita_arithmetics_nat.nat)
                                                            x
                                                            (matita_arithmetics_nat.plus
                                                               a0 a0)))
                                                      (matita_basics_logic.rewrite_l
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.plus
                                                            a0
                                                            (matita_arithmetics_nat.times
                                                               a0
                                                               (matita_arithmetics_nat.S
                                                                  matita_arithmetics_nat.O)))
                                                         (x :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          cic.lift cic.prop
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            ((A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                              _x :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              __ :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              matita_basics_logic.eq
                                                                (cic.lift
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   cic.I A)
                                                                _x __)
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  matita_arithmetics_nat.nat)
                                                               x
                                                               (matita_arithmetics_nat.plus
                                                                  a0 a0)))
                                                         (matita_basics_logic.rewrite_l
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               matita_arithmetics_nat.nat)
                                                            (matita_arithmetics_nat.plus
                                                               a0
                                                               (matita_arithmetics_nat.times
                                                                  a0
                                                                  matita_arithmetics_nat.O))
                                                            (x :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             cic.lift
                                                               cic.prop
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  (matita_arithmetics_nat.plus
                                                                    a0 x)
                                                                  (matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                            (matita_basics_logic.rewrite_l
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  matita_arithmetics_nat.nat)
                                                               matita_arithmetics_nat.O
                                                               (x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                cic.lift
                                                                  cic.prop
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x))
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                               (matita_basics_logic.rewrite_l
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  a0
                                                                  (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                                  (matita_basics_logic.refl
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0))
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    matita_arithmetics_nat.O)
                                                                  (matita_arithmetics_nat.plus_n_O
                                                                    a0))
                                                               (matita_arithmetics_nat.times
                                                                  a0
                                                                  matita_arithmetics_nat.O)
                                                               (matita_arithmetics_nat.times_n_O
                                                                  a0))
                                                            (matita_arithmetics_nat.times
                                                               a0
                                                               (matita_arithmetics_nat.S
                                                                  matita_arithmetics_nat.O))
                                                            (matita_arithmetics_nat.times_n_Sm
                                                               a0
                                                               matita_arithmetics_nat.O))
                                                         (matita_arithmetics_nat.times
                                                            a0
                                                            (matita_arithmetics_nat.S
                                                               (matita_arithmetics_nat.S
                                                                  matita_arithmetics_nat.O)))
                                                         (matita_arithmetics_nat.times_n_Sm
                                                            a0
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O)))
                                                      (matita_arithmetics_nat.times
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O))
                                                         a0)
                                                      (matita_arithmetics_nat.commutative_times
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.S
                                                               matita_arithmetics_nat.O))
                                                         a0))
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1))))
                                               m1 Hn1)))
                                      (matita_arithmetics_exp.exp
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1)))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1)))))
                                      (matita_arithmetics_exp.exp_plus_times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1)))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1)))))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1))))
                                   ((a0 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_basics_logic.rewrite_r
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       (matita_arithmetics_nat.times a0
                                          (matita_arithmetics_nat.S
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)))
                                       (x :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        cic.lift cic.prop
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             x
                                             (matita_arithmetics_nat.plus a0
                                                a0)))
                                       (matita_basics_logic.rewrite_l
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.plus a0
                                             (matita_arithmetics_nat.times a0
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)))
                                          (x :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                x
                                                (matita_arithmetics_nat.plus
                                                   a0 a0)))
                                          (matita_basics_logic.rewrite_l
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus a0
                                                (matita_arithmetics_nat.times
                                                   a0
                                                   matita_arithmetics_nat.O))
                                             (x :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              cic.lift cic.prop
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      matita_arithmetics_nat.nat)
                                                   (matita_arithmetics_nat.plus
                                                      a0 x)
                                                   (matita_arithmetics_nat.plus
                                                      a0 a0)))
                                             (matita_basics_logic.rewrite_l
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                matita_arithmetics_nat.O
                                                (x :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 cic.lift cic.prop
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I A)
                                                       _x __)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.plus
                                                         a0
                                                         (matita_arithmetics_nat.plus
                                                            a0 x))
                                                      (matita_arithmetics_nat.plus
                                                         a0 a0)))
                                                (matita_basics_logic.rewrite_l
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      matita_arithmetics_nat.nat)
                                                   a0
                                                   (x :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I A)
                                                          _x __)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.plus
                                                            a0 x)
                                                         (matita_arithmetics_nat.plus
                                                            a0 a0)))
                                                   (matita_basics_logic.refl
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.plus
                                                         a0 a0))
                                                   (matita_arithmetics_nat.plus
                                                      a0
                                                      matita_arithmetics_nat.O)
                                                   (matita_arithmetics_nat.plus_n_O
                                                      a0))
                                                (matita_arithmetics_nat.times
                                                   a0
                                                   matita_arithmetics_nat.O)
                                                (matita_arithmetics_nat.times_n_O
                                                   a0))
                                             (matita_arithmetics_nat.times a0
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O))
                                             (matita_arithmetics_nat.times_n_Sm
                                                a0 matita_arithmetics_nat.O))
                                          (matita_arithmetics_nat.times a0
                                             (matita_arithmetics_nat.S
                                                (matita_arithmetics_nat.S
                                                   matita_arithmetics_nat.O)))
                                          (matita_arithmetics_nat.times_n_Sm
                                             a0
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O)))
                                       (matita_arithmetics_nat.times
                                          (matita_arithmetics_nat.S
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O))
                                          a0)
                                       (matita_arithmetics_nat.commutative_times
                                          (matita_arithmetics_nat.S
                                             (matita_arithmetics_nat.S
                                                matita_arithmetics_nat.O))
                                          a0))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1))))))
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S n1))))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus n1
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus n1
                                            matita_arithmetics_nat.O))))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus n1
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.plus
                                                    n1
                                                    matita_arithmetics_nat.O))))) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __1 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I A)
                                       _x __1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus n1
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.plus
                                                     n1
                                                     matita_arithmetics_nat.O)))))
                                      (matita_arithmetics_nat.S x)))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   n1
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.plus n1
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S x))))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.plus n1
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.plus
                                                        n1
                                                        matita_arithmetics_nat.O)))))))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus n1
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1))))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.plus
                                                  n1
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.plus
                                                           n1
                                                           matita_arithmetics_nat.O)))))))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I matita_arithmetics_nat.nat)
                                         n1
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  n1
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1))))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.plus
                                                     n1
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           x))))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus n1
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        n1))))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     n1
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              n1))))
                                                  x))
                                            (matita_basics_logic.refl
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  n1
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n1)))))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.plus
                                                  n1
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        n1))))
                                            (matita_arithmetics_nat.plus_n_Sm
                                               n1
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     n1))))
                                         (matita_arithmetics_nat.plus n1
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.plus_n_O n1))
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus n1
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n1))))
                                      (matita_arithmetics_nat.plus_n_Sm n1
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n1))))
                                   (matita_arithmetics_nat.plus n1
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.plus_n_O n1))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus n1
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus n1
                                            matita_arithmetics_nat.O))))
                                (matita_arithmetics_nat.plus_n_Sm n1
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus n1
                                         matita_arithmetics_nat.O)))))
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S n1))))
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta_pred
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S n1))
                             (matita_arithmetics_nat.le_S_S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.S n1)
                                (matita_arithmetics_nat.lt_O_S n1))))
                       n)
                    a Ha)
                 m1 Ha)
              (Ha :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I
                         matita_arithmetics_nat.nat)
                      m1
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) cic.I A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) cic.I
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a))) =>
                  cic.lift cic.prop cic.prop cic.I
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_arithmetics_chebyshev_chebyshev_theta.theta x)
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             x))))
                 (matita_arithmetics_nat.match_nat cic.prop
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) cic.I A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          m1
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                __)))
                       (__1 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) cic.I A)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) cic.I
                                  matita_arithmetics_nat.nat)
                               m1
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     __))) =>
                        (_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __2)
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   __)))
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      __))))))
                    (__ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m1
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  matita_arithmetics_nat.O))) =>
                     matita_arithmetics_nat.leb_true_to_le
                       (matita_arithmetics_chebyshev_chebyshev_theta.theta
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   matita_arithmetics_nat.O))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_basics_bool.bool)
                          (matita_arithmetics_nat.leb
                             (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      matita_arithmetics_nat.O)))
                             (matita_arithmetics_exp.exp
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         matita_arithmetics_nat.O)))))))
                    (n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     Hn :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) cic.I A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) cic.I
                               matita_arithmetics_nat.nat)
                            m1
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  (matita_arithmetics_nat.S n)))) =>
                     matita_arithmetics_nat.transitive_le
                       (matita_arithmetics_chebyshev_chebyshev_theta.theta
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S n))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_exp.exp
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S n)))
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S n))))
                       (matita_arithmetics_exp.exp
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n)))))
                       (matita_arithmetics_nat.lt_to_le
                          (matita_arithmetics_chebyshev_chebyshev_theta.theta
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n))))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_exp.exp
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n)))
                             (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S n))))
                          (matita_arithmetics_chebyshev_chebyshev_theta.lt_O_to_le_theta_exp_theta
                             (matita_arithmetics_nat.S n)
                             (matita_arithmetics_nat.lt_O_S n)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) cic.I
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n)))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n))))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) cic.I
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.S n)))
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.S n))))) =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __1)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_exp.exp
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n)))
                                   (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S n))))
                                (matita_arithmetics_exp.exp
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   x)))
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) cic.I
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n)))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n))))
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (matita_arithmetics_nat.S n)))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (matita_arithmetics_nat.S n))))
                                     x_1) =>
                              cic.lift cic.prop cic.prop cic.I
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_exp.exp
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n)))
                                      (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S n))))
                                   (matita_arithmetics_exp.exp
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      x_1)))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) cic.I
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n))))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            cic.I A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (matita_arithmetics_nat.S n))
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (matita_arithmetics_nat.S n))))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop cic.I
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n)))
                                         (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n))))
                                      (matita_arithmetics_exp.exp
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S x_1))))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) cic.I
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n))
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n)))))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 (matita_arithmetics_nat.S n))
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (matita_arithmetics_nat.S
                                                          n)))))) =>
                                    cic.lift cic.prop cic.prop cic.I
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __1)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_exp.exp
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.S n)))
                                            (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S n))))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            x)))
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         cic.I matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n)))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n))))))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  cic.I A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I
                                                 matita_arithmetics_nat.nat)
                                              x
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_exp.exp
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (matita_arithmetics_nat.S
                                                          n)))
                                                 (matita_arithmetics_exp.exp
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O))
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O))
                                                             (matita_arithmetics_nat.S
                                                                n))))))) =>
                                       cic.lift cic.prop cic.prop cic.I
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __1)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_exp.exp
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n)))
                                               (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        n))))
                                            x))
                                      (matita_arithmetics_nat.monotonic_le_times_r
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n)))
                                         (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S n)))
                                         (matita_arithmetics_exp.exp
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n)))))
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               cic.I
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S n)))
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        cic.I A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       cic.I
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             matita_arithmetics_nat.O))
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             n)))
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop cic.I
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.le _n
                                                   __)
                                                  (matita_arithmetics_chebyshev_chebyshev_theta.theta
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n)))
                                                  (matita_arithmetics_exp.exp
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     x_1)))
                                            (Hind
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S n))
                                               (matita_basics_logic.eq_ind_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     cic.I
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))
                                                        (matita_arithmetics_nat.S
                                                           n)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   __ :
                                                     cic.Term cic.prop
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              cic.I A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I
                                                             matita_arithmetics_nat.nat)
                                                          x
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.times
                                                                (matita_arithmetics_nat.S
                                                                   (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                (matita_arithmetics_nat.S
                                                                   n)))) =>
                                                   cic.lift cic.prop cic.prop
                                                     cic.I
                                                     ((__1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __2 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __1 __2)
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              n))
                                                        x))
                                                  (matita_arithmetics_nat.le_S_S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           n))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O))
                                                        (matita_arithmetics_nat.S
                                                           n))
                                                     (matita_basics_logic.eq_ind_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.S
                                                              n)
                                                           (matita_arithmetics_nat.S
                                                              n))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         __ :
                                                           cic.Term cic.prop
                                                             ((A :
                                                                 cic.Univ
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                               _x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               __ :
                                                                 cic.Term
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A =>
                                                               matita_basics_logic.eq
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I A)
                                                                 _x __)
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   cic.I
                                                                   matita_arithmetics_nat.nat)
                                                                x
                                                                (matita_arithmetics_nat.plus
                                                                   (matita_arithmetics_nat.S
                                                                    n)
                                                                   (matita_arithmetics_nat.S
                                                                    n))) =>
                                                         cic.lift cic.prop
                                                           cic.prop cic.I
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __1)
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n))
                                                              x))
                                                        (matita_basics_logic.eq_coerc
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)) n)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              cic.I
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))
                                                           (matita_arithmetics_nat.le_plus_n_r
                                                              n
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    n)))
                                                           (matita_basics_logic.rewrite_l
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 n
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 cic.I
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    cic.I))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    cic.I
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))))
                                                                 (matita_arithmetics_nat.plus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n) n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    x)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))
                                                                    (
                                                                  matita_arithmetics_nat.plus_n_Sm
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n) n)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n) n))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))
                                                                    (
                                                                  matita_arithmetics_nat.plus_n_Sm
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n))
                                                                 n)
                                                              (matita_arithmetics_nat.commutative_plus
                                                                 n
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    n)))))
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O))
                                                           (matita_arithmetics_nat.S
                                                              n))
                                                        ((a0 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_basics_logic.rewrite_r
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               matita_arithmetics_nat.nat)
                                                            (matita_arithmetics_nat.times
                                                               a0
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                            (x :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             cic.lift
                                                               cic.prop
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  x
                                                                  (matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                            (matita_basics_logic.rewrite_l
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  matita_arithmetics_nat.nat)
                                                               (matita_arithmetics_nat.plus
                                                                  a0
                                                                  (matita_arithmetics_nat.times
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                               (x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                cic.lift
                                                                  cic.prop
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                               (matita_basics_logic.rewrite_l
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.times
                                                                    a0
                                                                    matita_arithmetics_nat.O))
                                                                  (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                                  (matita_basics_logic.rewrite_l
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    matita_arithmetics_nat.O
                                                                    (
                                                                   x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x))
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                                    (
                                                                   matita_basics_logic.rewrite_l
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    a0
                                                                    (
                                                                   x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0)))
                                                                    (
                                                                   matita_basics_logic.refl
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 a0))
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                   matita_arithmetics_nat.plus_n_O
                                                                    a0))
                                                                    (
                                                                   matita_arithmetics_nat.times
                                                                    a0
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                   matita_arithmetics_nat.times_n_O
                                                                    a0))
                                                                  (matita_arithmetics_nat.times
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                                  (matita_arithmetics_nat.times_n_Sm
                                                                    a0
                                                                    matita_arithmetics_nat.O))
                                                               (matita_arithmetics_nat.times
                                                                  a0
                                                                  (matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                               (matita_arithmetics_nat.times_n_Sm
                                                                  a0
                                                                  (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                            (matita_arithmetics_nat.times
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                               a0)
                                                            (matita_arithmetics_nat.commutative_times
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))
                                                               a0))
                                                           (matita_arithmetics_nat.S
                                                              n))))
                                                  m1 Hn))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n))))
                                            ((a0 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_basics_logic.eq_ind
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.S
                                                   (matita_arithmetics_nat.plus
                                                      a0
                                                      (matita_arithmetics_nat.plus
                                                         a0
                                                         matita_arithmetics_nat.O)))
                                                (x_1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 _x_2 :
                                                   cic.Term cic.prop
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           cic.I
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.plus
                                                              a0
                                                              (matita_arithmetics_nat.plus
                                                                 a0
                                                                 matita_arithmetics_nat.O)))
                                                        x_1) =>
                                                 cic.lift cic.prop cic.prop
                                                   cic.I
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          cic.I A)
                                                       _x __)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.S
                                                         x_1)
                                                      (matita_arithmetics_nat.S
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.plus
                                                               a0
                                                               (matita_arithmetics_nat.plus
                                                                  a0
                                                                  matita_arithmetics_nat.O))))))
                                                (matita_basics_logic.rewrite_l
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      matita_arithmetics_nat.nat)
                                                   a0
                                                   (x :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    cic.lift cic.prop
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      cic.I
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __ :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             cic.I A)
                                                          _x __)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.S
                                                               (matita_arithmetics_nat.plus
                                                                  a0 x)))
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.S
                                                               (matita_arithmetics_nat.plus
                                                                  a0
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    matita_arithmetics_nat.O))))))
                                                   (matita_basics_logic.rewrite_r
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         matita_arithmetics_nat.nat)
                                                      (matita_arithmetics_nat.plus
                                                         a0
                                                         (matita_arithmetics_nat.S
                                                            a0))
                                                      (x :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       cic.lift cic.prop
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         cic.I
                                                         ((A :
                                                             cic.Univ
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                           _x :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           __ :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           matita_basics_logic.eq
                                                             (cic.lift
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                cic.I A)
                                                             _x __)
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               matita_arithmetics_nat.nat)
                                                            (matita_arithmetics_nat.S
                                                               x)
                                                            (matita_arithmetics_nat.S
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    matita_arithmetics_nat.O))))))
                                                      (matita_basics_logic.rewrite_r
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            matita_arithmetics_nat.nat)
                                                         (matita_arithmetics_nat.plus
                                                            a0
                                                            (matita_arithmetics_nat.S
                                                               (matita_arithmetics_nat.S
                                                                  a0)))
                                                         (x :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          cic.lift cic.prop
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            cic.I
                                                            ((A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                              _x :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              __ :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              matita_basics_logic.eq
                                                                (cic.lift
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   cic.I A)
                                                                _x __)
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  matita_arithmetics_nat.nat)
                                                               x
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    matita_arithmetics_nat.O))))))
                                                         (matita_basics_logic.rewrite_l
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               matita_arithmetics_nat.nat)
                                                            a0
                                                            (x :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             cic.lift
                                                               cic.prop
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               cic.I
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0)))
                                                                  (matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0 x)))))
                                                            (matita_basics_logic.rewrite_r
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  matita_arithmetics_nat.nat)
                                                               (matita_arithmetics_nat.plus
                                                                  a0
                                                                  (matita_arithmetics_nat.S
                                                                    a0))
                                                               (x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                cic.lift
                                                                  cic.prop
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  cic.I
                                                                  ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0)))
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    x)))
                                                               (matita_basics_logic.rewrite_r
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                  (matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0)))
                                                                  (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   cic.lift
                                                                    cic.prop
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    (
                                                                   (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    cic.I A)
                                                                    _x __)
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0))) x))
                                                                  (matita_basics_logic.refl
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    cic.I
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0))))
                                                                  (matita_arithmetics_nat.S
                                                                    (
                                                                   matita_arithmetics_nat.plus
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0)))
                                                                  (matita_arithmetics_nat.plus_n_Sm
                                                                    a0
                                                                    (
                                                                   matita_arithmetics_nat.S
                                                                    a0)))
                                                               (matita_arithmetics_nat.S
                                                                  (matita_arithmetics_nat.plus
                                                                    a0 a0))
                                                               (matita_arithmetics_nat.plus_n_Sm
                                                                  a0 a0))
                                                            (matita_arithmetics_nat.plus
                                                               a0
                                                               matita_arithmetics_nat.O)
                                                            (matita_arithmetics_nat.plus_n_O
                                                               a0))
                                                         (matita_arithmetics_nat.S
                                                            (matita_arithmetics_nat.plus
                                                               a0
                                                               (matita_arithmetics_nat.S
                                                                  a0)))
                                                         (matita_arithmetics_nat.plus_n_Sm
                                                            a0
                                                            (matita_arithmetics_nat.S
                                                               a0)))
                                                      (matita_arithmetics_nat.S
                                                         (matita_arithmetics_nat.plus
                                                            a0 a0))
                                                      (matita_arithmetics_nat.plus_n_Sm
                                                         a0 a0))
                                                   (matita_arithmetics_nat.plus
                                                      a0
                                                      matita_arithmetics_nat.O)
                                                   (matita_arithmetics_nat.plus_n_O
                                                      a0))
                                                (matita_arithmetics_nat.plus
                                                   a0
                                                   (matita_arithmetics_nat.S
                                                      (matita_arithmetics_nat.plus
                                                         a0
                                                         matita_arithmetics_nat.O)))
                                                (matita_arithmetics_nat.plus_n_Sm
                                                   a0
                                                   (matita_arithmetics_nat.plus
                                                      a0
                                                      matita_arithmetics_nat.O)))
                                               (matita_arithmetics_nat.S n))))
                                      (matita_arithmetics_exp.exp
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O))
                                                     (matita_arithmetics_nat.S
                                                        n))))))
                                      (matita_arithmetics_exp.exp_plus_times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O))
                                                  (matita_arithmetics_nat.S n))))))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S n)))))
                                   (matita_arithmetics_nat.plus_n_Sm
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n))
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S n)))))
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n)))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n)))
                                (matita_arithmetics_nat.commutative_plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S n)))))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n)))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n))))
                             (matita_arithmetics_nat.plus_n_Sm
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S n)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n))))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n))))
                          ((a0 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_logic.rewrite_r
                              (cic.lift (cic.type cic.z)
                                 (cic.type (cic.s (cic.s cic.z))) cic.I
                                 matita_arithmetics_nat.nat)
                              (matita_arithmetics_nat.times a0
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)))
                              (x :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               cic.lift cic.prop
                                 (cic.type (cic.s (cic.s cic.z))) cic.I
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __ :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z)))
                                        cic.I A)
                                     _x __)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       matita_arithmetics_nat.nat)
                                    x (matita_arithmetics_nat.plus a0 a0)))
                              (matita_basics_logic.rewrite_l
                                 (cic.lift (cic.type cic.z)
                                    (cic.type (cic.s (cic.s cic.z))) cic.I
                                    matita_arithmetics_nat.nat)
                                 (matita_arithmetics_nat.plus a0
                                    (matita_arithmetics_nat.times a0
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                 (x :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  cic.lift cic.prop
                                    (cic.type (cic.s (cic.s cic.z))) cic.I
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           cic.I A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       x (matita_arithmetics_nat.plus a0 a0)))
                                 (matita_basics_logic.rewrite_l
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       matita_arithmetics_nat.nat)
                                    (matita_arithmetics_nat.plus a0
                                       (matita_arithmetics_nat.times a0
                                          matita_arithmetics_nat.O))
                                    (x :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     cic.lift cic.prop
                                       (cic.type (cic.s (cic.s cic.z))) cic.I
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              cic.I A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I matita_arithmetics_nat.nat)
                                          (matita_arithmetics_nat.plus a0 x)
                                          (matita_arithmetics_nat.plus a0 a0)))
                                    (matita_basics_logic.rewrite_l
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I matita_arithmetics_nat.nat)
                                       matita_arithmetics_nat.O
                                       (x :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        cic.lift cic.prop
                                          (cic.type (cic.s (cic.s cic.z)))
                                          cic.I
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 cic.I A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus a0
                                                (matita_arithmetics_nat.plus
                                                   a0 x))
                                             (matita_arithmetics_nat.plus a0
                                                a0)))
                                       (matita_basics_logic.rewrite_l
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I matita_arithmetics_nat.nat)
                                          a0
                                          (x :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             cic.I
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    cic.I A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   cic.I
                                                   matita_arithmetics_nat.nat)
                                                (matita_arithmetics_nat.plus
                                                   a0 x)
                                                (matita_arithmetics_nat.plus
                                                   a0 a0)))
                                          (matita_basics_logic.refl
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                cic.I
                                                matita_arithmetics_nat.nat)
                                             (matita_arithmetics_nat.plus a0
                                                a0))
                                          (matita_arithmetics_nat.plus a0
                                             matita_arithmetics_nat.O)
                                          (matita_arithmetics_nat.plus_n_O a0))
                                       (matita_arithmetics_nat.times a0
                                          matita_arithmetics_nat.O)
                                       (matita_arithmetics_nat.times_n_O a0))
                                    (matita_arithmetics_nat.times a0
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O))
                                    (matita_arithmetics_nat.times_n_Sm a0
                                       matita_arithmetics_nat.O))
                                 (matita_arithmetics_nat.times a0
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O)))
                                 (matita_arithmetics_nat.times_n_Sm a0
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)))
                              (matita_arithmetics_nat.times
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O))
                                 a0)
                              (matita_arithmetics_nat.commutative_times
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O))
                                 a0))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S n))))))
                    a Ha)
                 m1 Ha)
              _clearme)
           (matita_arithmetics_chebyshev_chebyshev_psi.even_or_odd m1)).


