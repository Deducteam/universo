(; This file was automatically generated from Matita. ;)

def predicate :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
      :=
      A : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.univ cic.prop (cic.type cic.z) cic.I).

def relation :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))
      :=
      A : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
           (__1 : cic.Term (cic.type cic.z) A =>
            cic.univ cic.prop (cic.type cic.z) cic.I)).

def relation2 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (__1 : cic.Univ (cic.type cic.z) =>
               cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I B
           (__1 : cic.Term (cic.type cic.z) B =>
            cic.univ cic.prop (cic.type cic.z) cic.I)).

def relation3 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (__1 : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (__2 : cic.Univ (cic.type cic.z) =>
                  cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I B
           (__1 : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              C
              (__2 : cic.Term (cic.type cic.z) C =>
               cic.univ cic.prop (cic.type cic.z) cic.I))).

def relation4 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (__1 : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (__2 : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.type (cic.s cic.z)) cic.I
                    (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                    (__3 : cic.Univ (cic.type cic.z) =>
                     cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      D : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I B
           (__1 : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              C
              (__2 : cic.Term (cic.type cic.z) C =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I D
                 (__3 : cic.Term (cic.type cic.z) D =>
                  cic.univ cic.prop (cic.type cic.z) cic.I)))).

def reflexive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         (__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R __ __1) x x).

def symmetric :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) x y) =>
               (__1 : cic.Term (cic.type cic.z) A =>
                __2 : cic.Term (cic.type cic.z) A => R __1 __2) y x))).

def transitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
              (z : cic.Term (cic.type cic.z) A =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
                 (__ :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R __ __1) x y) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => R __1 __2) y z)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 : cic.Term (cic.type cic.z) A =>
                           __2 : cic.Term (cic.type cic.z) A => R __1 __2) y
                            z) =>
                     (__2 : cic.Term (cic.type cic.z) A =>
                      __3 : cic.Term (cic.type cic.z) A => R __2 __3) x z))))).

def irreflexive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R __ __1) x x)).

def cotransitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) x y) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
                 (z : cic.Term (cic.type cic.z) A =>
                  (_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => R __1 __2) x z)
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => R __1 __2) z y))))).

def tight_apart :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_eq :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (_ap :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      eq :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      ap :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            (_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              (cic.prod cic.prop cic.prop cic.prop cic.I
                 ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) A => ap __ __1) x y))
                 (__ :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => ap __ __1) x
                            y)) =>
                  (__1 : cic.Term (cic.type cic.z) A =>
                   __2 : cic.Term (cic.type cic.z) A => eq __1 __2) x y))
              (cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => eq __ __1) x y)
                 (__ :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => eq __ __1) x y) =>
                  (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => ap __1 __2) x y))))).

def antisymmetric :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) x y) =>
               (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__1 : cic.Term (cic.type cic.z) A =>
                   __2 : cic.Term (cic.type cic.z) A => R __1 __2) y x)))).

def singlevalued :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               (__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.predicate
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation2
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
           (b1 : cic.Term (cic.type cic.z) B =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) B => R __ __1) a b1)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) B => R __ __1) a b1) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) B => R __1 __2) a b2)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 : cic.Term (cic.type cic.z) A =>
                           __2 : cic.Term (cic.type cic.z) B => R __1 __2) a
                            b2) =>
                     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) cic.I B)
                       b1 b2))))).

def confluent1 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (__ :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               (__1 : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.predicate
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a0 : cic.Term (cic.type cic.z) A =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a1 : cic.Term (cic.type cic.z) A =>
         cic.prod cic.prop cic.prop cic.prop cic.I
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R __ __1) a0 a1)
           (__ :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R __ __1) a0 a1) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
              (a2 : cic.Term (cic.type cic.z) A =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__1 : cic.Term (cic.type cic.z) A =>
                   __2 : cic.Term (cic.type cic.z) A => R __1 __2) a0 a2)
                 (__1 :
                    cic.Term cic.prop
                      ((__1 : cic.Term (cic.type cic.z) A =>
                        __2 : cic.Term (cic.type cic.z) A => R __1 __2) a0 a2) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   _Q :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A1
                          (__2 : cic.Term (cic.type cic.z) A1 =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                   matita_basics_logic.ex2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P
                     _Q)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (a : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop cic.prop cic.I
                       ((__2 : cic.Term (cic.type cic.z) A =>
                         __3 : cic.Term (cic.type cic.z) A => R __2 __3) a1 a))
                    (a : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop cic.prop cic.I
                       ((__2 : cic.Term (cic.type cic.z) A =>
                         __3 : cic.Term (cic.type cic.z) A => R __2 __3) a2 a)))))).

def confluent :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            (__ : cic.Univ (cic.type cic.z) =>
             matita_basics_relations.predicate
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a0 : cic.Term (cic.type cic.z) A =>
         matita_basics_relations.confluent1
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (__ : cic.Term (cic.type cic.z) A =>
            __1 : cic.Term (cic.type cic.z) A => R __ __1)
           a0).

def Conf3 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation2
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (__ :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation2
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    ((__1 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                    (__1 :
                       cic.Term (cic.type cic.z)
                         ((__1 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __1))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      S :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation2
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
        (b : cic.Term (cic.type cic.z) B =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (a1 : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) B => S __ __1) a1 b)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) B => S __ __1) a1 b) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
                 (a2 : cic.Term (cic.type cic.z) A =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => R __1 __2) a1 a2)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 : cic.Term (cic.type cic.z) A =>
                           __2 : cic.Term (cic.type cic.z) A => R __1 __2) a1
                            a2) =>
                     (__2 : cic.Term (cic.type cic.z) A =>
                      __3 : cic.Term (cic.type cic.z) B => S __2 __3) a2 b))))).

def RC :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (__ :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               (__1 : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      x : cic.Term (cic.type cic.z) A =>
      y : cic.Term (cic.type cic.z) A =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
        ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) cic.I A1)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              A)
           x y).

def RC_reflexive :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _R :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                matita_basics_relations.reflexive
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A =>
                  matita_basics_relations.RC
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (__2 : cic.Term (cic.type cic.z) A =>
                     __3 : cic.Term (cic.type cic.z) A => R __2 __3)
                    __ __1))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      x : cic.Term (cic.type cic.z) A =>
      matita_basics_logic.or_intror
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R __ __1) x x)
        ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) cic.I A1)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              A)
           x x)
        (matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              A)
           x).

def Rcomp :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R1 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (_R2 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (_a1 : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (_a2 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a1 : cic.Term (cic.type cic.z) A =>
      a2 : cic.Term (cic.type cic.z) A =>
      (A1 : cic.Univ (cic.type cic.z) =>
       _P :
         cic.Term (cic.type cic.z)
           (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              A1
              (__ : cic.Term (cic.type cic.z) A1 =>
               cic.univ cic.prop (cic.type cic.z) cic.I)) =>
       matita_basics_logic.ex
         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
        (am : cic.Term (cic.type cic.z) A =>
         cic.lift cic.prop cic.prop cic.I
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a1 am)
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R2 __ __1) am a2))).

def Runion :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R1 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (_R2 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (_a : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (_b : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a b)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R2 __ __1) a b).

def Rintersection :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R1 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (_R2 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (_a : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (_b : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop (cic.type cic.z) cic.I))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a b)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) A => R2 __ __1) a b).

def inv :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (_a : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (_b : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      (__ : cic.Term (cic.type cic.z) A =>
       __1 : cic.Term (cic.type cic.z) A => R __ __1) b a.

def subR :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (_R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (_S :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      S :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (b : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R __ __1) a b)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) a b) =>
               (__1 : cic.Term (cic.type cic.z) A =>
                __2 : cic.Term (cic.type cic.z) A => S __1 __2) a b))).

def sub_reflexive :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (T : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I T))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I T)) =>
               (A : cic.Univ (cic.type cic.z) =>
                _R :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                _S :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                matita_basics_relations.subR
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A) _R _S)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I T)
                 (__ : cic.Term (cic.type cic.z) T =>
                  __1 : cic.Term (cic.type cic.z) T => R __ __1)
                 (__ : cic.Term (cic.type cic.z) T =>
                  __1 : cic.Term (cic.type cic.z) T => R __ __1))))
      :=
      T : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I T)) =>
      x : cic.Term (cic.type cic.z) T =>
      b : cic.Term (cic.type cic.z) T =>
      auto :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) T =>
            __1 : cic.Term (cic.type cic.z) T => R __ __1) x b) =>
      auto.

def sub_comp_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (R1 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                    (R2 :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _R :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _S :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         matita_basics_relations.subR
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R _S)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _R :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I A1)) =>
                              _S :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I A1)) =>
                              matita_basics_relations.subR
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _R _S)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) A =>
                                R1 __ __1)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) A =>
                                R2 __ __1)) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _S :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         matita_basics_relations.subR
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R _S)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (_a1 : cic.Term (cic.type cic.z) A =>
                           _a2 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a11 : cic.Term (cic.type cic.z) A1 =>
                            _a21 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a11 _a21)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R __1 __2)
                             _a1 _a2)
                          (_a1 : cic.Term (cic.type cic.z) A =>
                           _a2 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a11 : cic.Term (cic.type cic.z) A1 =>
                            _a21 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a11 _a21)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R __1 __2)
                             _a1 _a2)))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      Hsub :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _S :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            matita_basics_relations.subR
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R _S)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      _clearme :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R1 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _R2 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _a1 : cic.Term (cic.type cic.z) A1 =>
            _a2 : cic.Term (cic.type cic.z) A1 =>
            matita_basics_relations.Rcomp
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
              _a1 _a2)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R __ __1)
             a b) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
        (am : cic.Term (cic.type cic.z) A =>
         cic.lift cic.prop cic.prop cic.I
           (matita_basics_logic.And (R1 a am) (R am b)))
        (__ :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (am : cic.Term (cic.type cic.z) A =>
                 cic.lift cic.prop cic.prop cic.I
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a am)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R __ __1) am b)))) =>
         (A1 : cic.Univ (cic.type cic.z) =>
          _R1 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _R2 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _a1 : cic.Term (cic.type cic.z) A1 =>
          _a2 : cic.Term (cic.type cic.z) A1 =>
          matita_basics_relations.Rcomp
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2 _a1
            _a2)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R __1 __2)
           a b)
        (c : cic.Term (cic.type cic.z) A =>
         _clearme0 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R __ __1) c b)) =>
         matita_basics_logic.match_And cic.prop
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R __ __1) c b)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) c b)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R __1 __2)
              a b)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c) =>
            auto' :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R __ __1) c b) =>
            matita_basics_logic.ex_intro
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (am : cic.Term (cic.type cic.z) A =>
               cic.lift cic.prop cic.prop cic.I
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) A => R2 __ __1) a am)
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) A => R __ __1) am b)))
              c
              (matita_basics_logic.conj
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R2 __ __1) a c)
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R __ __1) c b)
                 (Hsub a c auto) auto'))
           _clearme0)
        _clearme.

def sub_comp_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (R :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (R1 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                    (R2 :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)) =>
                     cic.prod cic.prop cic.prop cic.prop cic.I
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _R :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _S :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         matita_basics_relations.subR
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R _S)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1))
                       (__ :
                          cic.Term cic.prop
                            ((A1 : cic.Univ (cic.type cic.z) =>
                              _R :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I A1)) =>
                              _S :
                                cic.Term (cic.type cic.z)
                                  (matita_basics_relations.relation
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I A1)) =>
                              matita_basics_relations.subR
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)
                                _R _S)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) A =>
                                R1 __ __1)
                               (__ : cic.Term (cic.type cic.z) A =>
                                __1 : cic.Term (cic.type cic.z) A =>
                                R2 __ __1)) =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _S :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         matita_basics_relations.subR
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R _S)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (_a1 : cic.Term (cic.type cic.z) A =>
                           _a2 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a11 : cic.Term (cic.type cic.z) A1 =>
                            _a21 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a11 _a21)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R __1 __2)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
                             _a1 _a2)
                          (_a1 : cic.Term (cic.type cic.z) A =>
                           _a2 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a11 : cic.Term (cic.type cic.z) A1 =>
                            _a21 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a11 _a21)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R __1 __2)
                             (__1 : cic.Term (cic.type cic.z) A =>
                              __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                             _a1 _a2)))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      Hsub :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _S :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            matita_basics_relations.subR
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R _S)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      _clearme :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R1 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _R2 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _a1 : cic.Term (cic.type cic.z) A1 =>
            _a2 : cic.Term (cic.type cic.z) A1 =>
            matita_basics_relations.Rcomp
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
              _a1 _a2)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R __ __1)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
             a b) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
        (am : cic.Term (cic.type cic.z) A =>
         cic.lift cic.prop cic.prop cic.I
           (matita_basics_logic.And (R a am) (R1 am b)))
        (__ :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (am : cic.Term (cic.type cic.z) A =>
                 cic.lift cic.prop cic.prop cic.I
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R __ __1) a am)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R1 __ __1) am b)))) =>
         (A1 : cic.Univ (cic.type cic.z) =>
          _R1 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _R2 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _a1 : cic.Term (cic.type cic.z) A1 =>
          _a2 : cic.Term (cic.type cic.z) A1 =>
          matita_basics_relations.Rcomp
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2 _a1
            _a2)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R __1 __2)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
           a b)
        (c : cic.Term (cic.type cic.z) A =>
         _clearme0 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R __ __1) a c)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) c b)) =>
         matita_basics_logic.match_And cic.prop
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R __ __1) a c)
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R1 __ __1) c b)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) a c)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R1 __ __1) c b)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R __1 __2)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
              a b)
           (auto :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R __ __1) a c) =>
            auto' :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) c b) =>
            matita_basics_logic.ex_intro
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (am : cic.Term (cic.type cic.z) A =>
               cic.lift cic.prop cic.prop cic.I
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) A => R __ __1) a am)
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) A => R2 __ __1) am b)))
              c
              (matita_basics_logic.conj
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R __ __1) a c)
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R2 __ __1) c b)
                 auto (Hsub c b auto')))
           _clearme0)
        _clearme.

def sub_assoc_l :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (R1 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (R2 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                    (R3 :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _R :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _S :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      matita_basics_relations.subR
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _R _S)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (_a1 : cic.Term (cic.type cic.z) A =>
                        _a2 : cic.Term (cic.type cic.z) A =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a11 : cic.Term (cic.type cic.z) A1 =>
                         _a21 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a11 _a21)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                          (_a11 : cic.Term (cic.type cic.z) A =>
                           _a21 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a12 : cic.Term (cic.type cic.z) A1 =>
                            _a22 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a12 _a22)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                             _a11 _a21)
                          _a1 _a2)
                       (_a1 : cic.Term (cic.type cic.z) A =>
                        _a2 : cic.Term (cic.type cic.z) A =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a11 : cic.Term (cic.type cic.z) A1 =>
                         _a21 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a11 _a21)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (_a11 : cic.Term (cic.type cic.z) A =>
                           _a21 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a12 : cic.Term (cic.type cic.z) A1 =>
                            _a22 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a12 _a22)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             _a11 _a21)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                          _a1 _a2))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R3 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      _clearme :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R1 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _R2 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _a1 : cic.Term (cic.type cic.z) A1 =>
            _a2 : cic.Term (cic.type cic.z) A1 =>
            matita_basics_relations.Rcomp
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
              _a1 _a2)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
             (_a1 : cic.Term (cic.type cic.z) A =>
              _a2 : cic.Term (cic.type cic.z) A =>
              (A1 : cic.Univ (cic.type cic.z) =>
               _R1 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_relations.relation
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
               _R2 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_relations.relation
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
               _a11 : cic.Term (cic.type cic.z) A1 =>
               _a21 : cic.Term (cic.type cic.z) A1 =>
               matita_basics_relations.Rcomp
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                 _R2 _a11 _a21)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (__ : cic.Term (cic.type cic.z) A =>
                 __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                (__ : cic.Term (cic.type cic.z) A =>
                 __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                _a1 _a2)
             a b) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
        (am : cic.Term (cic.type cic.z) A =>
         cic.lift cic.prop cic.prop cic.I
           (matita_basics_logic.And (R1 a am)
              (matita_basics_relations.Rcomp
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                 (__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                 am b)))
        (__ :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (am : cic.Term (cic.type cic.z) A =>
                 cic.lift cic.prop cic.prop cic.I
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a am)
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _R1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_relations.relation
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A1)) =>
                        _R2 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_relations.relation
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A1)) =>
                        _a1 : cic.Term (cic.type cic.z) A1 =>
                        _a2 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_relations.Rcomp
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _R1 _R2 _a1 _a2)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (__ : cic.Term (cic.type cic.z) A =>
                          __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                         (__ : cic.Term (cic.type cic.z) A =>
                          __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                         am b)))) =>
         (A1 : cic.Univ (cic.type cic.z) =>
          _R1 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _R2 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _a1 : cic.Term (cic.type cic.z) A1 =>
          _a2 : cic.Term (cic.type cic.z) A1 =>
          matita_basics_relations.Rcomp
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2 _a1
            _a2)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (_a1 : cic.Term (cic.type cic.z) A =>
            _a2 : cic.Term (cic.type cic.z) A =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a11 : cic.Term (cic.type cic.z) A1 =>
             _a21 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a11 _a21)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
              _a1 _a2)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
           a b)
        (c : cic.Term (cic.type cic.z) A =>
         _clearme0 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _R1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _R2 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _a1 : cic.Term (cic.type cic.z) A1 =>
                  _a2 : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_relations.Rcomp
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                    _R2 _a1 _a2)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                   c b)) =>
         matita_basics_logic.match_And cic.prop
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
           ((A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
              (__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
              c b)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _R1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_relations.relation
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A1)) =>
                     _R2 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_relations.relation
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A1)) =>
                     _a1 : cic.Term (cic.type cic.z) A1 =>
                     _a2 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_relations.Rcomp
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _R1 _R2 _a1 _a2)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                      (__ : cic.Term (cic.type cic.z) A =>
                       __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                      (__ : cic.Term (cic.type cic.z) A =>
                       __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                      c b)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (_a1 : cic.Term (cic.type cic.z) A =>
               _a2 : cic.Term (cic.type cic.z) A =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _R1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _R2 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _a11 : cic.Term (cic.type cic.z) A1 =>
                _a21 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_relations.Rcomp
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                  _R2 _a11 _a21)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (__1 : cic.Term (cic.type cic.z) A =>
                  __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
                 (__1 : cic.Term (cic.type cic.z) A =>
                  __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                 _a1 _a2)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
              a b)
           (Hac :
              cic.Term cic.prop
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a c) =>
            _clearme1 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _R1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _R2 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _a1 : cic.Term (cic.type cic.z) A1 =>
                  _a2 : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_relations.Rcomp
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                    _R2 _a1 _a2)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                   c b) =>
            matita_basics_logic.match_ex cic.prop
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (am : cic.Term (cic.type cic.z) A =>
               cic.lift cic.prop cic.prop cic.I
                 (matita_basics_logic.And (R2 c am) (R3 am b)))
              (__ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     matita_basics_logic.ex
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                      (am : cic.Term (cic.type cic.z) A =>
                       cic.lift cic.prop cic.prop cic.I
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                               c am)
                            ((__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                               am b)))) =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _R1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _R2 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _a1 : cic.Term (cic.type cic.z) A1 =>
                _a2 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_relations.Rcomp
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                  _R2 _a1 _a2)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (_a1 : cic.Term (cic.type cic.z) A =>
                  _a2 : cic.Term (cic.type cic.z) A =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _R1 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _R2 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _a11 : cic.Term (cic.type cic.z) A1 =>
                   _a21 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_relations.Rcomp
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     _R1 _R2 _a11 _a21)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (__1 : cic.Term (cic.type cic.z) A =>
                     __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
                    (__1 : cic.Term (cic.type cic.z) A =>
                     __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                    _a1 _a2)
                 (__1 : cic.Term (cic.type cic.z) A =>
                  __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
                 a b)
              (d : cic.Term (cic.type cic.z) A =>
               _clearme2 :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R2 __ __1) c d)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R3 __ __1) d b)) =>
               matita_basics_logic.match_And cic.prop
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R2 __ __1) c d)
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R3 __ __1) d b)
                 (__ :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1) c
                            d)
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R3 __ __1) d
                            b)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _R1 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _R2 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _a1 : cic.Term (cic.type cic.z) A1 =>
                   _a2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_relations.Rcomp
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     _R1 _R2 _a1 _a2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (_a1 : cic.Term (cic.type cic.z) A =>
                     _a2 : cic.Term (cic.type cic.z) A =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _R1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _R2 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _a11 : cic.Term (cic.type cic.z) A1 =>
                      _a21 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_relations.Rcomp
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _R1 _R2 _a11 _a21)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (__1 : cic.Term (cic.type cic.z) A =>
                        __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
                       (__1 : cic.Term (cic.type cic.z) A =>
                        __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                       _a1 _a2)
                    (__1 : cic.Term (cic.type cic.z) A =>
                     __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
                    a b)
                 (auto :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R2 __ __1) c d) =>
                  auto' :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R3 __ __1) d b) =>
                  matita_basics_logic.ex_intro
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (am : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a1 : cic.Term (cic.type cic.z) A1 =>
                            _a2 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a1 _a2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             a am)
                          ((__ : cic.Term (cic.type cic.z) A =>
                            __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                             am b)))
                    d
                    (matita_basics_logic.conj
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a1 : cic.Term (cic.type cic.z) A1 =>
                         _a2 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a1 _a2)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                          a d)
                       ((__ : cic.Term (cic.type cic.z) A =>
                         __1 : cic.Term (cic.type cic.z) A => R3 __ __1) d b)
                       (matita_basics_logic.ex_intro
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (am : cic.Term (cic.type cic.z) A =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__ : cic.Term (cic.type cic.z) A =>
                                  __1 : cic.Term (cic.type cic.z) A =>
                                  R1 __ __1) a am)
                                ((__ : cic.Term (cic.type cic.z) A =>
                                  __1 : cic.Term (cic.type cic.z) A =>
                                  R2 __ __1) am d)))
                          c
                          (matita_basics_logic.conj
                             ((__ : cic.Term (cic.type cic.z) A =>
                               __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                                a c)
                             ((__ : cic.Term (cic.type cic.z) A =>
                               __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                                c d)
                             Hac auto))
                       auto'))
                 _clearme2)
              _clearme1)
           _clearme0)
        _clearme.

def sub_assoc_r :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
              ((__ : cic.Univ (cic.type cic.z) =>
                matita_basics_relations.relation
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
              (R1 :
                 cic.Term (cic.type cic.z)
                   ((__ : cic.Univ (cic.type cic.z) =>
                     matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                 (R2 :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A))
                    (R3 :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _R :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _S :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      matita_basics_relations.subR
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _R _S)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (_a1 : cic.Term (cic.type cic.z) A =>
                        _a2 : cic.Term (cic.type cic.z) A =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a11 : cic.Term (cic.type cic.z) A1 =>
                         _a21 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a11 _a21)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (_a11 : cic.Term (cic.type cic.z) A =>
                           _a21 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a12 : cic.Term (cic.type cic.z) A1 =>
                            _a22 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a12 _a22)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             _a11 _a21)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                          _a1 _a2)
                       (_a1 : cic.Term (cic.type cic.z) A =>
                        _a2 : cic.Term (cic.type cic.z) A =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a11 : cic.Term (cic.type cic.z) A1 =>
                         _a21 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a11 _a21)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                          (_a11 : cic.Term (cic.type cic.z) A =>
                           _a21 : cic.Term (cic.type cic.z) A =>
                           (A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a12 : cic.Term (cic.type cic.z) A1 =>
                            _a22 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a12 _a22)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                             _a11 _a21)
                          _a1 _a2))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R1 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R2 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      R3 :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      _clearme :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            _R1 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _R2 :
              cic.Term (cic.type cic.z)
                (matita_basics_relations.relation
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
            _a1 : cic.Term (cic.type cic.z) A1 =>
            _a2 : cic.Term (cic.type cic.z) A1 =>
            matita_basics_relations.Rcomp
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
              _a1 _a2)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (_a1 : cic.Term (cic.type cic.z) A =>
              _a2 : cic.Term (cic.type cic.z) A =>
              (A1 : cic.Univ (cic.type cic.z) =>
               _R1 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_relations.relation
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
               _R2 :
                 cic.Term (cic.type cic.z)
                   (matita_basics_relations.relation
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
               _a11 : cic.Term (cic.type cic.z) A1 =>
               _a21 : cic.Term (cic.type cic.z) A1 =>
               matita_basics_relations.Rcomp
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                 _R2 _a11 _a21)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (__ : cic.Term (cic.type cic.z) A =>
                 __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                (__ : cic.Term (cic.type cic.z) A =>
                 __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                _a1 _a2)
             (__ : cic.Term (cic.type cic.z) A =>
              __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
             a b) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
        (am : cic.Term (cic.type cic.z) A =>
         cic.lift cic.prop cic.prop cic.I
           (matita_basics_logic.And
              (matita_basics_relations.Rcomp
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                 (__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                 a am)
              (R3 am b)))
        (__ :
           cic.Term cic.prop
             ((A1 : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A1
                      (__ : cic.Term (cic.type cic.z) A1 =>
                       cic.univ cic.prop (cic.type cic.z) cic.I)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                (am : cic.Term (cic.type cic.z) A =>
                 cic.lift cic.prop cic.prop cic.I
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((A1 : cic.Univ (cic.type cic.z) =>
                        _R1 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_relations.relation
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A1)) =>
                        _R2 :
                          cic.Term (cic.type cic.z)
                            (matita_basics_relations.relation
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  cic.I A1)) =>
                        _a1 : cic.Term (cic.type cic.z) A1 =>
                        _a2 : cic.Term (cic.type cic.z) A1 =>
                        matita_basics_relations.Rcomp
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          _R1 _R2 _a1 _a2)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (__ : cic.Term (cic.type cic.z) A =>
                          __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                         (__ : cic.Term (cic.type cic.z) A =>
                          __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                         a am)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R3 __ __1) am b)))) =>
         (A1 : cic.Univ (cic.type cic.z) =>
          _R1 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _R2 :
            cic.Term (cic.type cic.z)
              (matita_basics_relations.relation
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
          _a1 : cic.Term (cic.type cic.z) A1 =>
          _a2 : cic.Term (cic.type cic.z) A1 =>
          matita_basics_relations.Rcomp
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2 _a1
            _a2)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (__1 : cic.Term (cic.type cic.z) A =>
            __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
           (_a1 : cic.Term (cic.type cic.z) A =>
            _a2 : cic.Term (cic.type cic.z) A =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a11 : cic.Term (cic.type cic.z) A1 =>
             _a21 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a11 _a21)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
              _a1 _a2)
           a b)
        (c : cic.Term (cic.type cic.z) A =>
         _clearme0 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _R1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _R2 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _a1 : cic.Term (cic.type cic.z) A1 =>
                  _a2 : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_relations.Rcomp
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                    _R2 _a1 _a2)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                   a c)
                ((__ : cic.Term (cic.type cic.z) A =>
                  __1 : cic.Term (cic.type cic.z) A => R3 __ __1) c b)) =>
         matita_basics_logic.match_And cic.prop
           ((A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
              (__ : cic.Term (cic.type cic.z) A =>
               __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
              a c)
           ((__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) A => R3 __ __1) c b)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _R1 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_relations.relation
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A1)) =>
                     _R2 :
                       cic.Term (cic.type cic.z)
                         (matita_basics_relations.relation
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A1)) =>
                     _a1 : cic.Term (cic.type cic.z) A1 =>
                     _a2 : cic.Term (cic.type cic.z) A1 =>
                     matita_basics_relations.Rcomp
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _R1 _R2 _a1 _a2)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                      (__ : cic.Term (cic.type cic.z) A =>
                       __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                      (__ : cic.Term (cic.type cic.z) A =>
                       __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                      a c)
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R3 __ __1) c b)) =>
            (A1 : cic.Univ (cic.type cic.z) =>
             _R1 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _R2 :
               cic.Term (cic.type cic.z)
                 (matita_basics_relations.relation
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
             _a1 : cic.Term (cic.type cic.z) A1 =>
             _a2 : cic.Term (cic.type cic.z) A1 =>
             matita_basics_relations.Rcomp
               (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1 _R2
               _a1 _a2)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (__1 : cic.Term (cic.type cic.z) A =>
               __2 : cic.Term (cic.type cic.z) A => R1 __1 __2)
              (_a1 : cic.Term (cic.type cic.z) A =>
               _a2 : cic.Term (cic.type cic.z) A =>
               (A1 : cic.Univ (cic.type cic.z) =>
                _R1 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _R2 :
                  cic.Term (cic.type cic.z)
                    (matita_basics_relations.relation
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                _a11 : cic.Term (cic.type cic.z) A1 =>
                _a21 : cic.Term (cic.type cic.z) A1 =>
                matita_basics_relations.Rcomp
                  (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                  _R2 _a11 _a21)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                 (__1 : cic.Term (cic.type cic.z) A =>
                  __2 : cic.Term (cic.type cic.z) A => R2 __1 __2)
                 (__1 : cic.Term (cic.type cic.z) A =>
                  __2 : cic.Term (cic.type cic.z) A => R3 __1 __2)
                 _a1 _a2)
              a b)
           (_clearme1 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type cic.z) =>
                  _R1 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _R2 :
                    cic.Term (cic.type cic.z)
                      (matita_basics_relations.relation
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)) =>
                  _a1 : cic.Term (cic.type cic.z) A1 =>
                  _a2 : cic.Term (cic.type cic.z) A1 =>
                  matita_basics_relations.Rcomp
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _R1
                    _R2 _a1 _a2)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                   (__ : cic.Term (cic.type cic.z) A =>
                    __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                   a c) =>
            matita_basics_logic.match_ex cic.prop
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
              (am : cic.Term (cic.type cic.z) A =>
               cic.lift cic.prop cic.prop cic.I
                 (matita_basics_logic.And (R1 a am) (R2 am c)))
              (__ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A1
                            (__ : cic.Term (cic.type cic.z) A1 =>
                             cic.univ cic.prop (cic.type cic.z) cic.I)) =>
                     matita_basics_logic.ex
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                       _P)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                      (am : cic.Term (cic.type cic.z) A =>
                       cic.lift cic.prop cic.prop cic.I
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R1 __ __1)
                               a am)
                            ((__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                               am c)))) =>
               cic.prod cic.prop cic.prop cic.prop cic.I
                 ((__1 : cic.Term (cic.type cic.z) A =>
                   __2 : cic.Term (cic.type cic.z) A => R3 __1 __2) c b)
                 (__1 :
                    cic.Term cic.prop
                      ((__1 : cic.Term (cic.type cic.z) A =>
                        __2 : cic.Term (cic.type cic.z) A => R3 __1 __2) c b) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   _R1 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _R2 :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)) =>
                   _a1 : cic.Term (cic.type cic.z) A1 =>
                   _a2 : cic.Term (cic.type cic.z) A1 =>
                   matita_basics_relations.Rcomp
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     _R1 _R2 _a1 _a2)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (__2 : cic.Term (cic.type cic.z) A =>
                     __3 : cic.Term (cic.type cic.z) A => R1 __2 __3)
                    (_a1 : cic.Term (cic.type cic.z) A =>
                     _a2 : cic.Term (cic.type cic.z) A =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _R1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _R2 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _a11 : cic.Term (cic.type cic.z) A1 =>
                      _a21 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_relations.Rcomp
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _R1 _R2 _a11 _a21)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (__2 : cic.Term (cic.type cic.z) A =>
                        __3 : cic.Term (cic.type cic.z) A => R2 __2 __3)
                       (__2 : cic.Term (cic.type cic.z) A =>
                        __3 : cic.Term (cic.type cic.z) A => R3 __2 __3)
                       _a1 _a2)
                    a b))
              (d : cic.Term (cic.type cic.z) A =>
               _clearme2 :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a d)
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R2 __ __1) d c)) =>
               matita_basics_logic.match_And cic.prop
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a d)
                 ((__ : cic.Term (cic.type cic.z) A =>
                   __1 : cic.Term (cic.type cic.z) A => R2 __ __1) d c)
                 (__ :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.And _A _B)
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a
                            d)
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1) d
                            c)) =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) A => R3 __1 __2) c b)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 : cic.Term (cic.type cic.z) A =>
                           __2 : cic.Term (cic.type cic.z) A => R3 __1 __2) c
                            b) =>
                     (A1 : cic.Univ (cic.type cic.z) =>
                      _R1 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _R2 :
                        cic.Term (cic.type cic.z)
                          (matita_basics_relations.relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A1)) =>
                      _a1 : cic.Term (cic.type cic.z) A1 =>
                      _a2 : cic.Term (cic.type cic.z) A1 =>
                      matita_basics_relations.Rcomp
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                        _R1 _R2 _a1 _a2)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (__2 : cic.Term (cic.type cic.z) A =>
                        __3 : cic.Term (cic.type cic.z) A => R1 __2 __3)
                       (_a1 : cic.Term (cic.type cic.z) A =>
                        _a2 : cic.Term (cic.type cic.z) A =>
                        (A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a11 : cic.Term (cic.type cic.z) A1 =>
                         _a21 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a11 _a21)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__2 : cic.Term (cic.type cic.z) A =>
                           __3 : cic.Term (cic.type cic.z) A => R2 __2 __3)
                          (__2 : cic.Term (cic.type cic.z) A =>
                           __3 : cic.Term (cic.type cic.z) A => R3 __2 __3)
                          _a1 _a2)
                       a b))
                 (auto :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a d) =>
                  auto' :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R2 __ __1) d c) =>
                  auto'' :
                    cic.Term cic.prop
                      ((__ : cic.Term (cic.type cic.z) A =>
                        __1 : cic.Term (cic.type cic.z) A => R3 __ __1) c b) =>
                  matita_basics_logic.ex_intro
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (am : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop cic.prop cic.I
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((__ : cic.Term (cic.type cic.z) A =>
                            __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a
                             am)
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            _R1 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _R2 :
                              cic.Term (cic.type cic.z)
                                (matita_basics_relations.relation
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)) =>
                            _a1 : cic.Term (cic.type cic.z) A1 =>
                            _a2 : cic.Term (cic.type cic.z) A1 =>
                            matita_basics_relations.Rcomp
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              _R1 _R2 _a1 _a2)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                             (__ : cic.Term (cic.type cic.z) A =>
                              __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                             am b)))
                    d
                    (matita_basics_logic.conj
                       ((__ : cic.Term (cic.type cic.z) A =>
                         __1 : cic.Term (cic.type cic.z) A => R1 __ __1) a d)
                       ((A1 : cic.Univ (cic.type cic.z) =>
                         _R1 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _R2 :
                           cic.Term (cic.type cic.z)
                             (matita_basics_relations.relation
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A1)) =>
                         _a1 : cic.Term (cic.type cic.z) A1 =>
                         _a2 : cic.Term (cic.type cic.z) A1 =>
                         matita_basics_relations.Rcomp
                           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                              A1)
                           _R1 _R2 _a1 _a2)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                          (__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                          d b)
                       auto
                       (matita_basics_logic.ex_intro
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                          (am : cic.Term (cic.type cic.z) A =>
                           cic.lift cic.prop cic.prop cic.I
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((__ : cic.Term (cic.type cic.z) A =>
                                  __1 : cic.Term (cic.type cic.z) A =>
                                  R2 __ __1) d am)
                                ((__ : cic.Term (cic.type cic.z) A =>
                                  __1 : cic.Term (cic.type cic.z) A =>
                                  R3 __ __1) am b)))
                          c
                          (matita_basics_logic.conj
                             ((__ : cic.Term (cic.type cic.z) A =>
                               __1 : cic.Term (cic.type cic.z) A => R2 __ __1)
                                d c)
                             ((__ : cic.Term (cic.type cic.z) A =>
                               __1 : cic.Term (cic.type cic.z) A => R3 __ __1)
                                c b)
                             auto' auto''))))
                 _clearme2)
              _clearme1)
           _clearme0)
        _clearme.

def compose :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I B
                       (__ : cic.Term (cic.type cic.z) B => C))
                    (_f :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I B
                            (__ : cic.Term (cic.type cic.z) B => C)) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (__ : cic.Term (cic.type cic.z) A => B))
                       (_g :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I A
                               (__ : cic.Term (cic.type cic.z) A => B)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I A
                          (_x : cic.Term (cic.type cic.z) A => C)))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             B (__ : cic.Term (cic.type cic.z) B => C)) =>
      g :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      x : cic.Term (cic.type cic.z) A => f (g x).

def injective :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__ : cic.Term (cic.type cic.z) A => B))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A => B)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I B)
                 (f x) (f y))
              (__ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) cic.I B)
                      (f x) (f y)) =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I A)
                 x y))).

def surjective :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__ : cic.Term (cic.type cic.z) A => B))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A => B)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
        (z : cic.Term (cic.type cic.z) B =>
         (A1 : cic.Univ (cic.type cic.z) =>
          _P :
            cic.Term (cic.type cic.z)
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A1
                 (__ : cic.Term (cic.type cic.z) A1 =>
                  cic.univ cic.prop (cic.type cic.z) cic.I)) =>
          matita_basics_logic.ex
            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1) _P)
           (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
           (x : cic.Term (cic.type cic.z) A =>
            cic.lift cic.prop cic.prop cic.I
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I B)
                 z (f x)))).

def commutative :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__1 : cic.Term (cic.type cic.z) A => A)))
              (_f :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__1 : cic.Term (cic.type cic.z) A => A))) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A (__1 : cic.Term (cic.type cic.z) A => A))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I A)
              (f x y) (f y x))).

def commutative2 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A => B)))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A
                            (__1 : cic.Term (cic.type cic.z) A => B))) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A (__1 : cic.Term (cic.type cic.z) A => B))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I B)
              (f x y) (f y x))).

def associative :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__1 : cic.Term (cic.type cic.z) A => A)))
              (_f :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__1 : cic.Term (cic.type cic.z) A => A))) =>
               cic.univ cic.prop (cic.type cic.z) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A (__1 : cic.Term (cic.type cic.z) A => A))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
              (z : cic.Term (cic.type cic.z) A =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I A)
                 (f (f x y) z) (f x (f y z))))).

def monotonic :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__1 : cic.Term (cic.type cic.z) A =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))
              (_R :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__1 : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop (cic.type cic.z) cic.I))) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__ : cic.Term (cic.type cic.z) A => A))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A => A)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A
                (__1 : cic.Term (cic.type cic.z) A =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => A)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod cic.prop cic.prop cic.prop cic.I
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) A => R __ __1) x y)
              (__ :
                 cic.Term cic.prop
                   ((__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) A => R __ __1) x y) =>
               (__1 : cic.Term (cic.type cic.z) A =>
                __2 : cic.Term (cic.type cic.z) A => R __1 __2) (f x) (
               f y)))).

def distributive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__ : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__1 : cic.Term (cic.type cic.z) A => A)))
              (_f :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z)
                      (cic.type cic.z) cic.I A
                      (__ : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__1 : cic.Term (cic.type cic.z) A => A))) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__1 : cic.Term (cic.type cic.z) A => A)))
                 (_g :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A
                            (__1 : cic.Term (cic.type cic.z) A => A))) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A (__1 : cic.Term (cic.type cic.z) A => A))) =>
      g :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I A (__1 : cic.Term (cic.type cic.z) A => A))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (y : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
              (z : cic.Term (cic.type cic.z) A =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I A)
                 (f x (g y z)) (g (f x y) (f x z))))).

def distributive2 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I B
                       (__1 : cic.Term (cic.type cic.z) B => B)))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I B
                            (__1 : cic.Term (cic.type cic.z) B => B))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I B
                       (__ : cic.Term (cic.type cic.z) B =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I B
                          (__1 : cic.Term (cic.type cic.z) B => B)))
                    (_g :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I B
                            (__ : cic.Term (cic.type cic.z) B =>
                             cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I B
                               (__1 : cic.Term (cic.type cic.z) B => B))) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I B (__1 : cic.Term (cic.type cic.z) B => B))) =>
      g :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             B
             (__ : cic.Term (cic.type cic.z) B =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I B (__1 : cic.Term (cic.type cic.z) B => B))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (x : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
           (y : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
              (z : cic.Term (cic.type cic.z) B =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I B)
                 (f x (g y z)) (g (f x y) (f x z))))).

def injective_compose :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__ : cic.Term (cic.type cic.z) A => B))
                    (f :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A
                            (__ : cic.Term (cic.type cic.z) A => B)) =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I B
                          (__ : cic.Term (cic.type cic.z) B => C))
                       (g :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I B
                               (__ : cic.Term (cic.type cic.z) B => C)) =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((A1 : cic.Univ (cic.type cic.z) =>
                            B1 : cic.Univ (cic.type cic.z) =>
                            _f :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z)
                                   (cic.type cic.z) cic.I A1
                                   (__ : cic.Term (cic.type cic.z) A1 => B1)) =>
                            matita_basics_relations.injective
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I A1)
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 cic.I B1)
                              _f)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I B)
                             f)
                          (__ :
                             cic.Term cic.prop
                               ((A1 : cic.Univ (cic.type cic.z) =>
                                 B1 : cic.Univ (cic.type cic.z) =>
                                 _f :
                                   cic.Term (cic.type cic.z)
                                     (cic.prod (cic.type cic.z)
                                        (cic.type cic.z) (cic.type cic.z)
                                        cic.I A1
                                        (__ : cic.Term (cic.type cic.z) A1 =>
                                         B1)) =>
                                 matita_basics_relations.injective
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I A1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) cic.I B1)
                                   _f)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I A)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     cic.I B)
                                  f) =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((A1 : cic.Univ (cic.type cic.z) =>
                               B1 : cic.Univ (cic.type cic.z) =>
                               _f :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__1 : cic.Term (cic.type cic.z) A1 =>
                                       B1)) =>
                               matita_basics_relations.injective
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I B1)
                                 _f)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I B)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I C)
                                g)
                             (__1 :
                                cic.Term cic.prop
                                  ((A1 : cic.Univ (cic.type cic.z) =>
                                    B1 : cic.Univ (cic.type cic.z) =>
                                    _f :
                                      cic.Term (cic.type cic.z)
                                        (cic.prod (cic.type cic.z)
                                           (cic.type cic.z) (cic.type cic.z)
                                           cic.I A1
                                           (__1 :
                                              cic.Term (cic.type cic.z) A1 =>
                                            B1)) =>
                                    matita_basics_relations.injective
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I A1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) cic.I B1)
                                      _f)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I B)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) cic.I C)
                                     g) =>
                              (A1 : cic.Univ (cic.type cic.z) =>
                               B1 : cic.Univ (cic.type cic.z) =>
                               _f :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) (cic.type cic.z) cic.I
                                      A1
                                      (__2 : cic.Term (cic.type cic.z) A1 =>
                                       B1)) =>
                               matita_basics_relations.injective
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I A1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    cic.I B1)
                                 _f)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   cic.I C)
                                (x : cic.Term (cic.type cic.z) A => g (f x))))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      g :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             B (__ : cic.Term (cic.type cic.z) B => C)) =>
      auto :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            B1 : cic.Univ (cic.type cic.z) =>
            _f :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1 (__ : cic.Term (cic.type cic.z) A1 => B1)) =>
            matita_basics_relations.injective
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B1) _f)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B) f) =>
      auto' :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type cic.z) =>
            B1 : cic.Univ (cic.type cic.z) =>
            _f :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                   cic.I A1 (__ : cic.Term (cic.type cic.z) A1 => B1)) =>
            matita_basics_relations.injective
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B1) _f)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C) g) =>
      x : cic.Term (cic.type cic.z) A =>
      y : cic.Term (cic.type cic.z) A =>
      auto'' :
        cic.Term cic.prop
          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) cic.I A1)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                cic.I C)
             (g (f x)) (g (f y))) =>
      auto x y
        (auto' (f x) (f y)
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I C)
              (g (f x))
              (x0 : cic.Term (cic.type cic.z) C =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z))) cic.I
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) cic.I A1)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) cic.I C)
                    (g (f x)) x0))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    cic.I C)
                 (g (f x)))
              (g (f y)) auto'')).

def exteqR :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A
                    (__ : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I B
                       (__1 : cic.Term (cic.type cic.z) B =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)))
                 (_R :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I B
                            (__1 : cic.Term (cic.type cic.z) B =>
                             cic.univ cic.prop (cic.type cic.z) cic.I))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__ : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          (cic.type cic.z) cic.I B
                          (__1 : cic.Term (cic.type cic.z) B =>
                           cic.univ cic.prop (cic.type cic.z) cic.I)))
                    (_S :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.prod (cic.type cic.z) (cic.type cic.z)
                               (cic.type cic.z) cic.I B
                               (__1 : cic.Term (cic.type cic.z) B =>
                                cic.univ cic.prop (cic.type cic.z) cic.I))) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I B
                (__1 : cic.Term (cic.type cic.z) B =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))) =>
      S :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                cic.I B
                (__1 : cic.Term (cic.type cic.z) B =>
                 cic.univ cic.prop (cic.type cic.z) cic.I))) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
           (b : cic.Term (cic.type cic.z) B =>
            (_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.iff _A _B)
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) B => R __ __1) a b)
              ((__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) B => S __ __1) a b))).

def exteqF :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I A (__ : cic.Term (cic.type cic.z) A => B))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (cic.type cic.z) cic.I A
                         (__ : cic.Term (cic.type cic.z) A => B)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I A
                       (__ : cic.Term (cic.type cic.z) A => B))
                    (_g :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (cic.type cic.z) cic.I A
                            (__ : cic.Term (cic.type cic.z) A => B)) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      g :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
             A (__ : cic.Term (cic.type cic.z) A => B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) cic.I A1)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) cic.I
              B)
           (f a) (g a)).

def bi_relation :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (__1 : cic.Univ (cic.type cic.z) =>
               cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I B
           (__1 : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              A
              (__2 : cic.Term (cic.type cic.z) A =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I B
                 (__3 : cic.Term (cic.type cic.z) B =>
                  cic.univ cic.prop (cic.type cic.z) cic.I)))).

def bi_reflexive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (_R :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.bi_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
           (b : cic.Term (cic.type cic.z) B =>
            (__ : cic.Term (cic.type cic.z) A =>
             __1 : cic.Term (cic.type cic.z) B =>
             __2 : cic.Term (cic.type cic.z) A =>
             __3 : cic.Term (cic.type cic.z) B => R __ __1 __2 __3) a b a b)).

def bi_symmetric :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (_R :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.bi_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a1 : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (a2 : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) B =>
                      __2 : cic.Term (cic.type cic.z) A =>
                      __3 : cic.Term (cic.type cic.z) B => R __ __1 __2 __3)
                       a2 b2 a1 b1)
                    (__ :
                       cic.Term cic.prop
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) A =>
                           __3 : cic.Term (cic.type cic.z) B =>
                           R __ __1 __2 __3) a2 b2 a1 b1) =>
                     (__1 : cic.Term (cic.type cic.z) A =>
                      __2 : cic.Term (cic.type cic.z) B =>
                      __3 : cic.Term (cic.type cic.z) A =>
                      __4 : cic.Term (cic.type cic.z) B => R __1 __2 __3 __4)
                       a1 b1 a2 b2))))).

def bi_transitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (_R :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  cic.univ cic.prop (cic.type cic.z) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.bi_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a1 : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (a : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                 (b : cic.Term (cic.type cic.z) B =>
                  cic.prod cic.prop cic.prop cic.prop cic.I
                    ((__ : cic.Term (cic.type cic.z) A =>
                      __1 : cic.Term (cic.type cic.z) B =>
                      __2 : cic.Term (cic.type cic.z) A =>
                      __3 : cic.Term (cic.type cic.z) B => R __ __1 __2 __3)
                       a1 b1 a b)
                    (__ :
                       cic.Term cic.prop
                         ((__ : cic.Term (cic.type cic.z) A =>
                           __1 : cic.Term (cic.type cic.z) B =>
                           __2 : cic.Term (cic.type cic.z) A =>
                           __3 : cic.Term (cic.type cic.z) B =>
                           R __ __1 __2 __3) a1 b1 a b) =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
                       (a2 : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                          (b2 : cic.Term (cic.type cic.z) B =>
                           cic.prod cic.prop cic.prop cic.prop cic.I
                             ((__1 : cic.Term (cic.type cic.z) A =>
                               __2 : cic.Term (cic.type cic.z) B =>
                               __3 : cic.Term (cic.type cic.z) A =>
                               __4 : cic.Term (cic.type cic.z) B =>
                               R __1 __2 __3 __4) a b a2 b2)
                             (__1 :
                                cic.Term cic.prop
                                  ((__1 : cic.Term (cic.type cic.z) A =>
                                    __2 : cic.Term (cic.type cic.z) B =>
                                    __3 : cic.Term (cic.type cic.z) A =>
                                    __4 : cic.Term (cic.type cic.z) B =>
                                    R __1 __2 __3 __4) a b a2 b2) =>
                              (__2 : cic.Term (cic.type cic.z) A =>
                               __3 : cic.Term (cic.type cic.z) B =>
                               __4 : cic.Term (cic.type cic.z) A =>
                               __5 : cic.Term (cic.type cic.z) B =>
                               R __2 __3 __4 __5) a1 b1 a2 b2)))))))).

def bi_RC :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (__ :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  (__1 : cic.Univ (cic.type cic.z) =>
                   __2 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.bi_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      a1 : cic.Term (cic.type cic.z) A =>
      b1 : cic.Term (cic.type cic.z) B =>
      a2 : cic.Term (cic.type cic.z) A =>
      b2 : cic.Term (cic.type cic.z) B =>
      (_A : cic.Univ cic.prop =>
       _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) B =>
          __2 : cic.Term (cic.type cic.z) A =>
          __3 : cic.Term (cic.type cic.z) B => R __ __1 __2 __3) a1 b1 a2 b2)
        ((_A : cic.Univ cic.prop =>
          _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I A)
              a1 a2)
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I B)
              b1 b2)).

def bi_RC_reflexive :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) cic.prop cic.prop cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                 ((__ : cic.Univ (cic.type cic.z) =>
                   __1 : cic.Univ (cic.type cic.z) =>
                   matita_basics_relations.bi_relation
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B))
                 (R :
                    cic.Term (cic.type cic.z)
                      ((__ : cic.Univ (cic.type cic.z) =>
                        __1 : cic.Univ (cic.type cic.z) =>
                        matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             __1))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
                  (A1 : cic.Univ (cic.type cic.z) =>
                   B1 : cic.Univ (cic.type cic.z) =>
                   _R :
                     cic.Term (cic.type cic.z)
                       (matita_basics_relations.bi_relation
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             A1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                             B1)) =>
                   matita_basics_relations.bi_reflexive
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A1)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B1) _R)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
                    (__ : cic.Term (cic.type cic.z) A =>
                     __1 : cic.Term (cic.type cic.z) B =>
                     __2 : cic.Term (cic.type cic.z) A =>
                     __3 : cic.Term (cic.type cic.z) B =>
                     matita_basics_relations.bi_RC
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
                       (__4 : cic.Term (cic.type cic.z) A =>
                        __5 : cic.Term (cic.type cic.z) B =>
                        __6 : cic.Term (cic.type cic.z) A =>
                        __7 : cic.Term (cic.type cic.z) B =>
                        R __4 __5 __6 __7)
                       __ __1 __2 __3)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.bi_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) B =>
      matita_basics_logic.or_intror
        ((__ : cic.Term (cic.type cic.z) A =>
          __1 : cic.Term (cic.type cic.z) B =>
          __2 : cic.Term (cic.type cic.z) A =>
          __3 : cic.Term (cic.type cic.z) B => R __ __1 __2 __3) a b a b)
        ((_A : cic.Univ cic.prop =>
          _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I A)
              a a)
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I B)
              b b))
        (matita_basics_logic.conj
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I A)
              a a)
           ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) cic.I A1)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I B)
              b b)
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I A)
              a)
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 cic.I B)
              b)).

def tri_relation :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (__ : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (__1 : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (__2 : cic.Univ (cic.type cic.z) =>
                  cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I A
        (__ : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I B
           (__1 : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z) cic.I
              C
              (__2 : cic.Term (cic.type cic.z) C =>
               cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                 cic.I A
                 (__3 : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I B
                    (__4 : cic.Term (cic.type cic.z) B =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.type cic.z) cic.I C
                       (__5 : cic.Term (cic.type cic.z) C =>
                        cic.univ cic.prop (cic.type cic.z) cic.I)))))).

def tri_reflexive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      __2 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.tri_relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C))
                    (_R :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           __2 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.tri_relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __2))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               B)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               C)) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            __2 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.tri_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
           (b : cic.Term (cic.type cic.z) B =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I C
              (c : cic.Term (cic.type cic.z) C =>
               (__ : cic.Term (cic.type cic.z) A =>
                __1 : cic.Term (cic.type cic.z) B =>
                __2 : cic.Term (cic.type cic.z) C =>
                __3 : cic.Term (cic.type cic.z) A =>
                __4 : cic.Term (cic.type cic.z) B =>
                __5 : cic.Term (cic.type cic.z) C => R __ __1 __2 __3 __4 __5)
                 a b c a b c))).

def tri_symmetric :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      __2 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.tri_relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C))
                    (_R :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           __2 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.tri_relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __2))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               B)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               C)) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            __2 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.tri_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a1 : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (a2 : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                 (b2 : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I C
                    (c1 : cic.Term (cic.type cic.z) C =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I C
                       (c2 : cic.Term (cic.type cic.z) C =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((__ : cic.Term (cic.type cic.z) A =>
                            __1 : cic.Term (cic.type cic.z) B =>
                            __2 : cic.Term (cic.type cic.z) C =>
                            __3 : cic.Term (cic.type cic.z) A =>
                            __4 : cic.Term (cic.type cic.z) B =>
                            __5 : cic.Term (cic.type cic.z) C =>
                            R __ __1 __2 __3 __4 __5) a2 b2 c2 a1 b1 c1)
                          (__ :
                             cic.Term cic.prop
                               ((__ : cic.Term (cic.type cic.z) A =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 __2 : cic.Term (cic.type cic.z) C =>
                                 __3 : cic.Term (cic.type cic.z) A =>
                                 __4 : cic.Term (cic.type cic.z) B =>
                                 __5 : cic.Term (cic.type cic.z) C =>
                                 R __ __1 __2 __3 __4 __5) a2 b2 c2 a1 b1 c1) =>
                           (__1 : cic.Term (cic.type cic.z) A =>
                            __2 : cic.Term (cic.type cic.z) B =>
                            __3 : cic.Term (cic.type cic.z) C =>
                            __4 : cic.Term (cic.type cic.z) A =>
                            __5 : cic.Term (cic.type cic.z) B =>
                            __6 : cic.Term (cic.type cic.z) C =>
                            R __1 __2 __3 __4 __5 __6) a1 b1 c1 a2 b2 c2))))))).

def tri_transitive :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.type (cic.s cic.z)) cic.I
           (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.type (cic.s cic.z)) cic.I
              (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.type (cic.s cic.z)) cic.I
                 (cic.univ (cic.type cic.z) (cic.type (cic.s cic.z)) cic.I)
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) (cic.type cic.z)
                    cic.I
                    ((__ : cic.Univ (cic.type cic.z) =>
                      __1 : cic.Univ (cic.type cic.z) =>
                      __2 : cic.Univ (cic.type cic.z) =>
                      matita_basics_relations.tri_relation
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C))
                    (_R :
                       cic.Term (cic.type cic.z)
                         ((__ : cic.Univ (cic.type cic.z) =>
                           __1 : cic.Univ (cic.type cic.z) =>
                           __2 : cic.Univ (cic.type cic.z) =>
                           matita_basics_relations.tri_relation
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __1)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                cic.I __2))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               A)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               B)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I
                               C)) =>
                     cic.univ cic.prop (cic.type cic.z) cic.I)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      R :
        cic.Term (cic.type cic.z)
          ((__ : cic.Univ (cic.type cic.z) =>
            __1 : cic.Univ (cic.type cic.z) =>
            __2 : cic.Univ (cic.type cic.z) =>
            matita_basics_relations.tri_relation
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __1)
              (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I __2))
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I A)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I B)
             (cic.lift (cic.type cic.z) (cic.type cic.z) cic.I C)) =>
      cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
        (a1 : cic.Term (cic.type cic.z) A =>
         cic.prod (cic.type cic.z) cic.prop cic.prop cic.I A
           (a : cic.Term (cic.type cic.z) A =>
            cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
              (b1 : cic.Term (cic.type cic.z) B =>
               cic.prod (cic.type cic.z) cic.prop cic.prop cic.I B
                 (b : cic.Term (cic.type cic.z) B =>
                  cic.prod (cic.type cic.z) cic.prop cic.prop cic.I C
                    (c1 : cic.Term (cic.type cic.z) C =>
                     cic.prod (cic.type cic.z) cic.prop cic.prop cic.I C
                       (c : cic.Term (cic.type cic.z) C =>
                        cic.prod cic.prop cic.prop cic.prop cic.I
                          ((__ : cic.Term (cic.type cic.z) A =>
                            __1 : cic.Term (cic.type cic.z) B =>
                            __2 : cic.Term (cic.type cic.z) C =>
                            __3 : cic.Term (cic.type cic.z) A =>
                            __4 : cic.Term (cic.type cic.z) B =>
                            __5 : cic.Term (cic.type cic.z) C =>
                            R __ __1 __2 __3 __4 __5) a1 b1 c1 a b c)
                          (__ :
                             cic.Term cic.prop
                               ((__ : cic.Term (cic.type cic.z) A =>
                                 __1 : cic.Term (cic.type cic.z) B =>
                                 __2 : cic.Term (cic.type cic.z) C =>
                                 __3 : cic.Term (cic.type cic.z) A =>
                                 __4 : cic.Term (cic.type cic.z) B =>
                                 __5 : cic.Term (cic.type cic.z) C =>
                                 R __ __1 __2 __3 __4 __5) a1 b1 c1 a b c) =>
                           cic.prod (cic.type cic.z) cic.prop cic.prop cic.I
                             A
                             (a2 : cic.Term (cic.type cic.z) A =>
                              cic.prod (cic.type cic.z) cic.prop cic.prop
                                cic.I B
                                (b2 : cic.Term (cic.type cic.z) B =>
                                 cic.prod (cic.type cic.z) cic.prop cic.prop
                                   cic.I C
                                   (c2 : cic.Term (cic.type cic.z) C =>
                                    cic.prod cic.prop cic.prop cic.prop cic.I
                                      ((__1 : cic.Term (cic.type cic.z) A =>
                                        __2 : cic.Term (cic.type cic.z) B =>
                                        __3 : cic.Term (cic.type cic.z) C =>
                                        __4 : cic.Term (cic.type cic.z) A =>
                                        __5 : cic.Term (cic.type cic.z) B =>
                                        __6 : cic.Term (cic.type cic.z) C =>
                                        R __1 __2 __3 __4 __5 __6) a b c a2
                                         b2 c2)
                                      (__1 :
                                         cic.Term cic.prop
                                           ((__1 :
                                               cic.Term (cic.type cic.z) A =>
                                             __2 :
                                               cic.Term (cic.type cic.z) B =>
                                             __3 :
                                               cic.Term (cic.type cic.z) C =>
                                             __4 :
                                               cic.Term (cic.type cic.z) A =>
                                             __5 :
                                               cic.Term (cic.type cic.z) B =>
                                             __6 :
                                               cic.Term (cic.type cic.z) C =>
                                             R __1 __2 __3 __4 __5 __6) a b c
                                              a2 b2 c2) =>
                                       (__2 : cic.Term (cic.type cic.z) A =>
                                        __3 : cic.Term (cic.type cic.z) B =>
                                        __4 : cic.Term (cic.type cic.z) C =>
                                        __5 : cic.Term (cic.type cic.z) A =>
                                        __6 : cic.Term (cic.type cic.z) B =>
                                        __7 : cic.Term (cic.type cic.z) C =>
                                        R __2 __3 __4 __5 __6 __7) a1 b1 c1
                                         a2 b2 c2))))))))))).


