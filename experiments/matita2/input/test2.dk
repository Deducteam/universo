refl :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.prop cic.prop
       cic.I
       (cic.univ (cic.type (cic.s (cic.s cic.z)))
          (cic.type (cic.s (cic.s (cic.s cic.z)))) cic.I)
       (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
        cic.prod (cic.type (cic.s (cic.s cic.z))) cic.prop cic.prop cic.I A
          (x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           test.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) cic.I A)
             x x))).