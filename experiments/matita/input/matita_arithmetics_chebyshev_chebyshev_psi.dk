(; This file was automatically generated from Matita. ;)

def prim :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.nat))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
        (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_primes.primeb i)
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        matita_arithmetics_nat.O matita_arithmetics_nat.plus
        (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.S matita_arithmetics_nat.O).

def le_prim_n :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim n) n))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim _x_365) _x_365))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_chebyshev_chebyshev_psi.prim
              matita_arithmetics_nat.O))
        (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         H :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __)
                (matita_arithmetics_chebyshev_chebyshev_psi.prim n0) n0) =>
         matita_basics_bool.match_bool cic.prop
           (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1)
              (matita_basics_bool.match_bool (cic.type cic.z)
                 (_0 : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S n0)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb i)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.plus
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S n0)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 __)
              (matita_arithmetics_nat.S n0))
           (matita_arithmetics_nat.le_S_S
              (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S n0)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              n0 H)
           (matita_arithmetics_nat.le_S
              (matita_basics_bool.match_bool (cic.type cic.z)
                 (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_bigops.bigop n0
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb i)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.plus
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_bigops.bigop n0
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_primes.primeb n0))
              n0 H)
           (matita_arithmetics_primes.primeb (matita_arithmetics_nat.S n0)))
        n.

def not_prime_times_2 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
               (_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                 ((__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_primes.prime __1)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
      matita_basics_logic.nmk
        ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_primes.prime __)
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n))
        (_clearme :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.prime __)
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   n)) =>
         matita_basics_logic.match_And cic.prop
           (matita_arithmetics_nat.lt
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 n))
           (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 (matita_arithmetics_primes.divides m
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n))
                 (__ :
                    cic.Term cic.prop
                      (matita_arithmetics_primes.divides m
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            n)) =>
                  cic.prod cic.prop cic.prop
                    (matita_arithmetics_nat.lt
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) m)
                    (__1 :
                       cic.Term cic.prop
                         (matita_arithmetics_nat.lt
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            m) =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       m
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         n))
                   (cic.prod (cic.type cic.z) cic.prop
                      matita_arithmetics_nat.nat
                      (m :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       cic.prod cic.prop cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _m :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.divides _n _m) m
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               n))
                         (__ :
                            cic.Term cic.prop
                              ((_n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                _m :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_primes.divides _n _m) m
                                 (matita_arithmetics_nat.times
                                    (matita_arithmetics_nat.S
                                       (matita_arithmetics_nat.S
                                          matita_arithmetics_nat.O))
                                    n)) =>
                          cic.prod cic.prop cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2)
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)
                               m)
                            (__1 :
                               cic.Term cic.prop
                                 ((__1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __1 __2)
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O)
                                    m) =>
                             (A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               m
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  n)))))) =>
            matita_basics_logic.False)
           (H :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      n)) =>
            H1 :
              cic.Term cic.prop
                (cic.prod (cic.type cic.z) cic.prop
                   matita_arithmetics_nat.nat
                   (m :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod cic.prop cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.divides _n _m) m
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            n))
                      (__ :
                         cic.Term cic.prop
                           ((_n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             _m :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_arithmetics_primes.divides _n _m) m
                              (matita_arithmetics_nat.times
                                 (matita_arithmetics_nat.S
                                    (matita_arithmetics_nat.S
                                       matita_arithmetics_nat.O))
                                 n)) =>
                       cic.prod cic.prop cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O)
                            m)
                         (__1 :
                            cic.Term cic.prop
                              ((__1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                __2 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.lt __1 __2)
                                 (matita_arithmetics_nat.S
                                    matita_arithmetics_nat.O)
                                 m) =>
                          (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __2 :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __2)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            m
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               n))))) =>
            matita_basics_logic.absurd
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n))
              (H1
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_primes.quotient
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)
                    n
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times n
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             x
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                n)))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus n
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   n)))
                          (matita_basics_logic.rewrite_l
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus n
                                (matita_arithmetics_nat.times n
                                   matita_arithmetics_nat.O))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus n x)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      n)))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus n
                                         (matita_arithmetics_nat.plus n x))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   n
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus n x)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            n)))
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times n
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus n n)
                                            x))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus n
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus n
                                                  n)
                                               x))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus n
                                               (matita_arithmetics_nat.times
                                                  n matita_arithmetics_nat.O))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     n n)
                                                  (matita_arithmetics_nat.plus
                                                     n x)))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               matita_arithmetics_nat.O
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        n n)
                                                     (matita_arithmetics_nat.plus
                                                        n
                                                        (matita_arithmetics_nat.plus
                                                           n x))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  n
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           n n)
                                                        (matita_arithmetics_nat.plus
                                                           n x)))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        n n))
                                                  (matita_arithmetics_nat.plus
                                                     n
                                                     matita_arithmetics_nat.O)
                                                  (matita_arithmetics_nat.plus_n_O
                                                     n))
                                               (matita_arithmetics_nat.times
                                                  n matita_arithmetics_nat.O)
                                               (matita_arithmetics_nat.times_n_O
                                                  n))
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.times_n_Sm
                                               n matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.times n
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (matita_arithmetics_nat.times_n_Sm n
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n)
                                      (matita_arithmetics_nat.commutative_times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         n))
                                   (matita_arithmetics_nat.plus n
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.plus_n_O n))
                                (matita_arithmetics_nat.times n
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times_n_O n))
                             (matita_arithmetics_nat.times n
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times_n_Sm n
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.times n
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.times_n_Sm n
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 (matita_arithmetics_primes.smallest_factor_fact
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_nat.lt_to_not_eq
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))) =>
                     cic.lift cic.prop cic.prop
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) x
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             n)))
                    (matita_arithmetics_nat.monotonic_lt_times_r
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O) n
                       ltn)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.times_n_1
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
           _clearme).

def eq_prim_prim_pred :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.lt __ __1)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O) n)
              (__ :
                 cic.Term cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
               (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n))
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O) n) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_basics_bool.bool)
        matita_basics_bool.false
        (x : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_basics_bool.bool)
                x matita_basics_bool.false) =>
         cic.lift cic.prop cic.prop
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_basics_bool.match_bool (cic.type cic.z)
                 (_0 : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb i)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.plus
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 x)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       n)))))
        (matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.pred
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    n)))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            n)))
                   x_1) =>
            cic.lift cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.bigop x_1
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))))
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O matita_arithmetics_nat.plus
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n)
           (matita_arithmetics_nat.S_pred
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 n)
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times matita_arithmetics_nat.O
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x
                         (matita_arithmetics_nat.times
                            matita_arithmetics_nat.O
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))) =>
                  cic.lift cic.prop cic.prop
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2) x
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 (matita_arithmetics_nat.lt_times matita_arithmetics_nat.O
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) n
                    (matita_arithmetics_nat.lt_O_S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    ltn)
                 matita_arithmetics_nat.O
                 (matita_arithmetics_nat.times_n_1 matita_arithmetics_nat.O))))
        (matita_arithmetics_primes.primeb
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n))
        (matita_arithmetics_primes.not_prime_to_primeb_false
           (matita_arithmetics_nat.times
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              n)
           (matita_arithmetics_chebyshev_chebyshev_psi.not_prime_times_2 n
              ltn)).

def le_prim_n1 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                 n)
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __)
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))))
                      n) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 n)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      le4 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __)
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
             n) =>
      matita_arithmetics_nat.le_ind
        (matita_arithmetics_nat.S
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
        (x_417 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _x_418 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                x_417) =>
         cic.lift cic.prop cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       x_417)))
              x_417))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_chebyshev_chebyshev_psi.prim
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))))))
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         le40 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                m) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.pred
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.S m)))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.S m)))) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim x) m)
                 (_x_421 :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __1)
                         (matita_arithmetics_chebyshev_chebyshev_psi.prim x)
                         m) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S m))))
                    (matita_arithmetics_nat.S m))))
           (matita_basics_logic.eq_ind
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S m)))
              (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_chebyshev_chebyshev_psi.prim
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.S m)))
                      x_1) =>
               cic.lift cic.prop cic.prop
                 (cic.prod cic.prop cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __) x_1 m)
                    (_x_421 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.le _n __) x_1 m) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_chebyshev_chebyshev_psi.prim
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S m))))
                       (matita_arithmetics_nat.S m))))
              (H :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __)
                      (matita_arithmetics_chebyshev_chebyshev_psi.prim
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.S m)))
                      m) =>
               matita_basics_bool.match_bool cic.prop
                 (__ : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_basics_bool.match_bool (cic.type cic.z)
                       (_0 :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S m)))
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb i)
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          matita_arithmetics_nat.plus
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       __)
                    (matita_arithmetics_nat.S m))
                 (matita_arithmetics_nat.le_S_S
                    (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S m)))
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb i)
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          matita_arithmetics_nat.plus
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    m H)
                 (matita_arithmetics_nat.le_S
                    (matita_basics_bool.match_bool (cic.type cic.z)
                       (__ :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_bigops.bigop
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S m)))
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_primes.primeb i)
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             matita_arithmetics_nat.nat)
                          matita_arithmetics_nat.O
                          matita_arithmetics_nat.plus
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       matita_basics_bool.false)
                    m H)
                 (matita_arithmetics_primes.primeb
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S m)))))
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S m))))
              (matita_arithmetics_chebyshev_chebyshev_psi.eq_prim_prim_pred
                 (matita_arithmetics_nat.S m)
                 (matita_arithmetics_nat.le_S_S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) m
                    (matita_arithmetics_nat.transitive_le
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       m
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))))
                       le40))))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              m
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus m x))
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus m
                             matita_arithmetics_nat.O)))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S m))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    m
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S x))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.S m)))
                    (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.plus_n_O m))
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m m))
                 (matita_arithmetics_nat.plus_n_Sm m m))
              (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
              (matita_arithmetics_nat.plus_n_O m)))
        n le4.

def le_prim_n2 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))))))
                 n)
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __)
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)))))))
                      n) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          n)))
                 (matita_arithmetics_nat.pred n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      le7 :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __)
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O)))))))
             n) =>
      matita_arithmetics_nat.le_ind
        (matita_arithmetics_nat.S
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))))
        (x_417 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _x_418 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)))))))
                x_417) =>
         cic.lift cic.prop cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       x_417)))
              (matita_arithmetics_nat.pred x_417)))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_chebyshev_chebyshev_psi.prim
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))))))))))
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         le70 :
           cic.Term cic.prop
             ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.le _n __)
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O)))))))
                m) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.pred
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.S m)))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.S m)))) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim x)
                    (matita_arithmetics_nat.pred m))
                 (_x_421 :
                    cic.Term cic.prop
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.le _n __1)
                         (matita_arithmetics_chebyshev_chebyshev_psi.prim x)
                         (matita_arithmetics_nat.pred m)) =>
                  (_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S m))))
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S m)))))
           (matita_basics_logic.eq_ind
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_arithmetics_nat.S m)))
              (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_chebyshev_chebyshev_psi.prim
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.S m)))
                      x_1) =>
               cic.lift cic.prop cic.prop
                 (cic.prod cic.prop cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __) x_1
                       (matita_arithmetics_nat.pred m))
                    (_x_421 :
                       cic.Term cic.prop
                         ((_n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.le _n __) x_1
                            (matita_arithmetics_nat.pred m)) =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_arithmetics_chebyshev_chebyshev_psi.prim
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S m))))
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S m)))))
              (H :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __)
                      (matita_arithmetics_chebyshev_chebyshev_psi.prim
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            (matita_arithmetics_nat.S m)))
                      (matita_arithmetics_nat.pred m)) =>
               matita_basics_logic.eq_ind
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.pred m))
                 (x_1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.pred m))
                         x_1) =>
                  cic.lift cic.prop cic.prop
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __)
                       (matita_basics_bool.match_bool (cic.type cic.z)
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S m)))
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb i)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.plus
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_primes.primeb
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))))
                       x_1))
                 (matita_basics_bool.match_bool cic.prop
                    (__ :
                       cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                     (_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.le _n __1)
                       (matita_basics_bool.match_bool (cic.type cic.z)
                          (_0 :
                             cic.Term (cic.type cic.z)
                               matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S m)))
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb i)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.plus
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          __)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.pred m)))
                    (matita_arithmetics_nat.le_S_S
                       (matita_arithmetics_nat.plus matita_arithmetics_nat.O
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_nat.pred m) H)
                    (matita_arithmetics_nat.le_S
                       (matita_basics_bool.match_bool (cic.type cic.z)
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_bigops.bigop
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S m)))
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_primes.primeb i)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                matita_arithmetics_nat.O
                                matita_arithmetics_nat.plus
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_bigops.bigop
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S m)))
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_primes.primeb i)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             matita_arithmetics_nat.O
                             matita_arithmetics_nat.plus
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          matita_basics_bool.false)
                       (matita_arithmetics_nat.pred m) H)
                    (matita_arithmetics_primes.primeb
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S m)))))
                 m
                 (matita_arithmetics_nat.S_pred m
                    (matita_arithmetics_nat.transitive_le
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       m
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       le70)))
              (matita_arithmetics_chebyshev_chebyshev_psi.prim
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S m))))
              (matita_arithmetics_chebyshev_chebyshev_psi.eq_prim_prim_pred
                 (matita_arithmetics_nat.S m)
                 (matita_arithmetics_nat.le_S_S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O) m
                    (matita_arithmetics_nat.transitive_le
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       m
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       le70))))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 m))
           (matita_basics_logic.rewrite_l
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              m
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus m x))
                    (matita_arithmetics_nat.plus m
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus m
                             matita_arithmetics_nat.O)))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.plus m (matita_arithmetics_nat.S m))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       x
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus m
                                matita_arithmetics_nat.O)))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    m
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S m))
                          (matita_arithmetics_nat.plus m
                             (matita_arithmetics_nat.S x))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.plus m
                          (matita_arithmetics_nat.S m)))
                    (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
                    (matita_arithmetics_nat.plus_n_O m))
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus m m))
                 (matita_arithmetics_nat.plus_n_Sm m m))
              (matita_arithmetics_nat.plus m matita_arithmetics_nat.O)
              (matita_arithmetics_nat.plus_n_O m)))
        n le7.

def let_clause_1553 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type cic.z) =>
                   _P :
                     cic.Term (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z) A
                          (__ : cic.Term (cic.type cic.z) A =>
                           cic.univ cic.prop)) =>
                   matita_basics_logic.ex
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    (a :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop cic.prop
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.Or _A _B)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a))))))
                 (_clearme :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type cic.z) =>
                        _P :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z) A
                               (__ : cic.Term (cic.type cic.z) A =>
                                cic.univ cic.prop)) =>
                        matita_basics_logic.ex
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                         (cic.lift (cic.type cic.z) (cic.type cic.z)
                            matita_arithmetics_nat.nat)
                         (a :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.lift cic.prop cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.Or _A _B)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  n0
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     a))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  n0
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        a)))))) =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (a :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.Or _A _B)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a))))
                       (_clearme0 :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.Or _A _B)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  n0
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     a))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  n0
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        a)))) =>
                        cic.prod cic.prop cic.prop
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a)))
                          (Hn :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  n0
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        a))) =>
                           (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0
                             (matita_arithmetics_nat.plus a
                                (matita_arithmetics_nat.S a)))))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a)))))) =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                n0
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   a))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                n0
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      a)))) =>
      Hn :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             n0
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.times
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   a))) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S (matita_arithmetics_nat.plus a a))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              n0 x))
        (matita_basics_logic.rewrite_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.plus a matita_arithmetics_nat.O)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 n0
                 (matita_arithmetics_nat.S (matita_arithmetics_nat.plus a x))))
           (matita_basics_logic.rewrite_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times a matita_arithmetics_nat.O)
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    n0
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus a
                          (matita_arithmetics_nat.plus a x)))))
              (matita_basics_logic.rewrite_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.times a
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n0
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.plus a x))))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.times a
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          n0 (matita_arithmetics_nat.S x)))
                    (matita_basics_logic.rewrite_l
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n0 (matita_arithmetics_nat.S x)))
                       Hn
                       (matita_arithmetics_nat.times a
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))
                       (matita_arithmetics_nat.commutative_times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a))
                    (matita_arithmetics_nat.plus a
                       (matita_arithmetics_nat.times a
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_nat.times_n_Sm a
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                 (matita_arithmetics_nat.plus a
                    (matita_arithmetics_nat.times a matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.times_n_Sm a
                    matita_arithmetics_nat.O))
              matita_arithmetics_nat.O (matita_arithmetics_nat.times_n_O a))
           a (matita_arithmetics_nat.plus_n_O a))
        (matita_arithmetics_nat.plus a (matita_arithmetics_nat.S a))
        (matita_arithmetics_nat.plus_n_Sm a a).

def even_or_odd :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           ((A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       _x_365
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       _x_365
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a)))))))
        (matita_basics_logic.ex_intro
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)))))
           matita_arithmetics_nat.O
           (matita_basics_logic.or_introl
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    matita_arithmetics_nat.O))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       matita_arithmetics_nat.O)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O)))
        (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z)
                   matita_arithmetics_nat.nat)
                (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         n0
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         n0
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a)))))) =>
         matita_basics_logic.match_ex cic.prop
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    n0
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    n0
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)))))
           (__ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop)) =>
                  matita_basics_logic.ex
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                   (cic.lift (cic.type cic.z) (cic.type cic.z)
                      matita_arithmetics_nat.nat)
                   (a :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.lift cic.prop cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.Or _A _B)
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            n0
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a))
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            n0
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))
                                  a)))))) =>
            (A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__1 : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a))))))
           (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _clearme0 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a)))) =>
            matita_basics_logic.match_Or cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 n0
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 n0
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a)))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         n0
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         n0
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a)))) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (a0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a0))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a0))))))
              (Hn :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a)) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (a0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a0))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a0)))))
                 a
                 (matita_basics_logic.or_intror
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a)))
                    (matita_basics_logic.eq_f
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.S n0
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)
                       Hn)))
              (Hn :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      n0
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (a0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a0))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S n0)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a0)))))
                 (matita_arithmetics_nat.S a)
                 (matita_basics_logic.or_introl
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S n0)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S a))))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     a))) =>
                        cic.lift cic.prop cic.prop
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S a))))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          a
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus a x)))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus a
                                            matita_arithmetics_nat.O))))))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus a
                                (matita_arithmetics_nat.S a))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S x)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.plus a
                                               matita_arithmetics_nat.O))))))
                             (matita_basics_logic.rewrite_l
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                n0
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S x)
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.plus a
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.plus a
                                                  matita_arithmetics_nat.O))))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   a
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S n0)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.S x)))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      n0
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.S n0)
                                            (matita_arithmetics_nat.S x)))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S n0))
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.S a))
                                      (matita_arithmetics_chebyshev_chebyshev_psi.let_clause_1553
                                         n n0 _clearme a _clearme0 Hn))
                                   (matita_arithmetics_nat.plus a
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.plus_n_O a))
                                (matita_arithmetics_nat.plus a
                                   (matita_arithmetics_nat.S a))
                                (matita_arithmetics_chebyshev_chebyshev_psi.let_clause_1553
                                   n n0 _clearme a _clearme0 Hn))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus a a))
                             (matita_arithmetics_nat.plus_n_Sm a a))
                          (matita_arithmetics_nat.plus a
                             matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.plus_n_O a))
                       n0 Hn)))
              _clearme0)
           _clearme)
        n.

def le_prim_n3 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod cic.prop cic.prop
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))))))))))))))
                 n)
              (__ :
                 cic.Term cic.prop
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.le _n __)
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          (matita_arithmetics_nat.S
                                                             (matita_arithmetics_nat.S
                                                                (matita_arithmetics_nat.S
                                                                   matita_arithmetics_nat.O)))))))))))))))
                      n) =>
               (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __1)
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim n)
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_div_and_mod.div n
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      len :
        cic.Term cic.prop
          ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.le _n __)
             (matita_arithmetics_nat.S
                (matita_arithmetics_nat.S
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.S
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.S
                                                       (matita_arithmetics_nat.S
                                                          matita_arithmetics_nat.O)))))))))))))))
             n) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (matita_basics_logic.Or
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.pred n)
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a))
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.pred n)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a)))))
        (__ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z)
                   matita_arithmetics_nat.nat)
                (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.pred n)
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.pred n)
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.times
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S
                                     matita_arithmetics_nat.O))
                               a)))))) =>
         (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.le _n __1)
           (matita_arithmetics_chebyshev_chebyshev_psi.prim n)
           (matita_arithmetics_nat.pred
              (matita_arithmetics_div_and_mod.div n
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
        (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.pred n)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      a))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.pred n)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a)))) =>
         matita_basics_logic.match_Or cic.prop
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.pred n)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 a))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.pred n)
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a)))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.pred n)
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.pred n)
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a)))) =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __1)
              (matita_arithmetics_chebyshev_chebyshev_psi.prim n)
              (matita_arithmetics_nat.pred
                 (matita_arithmetics_div_and_mod.div n
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
           (Hpredn :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.pred n)
                   (matita_arithmetics_nat.times
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      a)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.S
                         (matita_arithmetics_nat.times
                            (matita_arithmetics_nat.S
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            a))) =>
               cic.lift cic.prop cic.prop
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim x)
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_div_and_mod.div x
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))))
              (matita_arithmetics_nat.transitive_le
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          a)))
                 (matita_arithmetics_nat.pred a)
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                 (matita_arithmetics_chebyshev_chebyshev_psi.le_prim_n2 a
                    (matita_arithmetics_nat.le_times_to_le
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))))))
                       a
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.le_S_S_to_le
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a)
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     n x_1) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))))))))
                                   x_1))
                             len
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.pred n)
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.pred n) x_1) =>
                                 cic.lift cic.prop cic.prop
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      n (matita_arithmetics_nat.S x_1)))
                                (matita_basics_logic.sym_eq
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.pred n))
                                   n
                                   (matita_arithmetics_nat.S_pred n
                                      (matita_arithmetics_nat.transitive_le
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                         n
                                         (matita_arithmetics_nat.lt_O_S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                         len)))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a)
                                Hpredn)))))
                 (matita_arithmetics_nat.monotonic_pred a
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_div_and_mod.le_times_to_le_div
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.le_n_Sn
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             a)))))
              n
              (matita_basics_logic.eq_ind
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.pred n)
                 (x_1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.pred n) x_1) =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n (matita_arithmetics_nat.S x_1)))
                 (matita_basics_logic.sym_eq
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S (matita_arithmetics_nat.pred n))
                    n
                    (matita_arithmetics_nat.S_pred n
                       (matita_arithmetics_nat.transitive_le
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                          n
                          (matita_arithmetics_nat.lt_O_S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                          len)))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    a)
                 Hpredn))
           (Hpredn :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.pred n)
                   (matita_arithmetics_nat.S
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         a))) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.times
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_nat.S a))
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x
                      (matita_arithmetics_nat.times
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         (matita_arithmetics_nat.S a))) =>
               cic.lift cic.prop cic.prop
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim x)
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_div_and_mod.div x
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))))))
              (matita_arithmetics_nat.transitive_le
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_arithmetics_nat.S a)))
                 (matita_arithmetics_nat.pred a)
                 (matita_arithmetics_nat.pred
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.S a))))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            x
                            (matita_arithmetics_chebyshev_chebyshev_psi.prim
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.times
                                     (matita_arithmetics_nat.S
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O))
                                     (matita_arithmetics_nat.S a))))) =>
                     cic.lift cic.prop cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __1) x
                          (matita_arithmetics_nat.pred a)))
                    (matita_basics_logic.eq_ind
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n
                       (x_1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _x_2 :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               n x_1) =>
                        cic.lift cic.prop cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.le _n __)
                             (matita_arithmetics_chebyshev_chebyshev_psi.prim
                                (matita_arithmetics_nat.pred x_1))
                             (matita_arithmetics_nat.pred a)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.times
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))
                                        a))) =>
                           cic.lift cic.prop cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __1)
                                (matita_arithmetics_chebyshev_chebyshev_psi.prim
                                   x)
                                (matita_arithmetics_nat.pred a)))
                          (matita_arithmetics_chebyshev_chebyshev_psi.le_prim_n2
                             a
                             (matita_arithmetics_nat.le_S_S_to_le
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))))))
                                a
                                (matita_arithmetics_nat.lt_times_n_to_lt_r
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))))))
                                   (matita_arithmetics_nat.S a)
                                   (matita_basics_logic.eq_ind
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      n
                                      (x_1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              n x_1) =>
                                       cic.lift cic.prop cic.prop
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))))))))
                                            x_1))
                                      len
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S a))
                                      (matita_basics_logic.eq_ind
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.plus a
                                                  matita_arithmetics_nat.O)))
                                         (x_1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _x_2 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.S
                                                    (matita_arithmetics_nat.plus
                                                       a
                                                       (matita_arithmetics_nat.plus
                                                          a
                                                          matita_arithmetics_nat.O)))
                                                 x_1) =>
                                          cic.lift cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               n
                                               (matita_arithmetics_nat.S x_1)))
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.pred n)
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.pred
                                                       n)
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  n
                                                  (matita_arithmetics_nat.S
                                                     x_1)))
                                            (matita_basics_logic.sym_eq
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.pred
                                                     n))
                                               n
                                               (matita_arithmetics_nat.S_pred
                                                  n
                                                  (matita_arithmetics_nat.transitive_le
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                                     n
                                                     (matita_arithmetics_nat.lt_O_S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                                     len)))
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     matita_arithmetics_nat.O)))
                                            Hpredn)
                                         (matita_arithmetics_nat.plus a
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.plus a
                                                  matita_arithmetics_nat.O)))
                                         (matita_arithmetics_nat.plus_n_Sm a
                                            (matita_arithmetics_nat.plus a
                                               matita_arithmetics_nat.O)))))))
                          (matita_arithmetics_nat.pred n) Hpredn)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a))
                       (matita_basics_logic.eq_ind
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.plus a
                                (matita_arithmetics_nat.plus a
                                   matita_arithmetics_nat.O)))
                          (x_1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           _x_2 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.plus a
                                        (matita_arithmetics_nat.plus a
                                           matita_arithmetics_nat.O)))
                                  x_1) =>
                           cic.lift cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                n (matita_arithmetics_nat.S x_1)))
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.pred n)
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.pred n) x_1) =>
                              cic.lift cic.prop cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   n (matita_arithmetics_nat.S x_1)))
                             (matita_basics_logic.sym_eq
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.pred n))
                                n
                                (matita_arithmetics_nat.S_pred n
                                   (matita_arithmetics_nat.transitive_le
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                      n
                                      (matita_arithmetics_nat.lt_O_S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                      len)))
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus a
                                   (matita_arithmetics_nat.plus a
                                      matita_arithmetics_nat.O)))
                             Hpredn)
                          (matita_arithmetics_nat.plus a
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.plus a
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.plus_n_Sm a
                             (matita_arithmetics_nat.plus a
                                matita_arithmetics_nat.O))))
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a)))
                    (matita_arithmetics_chebyshev_chebyshev_psi.eq_prim_prim_pred
                       (matita_arithmetics_nat.S a)
                       (matita_arithmetics_nat.lt_times_n_to_lt_r
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                          (matita_arithmetics_nat.S a)
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             n
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     n x_1) =>
                              cic.lift cic.prop cic.prop
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   x_1))
                             (matita_arithmetics_nat.transitive_le
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                n
                                (matita_arithmetics_nat.le_plus_n_r
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))))))))))))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                len)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S a))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.plus a
                                         matita_arithmetics_nat.O)))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.plus a
                                              (matita_arithmetics_nat.plus a
                                                 matita_arithmetics_nat.O)))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      n (matita_arithmetics_nat.S x_1)))
                                (matita_basics_logic.eq_ind
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.pred n)
                                   (x_1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _x_2 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.pred n)
                                           x_1) =>
                                    cic.lift cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         n (matita_arithmetics_nat.S x_1)))
                                   (matita_basics_logic.sym_eq
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.pred n))
                                      n
                                      (matita_arithmetics_nat.S_pred n
                                         (matita_arithmetics_nat.transitive_le
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                            n
                                            (matita_arithmetics_nat.lt_O_S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                                            len)))
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.plus a
                                            matita_arithmetics_nat.O)))
                                   Hpredn)
                                (matita_arithmetics_nat.plus a
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.plus a
                                         matita_arithmetics_nat.O)))
                                (matita_arithmetics_nat.plus_n_Sm a
                                   (matita_arithmetics_nat.plus a
                                      matita_arithmetics_nat.O)))))))
                 (matita_arithmetics_nat.monotonic_pred a
                    (matita_arithmetics_div_and_mod.div
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
                    (matita_arithmetics_div_and_mod.le_times_to_le_div
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (matita_arithmetics_nat.S a))
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       a
                       (matita_arithmetics_nat.lt_O_S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop (cic.type cic.z)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      a))))
                          (cic.lift cic.prop (cic.type cic.z)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.le _n __)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.S a))))
                          (matita_arithmetics_nat.le_plus_n
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a))
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.S a))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.univ (cic.type cic.z)))
                                   (cic.lift cic.prop (cic.type cic.z)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            a)
                                         x))
                                   (cic.lift cic.prop (cic.type cic.z)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            a)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (matita_arithmetics_nat.S a))))))
                             (matita_basics_logic.refl
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.univ (cic.type cic.z)))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         a)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.S a)))))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   a))
                             (matita_arithmetics_nat.times_n_Sm
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                a))))))
              n
              (matita_basics_logic.eq_ind
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.plus a
                       (matita_arithmetics_nat.plus a
                          matita_arithmetics_nat.O)))
                 (x_1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _x_2 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.plus a
                               (matita_arithmetics_nat.plus a
                                  matita_arithmetics_nat.O)))
                         x_1) =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       n (matita_arithmetics_nat.S x_1)))
                 (matita_basics_logic.eq_ind
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.pred n)
                    (x_1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.pred n) x_1) =>
                     cic.lift cic.prop cic.prop
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          n (matita_arithmetics_nat.S x_1)))
                    (matita_basics_logic.sym_eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.pred n))
                       n
                       (matita_arithmetics_nat.S_pred n
                          (matita_arithmetics_nat.transitive_le
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                             n
                             (matita_arithmetics_nat.lt_O_S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))))))))))))))
                             len)))
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus a
                          (matita_arithmetics_nat.plus a
                             matita_arithmetics_nat.O)))
                    Hpredn)
                 (matita_arithmetics_nat.plus a
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.plus a
                          matita_arithmetics_nat.O)))
                 (matita_arithmetics_nat.plus_n_Sm a
                    (matita_arithmetics_nat.plus a matita_arithmetics_nat.O))))
           _clearme)
        (matita_arithmetics_chebyshev_chebyshev_psi.even_or_odd
           (matita_arithmetics_nat.pred n)).

def Psi :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.nat))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_primes.primeb p)
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        matita_arithmetics_nat.times
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_exp.exp p (matita_arithmetics_log.log p n)).

def psi_def :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_exp.exp p
                    (matita_arithmetics_log.log p n)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chebyshev_chebyshev_psi.Psi n).

def le_Psil1 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.match_nat cic.prop
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.le _n __1)
           (matita_arithmetics_chebyshev_chebyshev_psi.Psi __)
           (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S __)
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.primeb p)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => __)))
        (matita_arithmetics_nat.le_n
           (matita_arithmetics_chebyshev_chebyshev_psi.Psi
              matita_arithmetics_nat.O))
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_sigma_pi.le_pi
           (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))
           matita_arithmetics_primes.primeb
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_exp.exp __
              (matita_arithmetics_log.log __ (matita_arithmetics_nat.S m)))
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.S m)
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1) i
                   (matita_arithmetics_nat.S (matita_arithmetics_nat.S m))) =>
            _0 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_basics_bool.bool)
                   (matita_arithmetics_primes.primeb i)
                   matita_basics_bool.true) =>
            matita_arithmetics_log.le_exp_log i (matita_arithmetics_nat.S m)
              (matita_arithmetics_nat.lt_O_S m)))
        n.

def le_Psil :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
              (matita_arithmetics_exp.exp n
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.eq_ind
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_primes.primeb i)
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => n))
        (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _x_2 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                   (i :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_arithmetics_primes.primeb i)
                   (cic.lift (cic.type cic.z) (cic.type cic.z)
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                   matita_arithmetics_nat.times
                   (i :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    n))
                x_1) =>
         cic.lift cic.prop cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi n) x_1))
        (matita_arithmetics_chebyshev_chebyshev_psi.le_Psil1 n)
        (matita_arithmetics_exp.exp n
           (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.primeb i)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              matita_arithmetics_nat.O matita_arithmetics_nat.plus
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_arithmetics_sigma_pi.exp_sigma (matita_arithmetics_nat.S n) n
           matita_arithmetics_primes.primeb).

def lePsi_r2 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_exp.exp n
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim n))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
                 (matita_arithmetics_chebyshev_chebyshev_psi.Psi n))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.Or_ind
        ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
          matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n)
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O n)
        (_x_170 :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O
                   n)
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O n)) =>
         cic.lift cic.prop cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_nat.le _n __)
              (matita_arithmetics_exp.exp n
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim n))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
                 (matita_arithmetics_chebyshev_chebyshev_psi.Psi n))))
        (Hn :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_primes.primeb i)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => n))
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_bigops.bigop
                      (matita_arithmetics_nat.S n)
                      (i :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_arithmetics_primes.primeb i)
                      (cic.lift (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                      matita_arithmetics_nat.times
                      (i :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       n))
                   x_1) =>
            cic.lift cic.prop cic.prop
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __) x_1
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
                    (matita_arithmetics_chebyshev_chebyshev_psi.Psi n))))
           (matita_basics_logic.eq_ind
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp i
                       (matita_arithmetics_log.log i n))
                    (matita_arithmetics_exp.exp i
                       (matita_arithmetics_log.log i n))))
              (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               _x_2 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_bigops.bigop
                         (matita_arithmetics_nat.S n)
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_primes.primeb i)
                         (cic.lift (cic.type cic.z) (cic.type cic.z)
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                         matita_arithmetics_nat.times
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_nat.times
                            (matita_arithmetics_exp.exp i
                               (matita_arithmetics_log.log i n))
                            (matita_arithmetics_exp.exp i
                               (matita_arithmetics_log.log i n))))
                      x_1) =>
               cic.lift cic.prop cic.prop
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.le _n __)
                    (matita_arithmetics_bigops.bigop
                       (matita_arithmetics_nat.S n)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_primes.primeb i)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                       matita_arithmetics_nat.times
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        n))
                    x_1))
              (matita_arithmetics_sigma_pi.le_pi (matita_arithmetics_nat.S n)
                 matita_arithmetics_primes.primeb
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  n)
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.times
                    (matita_arithmetics_exp.exp __
                       (matita_arithmetics_log.log __ n))
                    (matita_arithmetics_exp.exp __
                       (matita_arithmetics_log.log __ n)))
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  lti :
                    cic.Term cic.prop
                      ((__ :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __1 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_nat.lt __ __1) i
                         (matita_arithmetics_nat.S n)) =>
                  primei :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_basics_bool.bool)
                         (matita_arithmetics_primes.primeb i)
                         matita_basics_bool.true) =>
                  matita_basics_logic.eq_ind
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_exp.exp i
                       (matita_arithmetics_nat.plus
                          (matita_arithmetics_log.log i n)
                          (matita_arithmetics_log.log i n)))
                    (x_1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _x_2 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_exp.exp i
                               (matita_arithmetics_nat.plus
                                  (matita_arithmetics_log.log i n)
                                  (matita_arithmetics_log.log i n)))
                            x_1) =>
                     cic.lift cic.prop cic.prop
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.le _n __) n x_1))
                    (matita_arithmetics_nat.transitive_le n
                       (matita_arithmetics_exp.exp i
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_log.log i n)))
                       (matita_arithmetics_exp.exp i
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_log.log i n)
                             (matita_arithmetics_log.log i n)))
                       (matita_arithmetics_nat.lt_to_le n
                          (matita_arithmetics_exp.exp i
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_log.log i n)))
                          (matita_arithmetics_log.lt_exp_log i n
                             (matita_arithmetics_primes.prime_to_lt_SO i
                                (matita_arithmetics_primes.primeb_true_to_prime
                                   i
                                   (matita_basics_logic.rewrite_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      matita_basics_bool.true
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_basics_bool.bool =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_basics_bool.bool)
                                            x matita_basics_bool.true))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         matita_basics_bool.true)
                                      (matita_arithmetics_primes.primeb i)
                                      primei)))))
                       (matita_arithmetics_exp.le_exp
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_log.log i n))
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_log.log i n)
                             (matita_arithmetics_log.log i n))
                          i
                          (matita_arithmetics_primes.prime_to_lt_O i
                             (matita_arithmetics_primes.primeb_true_to_prime
                                i
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_basics_bool.bool)
                                   matita_basics_bool.true
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_basics_bool.bool =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         x matita_basics_bool.true))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      matita_basics_bool.true)
                                   (matita_arithmetics_primes.primeb i)
                                   primei)))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_log.log i n)
                                matita_arithmetics_nat.O)
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_log.log i n)
                                        matita_arithmetics_nat.O)) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __1)
                                   (matita_arithmetics_nat.S x)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_log.log i n)
                                      (matita_arithmetics_log.log i n))))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_log.log i n)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_log.log i n)
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O))) =>
                                 cic.lift cic.prop cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __1) x
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_log.log i n)
                                         (matita_arithmetics_log.log i n))))
                                (matita_arithmetics_nat.monotonic_le_plus_r
                                   (matita_arithmetics_log.log i n)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_log.log i n)
                                   (matita_arithmetics_log.lt_O_log i n
                                      (matita_arithmetics_nat.lt_to_le_to_lt
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         i n
                                         (matita_arithmetics_primes.prime_to_lt_SO
                                            i
                                            (matita_arithmetics_primes.primeb_true_to_prime
                                               i
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_basics_bool.bool)
                                                  matita_basics_bool.true
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_basics_bool.bool =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_basics_bool.bool)
                                                        x
                                                        matita_basics_bool.true))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_basics_bool.bool)
                                                     matita_basics_bool.true)
                                                  (matita_arithmetics_primes.primeb
                                                     i)
                                                  primei)))
                                         (matita_arithmetics_nat.le_S_S_to_le
                                            i n lti))
                                      (matita_arithmetics_nat.le_S_S_to_le i
                                         n lti)))
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_log.log i n)
                                      matita_arithmetics_nat.O))
                                (matita_arithmetics_nat.plus_n_Sm
                                   (matita_arithmetics_log.log i n)
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_log.log i n)
                             (matita_arithmetics_nat.plus_n_O
                                (matita_arithmetics_log.log i n)))))
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_exp.exp i
                          (matita_arithmetics_log.log i n))
                       (matita_arithmetics_exp.exp i
                          (matita_arithmetics_log.log i n)))
                    (matita_arithmetics_exp.exp_plus_times i
                       (matita_arithmetics_log.log i n)
                       (matita_arithmetics_log.log i n))))
              (matita_arithmetics_nat.times
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S n)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_exp.exp i
                       (matita_arithmetics_log.log i n)))
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_nat.S n)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_primes.primeb i)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_exp.exp i
                       (matita_arithmetics_log.log i n))))
              (matita_arithmetics_sigma_pi.times_pi
                 (matita_arithmetics_nat.S n)
                 matita_arithmetics_primes.primeb
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_exp.exp __
                    (matita_arithmetics_log.log __ n))
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_exp.exp __
                    (matita_arithmetics_log.log __ n))))
           (matita_arithmetics_exp.exp n
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb i)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O matita_arithmetics_nat.plus
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_sigma_pi.exp_sigma
              (matita_arithmetics_nat.S n) n matita_arithmetics_primes.primeb))
        (Hn :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                matita_arithmetics_nat.O n) =>
         matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           matita_arithmetics_nat.O
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   matita_arithmetics_nat.O x_1) =>
            cic.lift cic.prop cic.prop
              ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                __ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_arithmetics_nat.le _n __)
                 (matita_arithmetics_exp.exp x_1
                    (matita_arithmetics_chebyshev_chebyshev_psi.prim x_1))
                 (matita_arithmetics_nat.times
                    (matita_arithmetics_chebyshev_chebyshev_psi.Psi x_1)
                    (matita_arithmetics_chebyshev_chebyshev_psi.Psi x_1))))
           (matita_arithmetics_nat.le_n
              (matita_arithmetics_exp.exp matita_arithmetics_nat.O
                 (matita_arithmetics_chebyshev_chebyshev_psi.prim
                    matita_arithmetics_nat.O)))
           n Hn)
        (matita_arithmetics_nat.le_to_or_lt_eq matita_arithmetics_nat.O n
           (matita_arithmetics_nat.le_O_n n)).

def Psi' :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.nat))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_primes.primeb p)
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        matita_arithmetics_nat.times
        (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_bigops.bigop (matita_arithmetics_log.log p n)
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_bool.true)
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => p)).

def Psidef :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi' n)
              (matita_arithmetics_bigops.bigop (matita_arithmetics_nat.S n)
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_primes.primeb p)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_bigops.bigop
                    (matita_arithmetics_log.log p n)
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.true)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                    matita_arithmetics_nat.times
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     p)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chebyshev_chebyshev_psi.Psi' n).

def eq_Psi_Psi' :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi n)
              (matita_arithmetics_chebyshev_chebyshev_psi.Psi' n)))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_bigops.same_bigop (matita_arithmetics_nat.S n)
        matita_arithmetics_primes.primeb matita_arithmetics_primes.primeb
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        matita_arithmetics_nat.times
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_exp.exp __ (matita_arithmetics_log.log __ n))
        (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_bigops.bigop (matita_arithmetics_log.log __ n)
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_bool.true)
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.times
           (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => __))
        (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         auto :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i
                (matita_arithmetics_nat.S n)) =>
         matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_basics_bool.bool)
           (matita_arithmetics_primes.primeb i))
        (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         lti :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i
                (matita_arithmetics_nat.S n)) =>
         primebi :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_basics_bool.bool)
                (matita_arithmetics_primes.primeb i) matita_basics_bool.true) =>
         matita_basics_logic.trans_eq
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_exp.exp i (matita_arithmetics_log.log i n))
           (matita_arithmetics_exp.exp i
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_log.log i n)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.true)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O matita_arithmetics_nat.plus
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_bigops.bigop (matita_arithmetics_log.log i n)
              (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_bool.true)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.times
              (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => i))
           (matita_basics_logic.eq_f
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_exp.exp i) (matita_arithmetics_log.log i n)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_log.log i n)
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.true)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 matita_arithmetics_nat.O matita_arithmetics_nat.plus
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_basics_logic.sym_eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_log.log i n)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.true)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 (matita_arithmetics_log.log i n)
                 (matita_arithmetics_sigma_pi.sigma_const
                    (matita_arithmetics_log.log i n))))
           (matita_basics_logic.sym_eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_bigops.bigop
                 (matita_arithmetics_log.log i n)
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.true)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)
                 matita_arithmetics_nat.times
                 (i0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  i))
              (matita_arithmetics_exp.exp i
                 (matita_arithmetics_bigops.bigop
                    (matita_arithmetics_log.log i n)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.true)
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    matita_arithmetics_nat.O matita_arithmetics_nat.plus
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_sigma_pi.exp_sigma
                 (matita_arithmetics_log.log i n) i
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.true)))).


