(; This file was automatically generated from Matita. ;)

Vector :
  cic.Term (cic.type (cic.s cic.z))
    (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
       (cic.univ (cic.type cic.z))
       (_A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
          matita_arithmetics_nat.nat
          (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.univ (cic.type cic.z)))).

mk_Vector :
  cic.Term (cic.type (cic.s cic.z))
    (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
       (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) (cic.type cic.z) matita_arithmetics_nat.nat
          (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) (cic.type cic.z)
             (matita_basics_lists_list.list
                (cic.lift (cic.type cic.z) (cic.type cic.z) A))
             (vec :
                cic.Term (cic.type cic.z)
                  (matita_basics_lists_list.list
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
              cic.prod cic.prop (cic.type cic.z)
                (matita_basics_logic.eq
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) vec)
                   n)
                (_len :
                   cic.Term cic.prop
                     (matita_basics_logic.eq
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) vec)
                        n) =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A) n))))).

def match_Vector_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ cic.prop))
                 (return_type :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ cic.prop)) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop cic.prop
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) cic.prop
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Prop _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (return_type :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type5 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (return_type :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type4 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type3 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type2 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s cic.z))
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type (cic.s cic.z))
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type1 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def match_Vector_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (return_type :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type cic.z)
                          (matita_basics_logic.eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           return_type
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (case_mk_Vector :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (matita_basics_lists_list.list
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type cic.z)
                               (matita_basics_logic.eq
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    (matita_basics_logic.eq
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                return_type
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector_Type0 _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def filter_Vector_Prop :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ cic.prop))
                 (return_type :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ cic.prop)) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z) cic.prop
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Prop (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (return_type :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type5 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (return_type :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type4 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type3 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type2 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (return_type :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type1 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def filter_Vector_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    (matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (z :
                       cic.Term (cic.type cic.z)
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (return_type :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         (matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (z :
                            cic.Term (cic.type cic.z)
                              (matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z))
                    (return :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                            (z :
                               cic.Term (cic.type cic.z)
                                 (matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n) =>
                             return_type z)) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (z :
                          cic.Term (cic.type cic.z)
                            (matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        return_type z)))))).

[ A, n, vec, _len, return_type, return ]
  filter_Vector_Type0 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def match_Vector :
      return_sort : cic.Sort ->
      _A : cic.Univ (cic.type cic.z) ->
      _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      return_type :
        (z :
           cic.Term (cic.type cic.z)
             (matita_basics_vectors.Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) ->
         cic.Univ return_sort) ->
      case_mk_Vector :
        (vec :
           cic.Term (cic.type cic.z)
             (matita_basics_lists_list.list
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) ->
         _len :
           cic.Term cic.prop
             (matita_basics_logic.eq
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_basics_lists_list.length
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
                _n) ->
         cic.Term return_sort
           (return_type
              (matita_basics_vectors.mk_Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n vec _len))) ->
      z :
        cic.Term (cic.type cic.z)
          (matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) ->
      cic.Term return_sort (return_type z).

[  ] match_Vector cic.prop --> matita_basics_vectors.match_Vector_Prop.

[  ]
  match_Vector (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_basics_vectors.match_Vector_Type5.

[  ] match_Vector (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_basics_vectors.match_Vector_Type4.

[  ] match_Vector (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_basics_vectors.match_Vector_Type3.

[  ] match_Vector (cic.type (cic.s (cic.s cic.z))) -->
  matita_basics_vectors.match_Vector_Type2.

[  ] match_Vector (cic.type (cic.s cic.z)) -->
  matita_basics_vectors.match_Vector_Type1.

[  ] match_Vector (cic.type cic.z) -->
  matita_basics_vectors.match_Vector_Type0.

[ return_sort, _A, _n, return_type, case_mk_Vector, vec, _len ]
  match_Vector return_sort _A _n return_type case_mk_Vector
    (matita_basics_vectors.mk_Vector _A _n vec _len) -->
  case_mk_Vector vec _len.

def filter_Vector :
      return_sort : cic.Sort ->
      _A : cic.Univ (cic.type cic.z) ->
      _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat ->
      return_type :
        (z :
           cic.Term (cic.type cic.z)
             (matita_basics_vectors.Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) ->
         cic.Univ return_sort) ->
      return :
        (z :
           cic.Term (cic.type cic.z)
             (matita_basics_vectors.Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) ->
         cic.Term return_sort (return_type z)) ->
      z :
        cic.Term (cic.type cic.z)
          (matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) ->
      cic.Term return_sort (return_type z).

[  ] filter_Vector cic.prop --> matita_basics_vectors.filter_Vector_Prop.

[  ]
  filter_Vector (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) -->
  matita_basics_vectors.filter_Vector_Type5.

[  ] filter_Vector (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) -->
  matita_basics_vectors.filter_Vector_Type4.

[  ] filter_Vector (cic.type (cic.s (cic.s (cic.s cic.z)))) -->
  matita_basics_vectors.filter_Vector_Type3.

[  ] filter_Vector (cic.type (cic.s (cic.s cic.z))) -->
  matita_basics_vectors.filter_Vector_Type2.

[  ] filter_Vector (cic.type (cic.s cic.z)) -->
  matita_basics_vectors.filter_Vector_Type1.

[  ] filter_Vector (cic.type cic.z) -->
  matita_basics_vectors.filter_Vector_Type0.

[ return_sort1, A, n, vec, _len, return_type, return ]
  filter_Vector return_sort1 (A) (n) return_type return
    (matita_basics_vectors.mk_Vector A n vec _len) -->
  return
    (matita_basics_vectors.mk_Vector
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vec _len).

def Vector_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1493 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ cic.prop))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1493 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ cic.prop)) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop cic.prop
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1493 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1493)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1493 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1493)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) cic.prop
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1493 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1493 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1493) x_1493)))))).

def Vector_ind_body :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z)
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1493 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ cic.prop))
                 (Q_ :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1493 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ cic.prop)) =>
                  cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop cic.prop
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1493 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1493)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1493 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1493)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) cic.prop
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1493 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1493 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1493) x_1493)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1493 ]
  Vector_ind _A _n Q_ _H_mk_Vector x_1493 -->
  matita_basics_vectors.filter_Vector cic.prop _A _n
    (x_1493 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1493 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1493) x_1493)
    (matita_basics_vectors.Vector_ind_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1493.

[ _A, _n, Q_, _H_mk_Vector, x_1493 ]
  Vector_ind_body _A _n Q_ _H_mk_Vector x_1493 -->
  matita_basics_vectors.match_Vector cic.prop
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1493 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1493)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1493.

def Vector_rect_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1495 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (Q_ :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1495 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1495 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1495)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1495 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1495)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1495 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1495 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1495) x_1495)))))).

def Vector_rect_Type4_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1495 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (Q_ :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1495 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1495 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1495)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1495 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1495)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1495 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1495 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1495) x_1495)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1495 ]
  Vector_rect_Type4 _A _n Q_ _H_mk_Vector x_1495 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _A _n
    (x_1495 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1495 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1495) x_1495)
    (matita_basics_vectors.Vector_rect_Type4_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1495.

[ _A, _n, Q_, _H_mk_Vector, x_1495 ]
  Vector_rect_Type4_body _A _n Q_ _H_mk_Vector x_1495 -->
  matita_basics_vectors.match_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1495 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1495)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1495.

def Vector_rect_Type5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1497 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (Q_ :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1497 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1497 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1497)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1497 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1497)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1497 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1497 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1497) x_1497)))))).

def Vector_rect_Type5_body :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1497 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (Q_ :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1497 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1497 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1497)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1497 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1497)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1497 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1497 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1497) x_1497)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1497 ]
  Vector_rect_Type5 _A _n Q_ _H_mk_Vector x_1497 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _A _n
    (x_1497 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1497 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1497) x_1497)
    (matita_basics_vectors.Vector_rect_Type5_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1497.

[ _A, _n, Q_, _H_mk_Vector, x_1497 ]
  Vector_rect_Type5_body _A _n Q_ _H_mk_Vector x_1497 -->
  matita_basics_vectors.match_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1497 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1497)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1497.

def Vector_rect_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1499 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1499 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1499 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1499)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1499 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1499)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1499 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1499 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1499) x_1499)))))).

def Vector_rect_Type3_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1499 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1499 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1499 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1499)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1499 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1499)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1499 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1499 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1499) x_1499)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1499 ]
  Vector_rect_Type3 _A _n Q_ _H_mk_Vector x_1499 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _A _n
    (x_1499 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1499 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1499) x_1499)
    (matita_basics_vectors.Vector_rect_Type3_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1499.

[ _A, _n, Q_, _H_mk_Vector, x_1499 ]
  Vector_rect_Type3_body _A _n Q_ _H_mk_Vector x_1499 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s (cic.s (cic.s cic.z))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1499 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1499)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1499.

def Vector_rect_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1501 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1501 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1501 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1501)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1501 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1501)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1501 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1501 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1501) x_1501)))))).

def Vector_rect_Type2_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1501 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1501 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1501 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1501)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1501 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1501)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1501 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1501 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1501) x_1501)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1501 ]
  Vector_rect_Type2 _A _n Q_ _H_mk_Vector x_1501 -->
  matita_basics_vectors.filter_Vector (cic.type (cic.s (cic.s cic.z))) _A _n
    (x_1501 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1501 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1501) x_1501)
    (matita_basics_vectors.Vector_rect_Type2_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1501.

[ _A, _n, Q_, _H_mk_Vector, x_1501 ]
  Vector_rect_Type2_body _A _n Q_ _H_mk_Vector x_1501 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s (cic.s cic.z)))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1501 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1501)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1501.

def Vector_rect_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1503 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1503 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1503 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1503)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1503 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1503)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1503 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1503 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1503) x_1503)))))).

def Vector_rect_Type1_body :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1503 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1503 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1503 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1503)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1503 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1503)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1503 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1503 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1503) x_1503)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1503 ]
  Vector_rect_Type1 _A _n Q_ _H_mk_Vector x_1503 -->
  matita_basics_vectors.filter_Vector (cic.type (cic.s cic.z)) _A _n
    (x_1503 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1503 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1503) x_1503)
    (matita_basics_vectors.Vector_rect_Type1_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1503.

[ _A, _n, Q_, _H_mk_Vector, x_1503 ]
  Vector_rect_Type1_body _A _n Q_ _H_mk_Vector x_1503 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s cic.z))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1503 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1503)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1503.

def Vector_rect_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1505 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (Q_ :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1505 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type cic.z)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1505 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1505)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type cic.z)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1505 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1505)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1505 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1505 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1505) x_1505)))))).

def Vector_rect_Type0_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1505 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (Q_ :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1505 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type cic.z)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1505 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1505)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type cic.z)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1505 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1505)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1505 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1505 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1505) x_1505)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1505 ]
  Vector_rect_Type0 _A _n Q_ _H_mk_Vector x_1505 -->
  matita_basics_vectors.filter_Vector (cic.type cic.z) _A _n
    (x_1505 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1505 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1505) x_1505)
    (matita_basics_vectors.Vector_rect_Type0_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1505.

[ _A, _n, Q_, _H_mk_Vector, x_1505 ]
  Vector_rect_Type0_body _A _n Q_ _H_mk_Vector x_1505 -->
  matita_basics_vectors.match_Vector (cic.type cic.z)
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1505 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1505)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1505.

def Vector_rect_CProp4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1507 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (Q_ :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1507 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1507 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1507)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1507 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1507)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1507 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1507 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1507) x_1507)))))).

def Vector_rect_CProp4_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1507 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (Q_ :
                    cic.Term
                      (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1507 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1507 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1507)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1507 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1507)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1507 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1507 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1507) x_1507)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1507 ]
  Vector_rect_CProp4 _A _n Q_ _H_mk_Vector x_1507 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))) _A _n
    (x_1507 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1507 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1507) x_1507)
    (matita_basics_vectors.Vector_rect_CProp4_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1507.

[ _A, _n, Q_, _H_mk_Vector, x_1507 ]
  Vector_rect_CProp4_body _A _n Q_ _H_mk_Vector x_1507 -->
  matita_basics_vectors.match_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1507 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1507)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1507.

def Vector_rect_CProp5 :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1509 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (Q_ :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1509 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1509 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1509)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1509 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1509)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1509 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1509 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1509) x_1509)))))).

def Vector_rect_CProp5_body :
      cic.Term
        (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod
                 (cic.type
                    (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 (cic.prod (cic.type cic.z)
                    (cic.type
                       (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1509 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))))
                 (Q_ :
                    cic.Term
                      (cic.type
                         (cic.s (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                      (cic.prod (cic.type cic.z)
                         (cic.type
                            (cic.s
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1509 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))))) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type
                             (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1509 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1509)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type
                                  (cic.s
                                     (cic.s (cic.s (cic.s (cic.s cic.z))))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1509 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1509)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1509 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1509 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1509) x_1509)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1509 ]
  Vector_rect_CProp5 _A _n Q_ _H_mk_Vector x_1509 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z)))))) _A _n
    (x_1509 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1509 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1509) x_1509)
    (matita_basics_vectors.Vector_rect_CProp5_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1509.

[ _A, _n, Q_, _H_mk_Vector, x_1509 ]
  Vector_rect_CProp5_body _A _n Q_ _H_mk_Vector x_1509 -->
  matita_basics_vectors.match_Vector
    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1509 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1509)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1509.

def Vector_rect_CProp3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1511 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1511 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1511 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1511)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1511 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1511)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1511 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1511 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1511) x_1511)))))).

def Vector_rect_CProp3_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1511 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1511 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1511 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1511)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1511 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1511)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1511 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1511 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1511) x_1511)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1511 ]
  Vector_rect_CProp3 _A _n Q_ _H_mk_Vector x_1511 -->
  matita_basics_vectors.filter_Vector
    (cic.type (cic.s (cic.s (cic.s cic.z)))) _A _n
    (x_1511 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1511 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1511) x_1511)
    (matita_basics_vectors.Vector_rect_CProp3_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1511.

[ _A, _n, Q_, _H_mk_Vector, x_1511 ]
  Vector_rect_CProp3_body _A _n Q_ _H_mk_Vector x_1511 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s (cic.s (cic.s cic.z))))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1511 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1511)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1511.

def Vector_rect_CProp2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1513 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1513 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1513 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1513)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1513 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1513)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1513 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1513 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1513) x_1513)))))).

def Vector_rect_CProp2_body :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.type (cic.s (cic.s cic.z)))
                 (cic.prod (cic.type cic.z)
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1513 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s (cic.s cic.z)))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s (cic.s cic.z))))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1513 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1513 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1513)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop
                               (cic.type (cic.s (cic.s cic.z)))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1513 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1513)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1513 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1513 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1513) x_1513)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1513 ]
  Vector_rect_CProp2 _A _n Q_ _H_mk_Vector x_1513 -->
  matita_basics_vectors.filter_Vector (cic.type (cic.s (cic.s cic.z))) _A _n
    (x_1513 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1513 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1513) x_1513)
    (matita_basics_vectors.Vector_rect_CProp2_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1513.

[ _A, _n, Q_, _H_mk_Vector, x_1513 ]
  Vector_rect_CProp2_body _A _n Q_ _H_mk_Vector x_1513 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s (cic.s cic.z)))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1513 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1513)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1513.

def Vector_rect_CProp1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1515 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1515 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1515 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1515)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1515 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1515)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1515 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1515 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1515) x_1515)))))).

def Vector_rect_CProp1_body :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s cic.z))
                 (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1515 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type (cic.s cic.z))))
                 (Q_ :
                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                      (cic.prod (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1515 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type (cic.s cic.z)))) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1515 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1515)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1515 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1515)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1515 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1515 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1515) x_1515)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1515 ]
  Vector_rect_CProp1 _A _n Q_ _H_mk_Vector x_1515 -->
  matita_basics_vectors.filter_Vector (cic.type (cic.s cic.z)) _A _n
    (x_1515 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1515 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1515) x_1515)
    (matita_basics_vectors.Vector_rect_CProp1_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1515.

[ _A, _n, Q_, _H_mk_Vector, x_1515 ]
  Vector_rect_CProp1_body _A _n Q_ _H_mk_Vector x_1515 -->
  matita_basics_vectors.match_Vector (cic.type (cic.s cic.z))
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1515 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1515)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1515.

def Vector_rect_CProp0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1517 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (Q_ :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1517 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type cic.z)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1517 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1517)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type cic.z)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1517 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1517)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1517 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1517 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1517) x_1517)))))).

def Vector_rect_CProp0_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (_A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    ((_A1 : cic.Univ (cic.type cic.z) =>
                      _n1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (_x_1517 :
                       cic.Term (cic.type cic.z)
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n) =>
                     cic.univ (cic.type cic.z)))
                 (Q_ :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         ((_A1 : cic.Univ (cic.type cic.z) =>
                           _n1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                             _n1)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                         (_x_1517 :
                            cic.Term (cic.type cic.z)
                              ((_A1 : cic.Univ (cic.type cic.z) =>
                                _n1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A1)
                                  _n1)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (vec :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
                        cic.prod cic.prop (cic.type cic.z)
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                vec)
                             _n)
                          (_len :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n) =>
                           (_x_1517 :
                              cic.Term (cic.type cic.z)
                                ((_A1 : cic.Univ (cic.type cic.z) =>
                                  _n1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A1)
                                    _n1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n) =>
                            Q_ _x_1517)
                             (matita_basics_vectors.mk_Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n vec _len))))
                    (_H_mk_Vector :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (vec :
                               cic.Term (cic.type cic.z)
                                 ((_A1 : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A1))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)) =>
                             cic.prod cic.prop (cic.type cic.z)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     vec)
                                  _n)
                               (_len :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          vec)
                                       _n) =>
                                (_x_1517 :
                                   cic.Term (cic.type cic.z)
                                     ((_A1 : cic.Univ (cic.type cic.z) =>
                                       _n1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A1)
                                         _n1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A)
                                        _n) =>
                                 Q_ _x_1517)
                                  (matita_basics_vectors.mk_Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n vec _len)))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A1 : cic.Univ (cic.type cic.z) =>
                         _n1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A1)
                           _n1)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (x_1517 :
                          cic.Term (cic.type cic.z)
                            ((_A1 : cic.Univ (cic.type cic.z) =>
                              _n1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A1)
                                _n1)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n) =>
                        (_x_1517 :
                           cic.Term (cic.type cic.z)
                             ((_A1 : cic.Univ (cic.type cic.z) =>
                               _n1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A1)
                                 _n1)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n) =>
                         Q_ _x_1517) x_1517)))))).

[ _A, _n, Q_, _H_mk_Vector, x_1517 ]
  Vector_rect_CProp0 _A _n Q_ _H_mk_Vector x_1517 -->
  matita_basics_vectors.filter_Vector (cic.type cic.z) _A _n
    (x_1517 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     (_x_1517 :
        cic.Term (cic.type cic.z)
          ((_A1 : cic.Univ (cic.type cic.z) =>
            _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
      Q_ _x_1517) x_1517)
    (matita_basics_vectors.Vector_rect_CProp0_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n Q_ _H_mk_Vector)
    x_1517.

[ _A, _n, Q_, _H_mk_Vector, x_1517 ]
  Vector_rect_CProp0_body _A _n Q_ _H_mk_Vector x_1517 -->
  matita_basics_vectors.match_Vector (cic.type cic.z)
    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n
    (_x_1517 :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           _n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1) _n1)
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n) =>
     Q_ _x_1517)
    (vec :
       cic.Term (cic.type cic.z)
         ((_A1 : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A1))
            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)) =>
     _len :
       cic.Term cic.prop
         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) vec)
            _n) =>
     _H_mk_Vector vec _len)
    x_1517.

def vec :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (_xxx :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  (_A : cic.Univ (cic.type cic.z) =>
                   matita_basics_lists_list.list
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))))).

def vec_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (_xxx :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  (_A : cic.Univ (cic.type cic.z) =>
                   matita_basics_lists_list.list
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))))).

[ A, n, _xxx ] vec A n _xxx -->
  matita_basics_vectors.filter_Vector (cic.type cic.z) A n
    (_xxx :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
     (_A : cic.Univ (cic.type cic.z) =>
      matita_basics_lists_list.list
        (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
       (cic.lift (cic.type cic.z) (cic.type cic.z) A))
    (matita_basics_vectors.vec_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
    _xxx.

[ A, n, _xxx ] vec_body A n _xxx -->
  matita_basics_vectors.match_Vector (cic.type cic.z)
    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
    (xxx0 :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
     (_A : cic.Univ (cic.type cic.z) =>
      matita_basics_lists_list.list
        (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
       (cic.lift (cic.type cic.z) (cic.type cic.z) A))
    (yyy :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
            (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
     __ :
       cic.Term cic.prop
         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
           __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A1)
             _x __)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) yyy)
            n) =>
     yyy)
    _xxx.

def len :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (xxx :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          xxx))
                    n)))).

def len_body :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (xxx :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          xxx))
                    n)))).

[ A, n, xxx ] len A n xxx -->
  matita_basics_vectors.filter_Vector cic.prop A n
    (xxx :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
      matita_basics_logic.eq
        (cic.lift (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) A1)
        _x __)
       (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
          matita_arithmetics_nat.nat)
       (matita_basics_lists_list.length
          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
          (matita_basics_vectors.vec
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n xxx))
       n)
    (matita_basics_vectors.len_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
    xxx.

[ A, n, xxx ] len_body A n xxx -->
  matita_basics_vectors.match_Vector cic.prop
    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
    (xxx0 :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
      matita_basics_logic.eq
        (cic.lift (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z))) A1)
        _x __)
       (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
          matita_arithmetics_nat.nat)
       (matita_basics_lists_list.length
          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
          (matita_basics_vectors.vec
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n xxx0))
       n)
    (__ :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
            (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
     yyy :
       cic.Term cic.prop
         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
           _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
           __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
           matita_basics_logic.eq
             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                (cic.type (cic.s (cic.s cic.z))) A1)
             _x __1)
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               matita_arithmetics_nat.nat)
            (matita_basics_lists_list.length
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
            n) =>
     yyy)
    xxx.

def Vector_inv_ind :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type cic.z) cic.prop
                    (cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2798 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ cic.prop))
                    (P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2798 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ cic.prop)) =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2799 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2798 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2798)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2799 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2798 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2798)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2798 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2798) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2798 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ cic.prop)) =>
      H1 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2799 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2798 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2798)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term cic.prop
           (cic.prod cic.prop cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2799 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2798 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2798) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_ind
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1493 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1493)
                 (_z2799 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1493) =>
                  (_z2798 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2798) _x_1493)))
           H1 Hterm).

def Vector_inv_rect_Type4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2804 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (P :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2804 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2805 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2804 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2804)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2805 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2804 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2804)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2804 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2804) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2804 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2805 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2804 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2804)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.prod cic.prop
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2805 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2804 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2804) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_Type4
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1495 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.prod cic.prop
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1495)
                 (_z2805 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1495) =>
                  (_z2804 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2804) _x_1495)))
           H1 Hterm).

def Vector_inv_rect_Type3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2810 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                    (P :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2810 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ
                               (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2811 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2810 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2810)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2811 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2810 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2810)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2810 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2810) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2810 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2811 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2810 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2810)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2811 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2810 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2810) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_Type3
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1499 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1499)
                 (_z2811 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1499) =>
                  (_z2810 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2810) _x_1499)))
           H1 Hterm).

def Vector_inv_rect_Type2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2816 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s (cic.s cic.z)))))
                    (P :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2816 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2817 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2816 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2816)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2817 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2816 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2816)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2816 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2816) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2816 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2817 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2816 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2816)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s cic.z)))
           (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2817 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2816 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2816) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_Type2
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1501 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z)))
              (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1501)
                 (_z2817 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1501) =>
                  (_z2816 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2816) _x_1501)))
           H1 Hterm).

def Vector_inv_rect_Type1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2822 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s cic.z))))
                    (P :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2822 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type (cic.s cic.z)))) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2823 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2822 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2822)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2823 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2822 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2822)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2822 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2822) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2822 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s cic.z)))) =>
      H1 :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s cic.z))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s cic.z))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2823 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2822 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2822)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s cic.z))
           (cic.prod cic.prop (cic.type (cic.s cic.z))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2823 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2822 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2822) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_Type1
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1503 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.prod cic.prop (cic.type (cic.s cic.z))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1503)
                 (_z2823 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1503) =>
                  (_z2822 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2822) _x_1503)))
           H1 Hterm).

def Vector_inv_rect_Type0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2828 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type cic.z)))
                    (P :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2828 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type cic.z))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type cic.z)
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop (cic.type cic.z)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2829 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2828 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2828)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop (cic.type cic.z)
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2829 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2828 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2828)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2828 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2828) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2828 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type cic.z))) =>
      H1 :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type cic.z)
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type cic.z)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2829 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2828 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2828)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type cic.z)
           (cic.prod cic.prop (cic.type cic.z)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2829 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2828 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2828) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_Type0
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1505 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type cic.z) (cic.type cic.z)
              (cic.prod cic.prop (cic.type cic.z)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1505)
                 (_z2829 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1505) =>
                  (_z2828 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2828) _x_1505)))
           H1 Hterm).

def Vector_inv_rect_CProp4 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod
                    (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                    (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.prod (cic.type cic.z)
                       (cic.type
                          (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2834 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))))
                    (P :
                       cic.Term
                         (cic.type
                            (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                         (cic.prod (cic.type cic.z)
                            (cic.type
                               (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2834 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
                     cic.prod
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type
                                   (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2835 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2834 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2834)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            (cic.prod (cic.type cic.z)
                               (cic.type
                                  (cic.s (cic.s (cic.s (cic.s cic.z)))))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type
                                     (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type
                                        (cic.s (cic.s (cic.s (cic.s cic.z)))))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2835 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2834 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2834)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2834 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2834) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s (cic.s cic.z))))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2834 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s (cic.s cic.z))))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop
                (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop
                   (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2835 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2834 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2834)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.prod cic.prop
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2835 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2834 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2834) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_CProp4
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1507 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              (cic.prod cic.prop
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1507)
                 (_z2835 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1507) =>
                  (_z2834 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2834) _x_1507)))
           H1 Hterm).

def Vector_inv_rect_CProp3 :
      cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                    (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2840 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s (cic.s (cic.s cic.z))))))
                    (P :
                       cic.Term
                         (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2840 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ
                               (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
                     cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s (cic.s cic.z))))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2841 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2840 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2840)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s (cic.s cic.z))))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s (cic.s cic.z))))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s (cic.s cic.z))))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2841 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2840 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2840)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2840 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2840) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
          (cic.prod (cic.type cic.z)
             (cic.type (cic.s (cic.s (cic.s (cic.s cic.z)))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2840 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s (cic.s cic.z)))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2841 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2840 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2840)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2841 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2840 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2840) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_CProp3
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1511 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.prod cic.prop (cic.type (cic.s (cic.s (cic.s cic.z))))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1511)
                 (_z2841 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1511) =>
                  (_z2840 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2840) _x_1511)))
           H1 Hterm).

def Vector_inv_rect_CProp2 :
      cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
        (cic.prod (cic.type (cic.s cic.z))
           (cic.type (cic.s (cic.s (cic.s cic.z))))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z)
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z)
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s (cic.s cic.z))))
                    (cic.type (cic.s (cic.s cic.z)))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s (cic.s cic.z))))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2846 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s (cic.s cic.z)))))
                    (P :
                       cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s (cic.s cic.z))))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2846 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
                     cic.prod (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z)))
                       (cic.prod (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2847 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2846 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2846)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s (cic.s cic.z)))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop
                                  (cic.type (cic.s (cic.s cic.z)))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2847 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2846 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2846)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2846 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2846) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s (cic.s cic.z))))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s (cic.s cic.z))))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2846 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s (cic.s cic.z))))) =>
      H1 :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2847 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2846 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2846)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s (cic.s cic.z)))
           (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2847 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2846 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2846) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_CProp2
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1513 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s (cic.s cic.z)))
              (cic.type (cic.s (cic.s cic.z)))
              (cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1513)
                 (_z2847 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1513) =>
                  (_z2846 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2846) _x_1513)))
           H1 Hterm).

def Vector_inv_rect_CProp1 :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z))
                    (cic.prod (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2852 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type (cic.s cic.z))))
                    (P :
                       cic.Term (cic.type (cic.s (cic.s cic.z)))
                         (cic.prod (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2852 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type (cic.s cic.z)))) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop (cic.type (cic.s cic.z))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2853 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2852 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2852)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod (cic.type cic.z)
                               (cic.type (cic.s cic.z))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop (cic.type (cic.s cic.z))
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2853 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2852 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2852)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2852 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2852) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s (cic.s cic.z)))
          (cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2852 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type (cic.s cic.z)))) =>
      H1 :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type (cic.s cic.z))
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type (cic.s cic.z))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2853 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2852 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2852)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type (cic.s cic.z))
           (cic.prod cic.prop (cic.type (cic.s cic.z))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2853 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2852 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2852) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_CProp1
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1515 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.prod cic.prop (cic.type (cic.s cic.z))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1515)
                 (_z2853 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1515) =>
                  (_z2852 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2852) _x_1515)))
           H1 Hterm).

def Vector_inv_rect_CProp0 :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (x1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                 (Hterm :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                  cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
                       (_z2858 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2) =>
                        cic.univ (cic.type cic.z)))
                    (P :
                       cic.Term (cic.type (cic.s cic.z))
                         (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2)
                            (_z2858 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x1)
                                    x2) =>
                             cic.univ (cic.type cic.z))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       (cic.prod (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
                          (vec :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1)) =>
                           cic.prod cic.prop (cic.type cic.z)
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) x1)
                                   vec)
                                x2)
                             (_len :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2) =>
                              cic.prod cic.prop (cic.type cic.z)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2))
                                   Hterm
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len))
                                (_z2859 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len)) =>
                                 (_z2858 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) x1)
                                         x2) =>
                                  P _z2858)
                                   (matita_basics_vectors.mk_Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) x1)
                                      x2 vec _len)))))
                       (_H1 :
                          cic.Term (cic.type cic.z)
                            (cic.prod (cic.type cic.z) (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x1))
                               (vec :
                                  cic.Term (cic.type cic.z)
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) x1)) =>
                                cic.prod cic.prop (cic.type cic.z)
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) x1)
                                        vec)
                                     x2)
                                  (_len :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          (matita_basics_lists_list.length
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) x1)
                                             vec)
                                          x2) =>
                                   cic.prod cic.prop (cic.type cic.z)
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2))
                                        Hterm
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))
                                     (_z2859 :
                                        cic.Term cic.prop
                                          ((A :
                                              cic.Univ
                                                (cic.type
                                                   (cic.s (cic.s cic.z))) =>
                                            _x :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            __ :
                                              cic.Term
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A =>
                                            matita_basics_logic.eq
                                              (cic.lift
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A)
                                              _x __)
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  _n :
                                                    cic.Term (cic.type cic.z)
                                                      matita_arithmetics_nat.nat =>
                                                  matita_basics_vectors.Vector
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A)
                                                    _n)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) x1)
                                                   x2))
                                             Hterm
                                             (matita_basics_vectors.mk_Vector
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) x1)
                                                x2 vec _len)) =>
                                      (_z2858 :
                                         cic.Term (cic.type cic.z)
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             _n :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             matita_basics_vectors.Vector
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A)
                                               _n)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) x1)
                                              x2) =>
                                       P _z2858)
                                        (matita_basics_vectors.mk_Vector
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) x1)
                                           x2 vec _len))))) =>
                        (_z2858 :
                           cic.Term (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   x1)
                                x2) =>
                         P _z2858) Hterm))))))
      :=
      x1 : cic.Univ (cic.type cic.z) =>
      x2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hterm :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
      P :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2)
             (_z2858 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
              cic.univ (cic.type cic.z))) =>
      H1 :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) x1))
             (vec :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    matita_basics_lists_list.list
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x1)) =>
              cic.prod cic.prop (cic.type cic.z)
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) x1) vec)
                   x2)
                (_len :
                   cic.Term cic.prop
                     ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                       _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                       matita_basics_logic.eq
                         (cic.lift (cic.type (cic.s (cic.s cic.z)))
                            (cic.type (cic.s (cic.s cic.z))) A)
                         _x __)
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z)))
                           matita_arithmetics_nat.nat)
                        (matita_basics_lists_list.length
                           (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                           vec)
                        x2) =>
                 cic.prod cic.prop (cic.type cic.z)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))
                   (_z2859 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x1)
                                 x2))
                           Hterm
                           (matita_basics_vectors.mk_Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                              x2 vec _len)) =>
                    (_z2858 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2) =>
                     P _z2858)
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
                         vec _len))))) =>
      (Hcut :
         cic.Term (cic.type cic.z)
           (cic.prod cic.prop (cic.type cic.z)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                 Hterm Hterm)
              (_z2859 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                            x2))
                      Hterm Hterm) =>
               (_z2858 :
                  cic.Term (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                P _z2858) Hterm)) =>
       Hcut
         (matita_basics_logic.refl
            (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
            Hterm))
        (matita_basics_vectors.Vector_rect_CProp0
           (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2
           (_x_1517 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
            cic.lift (cic.type cic.z) (cic.type cic.z)
              (cic.prod cic.prop (cic.type cic.z)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2))
                    Hterm _x_1517)
                 (_z2859 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x1)
                               x2))
                         Hterm _x_1517) =>
                  (_z2858 :
                     cic.Term (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) x1) x2) =>
                   P _z2858) _x_1517)))
           H1 Hterm).

def Vector_discr :
      cic.Term (cic.type (cic.s (cic.s cic.z)))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s (cic.s cic.z)))
           (cic.univ (cic.type cic.z))
           (a1 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat
              (a2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2)
                 (x :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
                  cic.prod (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2)
                    (y :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) a1)
                            a2) =>
                     cic.prod cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   a1)
                                a2))
                          x y)
                       (_e :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    _n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_vectors.Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A)
                                      _n)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) a1)
                                     a2))
                               x y) =>
                        matita_basics_vectors.match_Vector
                          (cic.type (cic.s (cic.s (cic.s cic.z))))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
                          (__ :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     a1)
                                  a2) =>
                           cic.univ (cic.type (cic.s (cic.s cic.z))))
                          (t0 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     a1)) =>
                           t1 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) a1)
                                     t0)
                                  a2) =>
                           matita_basics_vectors.match_Vector
                             (cic.type (cic.s (cic.s (cic.s cic.z))))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) a1)
                             a2
                             (__ :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    _n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_vectors.Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A)
                                      _n)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) a1)
                                     a2) =>
                              cic.univ (cic.type (cic.s (cic.s cic.z))))
                             (u0 :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) a1)) =>
                              u1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) a1)
                                        u0)
                                     a2) =>
                              cic.prod (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s cic.z))
                                (cic.univ (cic.type (cic.s cic.z)))
                                (P : cic.Univ (cic.type (cic.s cic.z)) =>
                                 cic.prod (cic.type (cic.s cic.z))
                                   (cic.type (cic.s cic.z))
                                   (cic.prod cic.prop
                                      (cic.type (cic.s cic.z))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((_A :
                                                cic.Univ (cic.type cic.z) =>
                                              matita_basics_lists_list.list
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) _A))
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)))
                                         (matita_basics_logic.R0
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z)
                                               ((_A :
                                                   cic.Univ (cic.type cic.z) =>
                                                 matita_basics_lists_list.list
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) _A))
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) a1)))
                                            t0)
                                         u0)
                                      (e0 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 ((_A :
                                                     cic.Univ
                                                       (cic.type cic.z) =>
                                                   matita_basics_lists_list.list
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) _A))
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) a1)))
                                              (matita_basics_logic.R0
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 t0)
                                              u0) =>
                                       cic.prod cic.prop
                                         (cic.type (cic.s cic.z))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((x0 :
                                                   cic.Term (cic.type cic.z)
                                                     ((_A :
                                                         cic.Univ
                                                           (cic.type cic.z) =>
                                                       matita_basics_lists_list.list
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type cic.z)
                                                            _A))
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           a1)) =>
                                                 p0 :
                                                   cic.Term cic.prop
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((_A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    cic.z) =>
                                                             matita_basics_lists_list.list
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  _A))
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    cic.z)
                                                                 a1)))
                                                        (matita_basics_logic.R0
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              ((_A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    cic.z) =>
                                                                matita_basics_lists_list.list
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) _A))
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    cic.z) a1)))
                                                           t0)
                                                        x0) =>
                                                 (A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      matita_arithmetics_nat.nat)
                                                   (matita_basics_lists_list.length
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)
                                                      x0)
                                                   a2)
                                                  u0 e0))
                                            (matita_basics_logic.R1
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((_A :
                                                      cic.Univ
                                                        (cic.type cic.z) =>
                                                    matita_basics_lists_list.list
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) _A))
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) a1)))
                                               t0
                                               (x0 :
                                                  cic.Term (cic.type cic.z)
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)) =>
                                                p0 :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          ((_A :
                                                              cic.Univ
                                                                (cic.type
                                                                   cic.z) =>
                                                            matita_basics_lists_list.list
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    cic.z)
                                                                 _A))
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                a1)))
                                                       t0 x0) =>
                                                cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_basics_lists_list.length
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           a1)
                                                        x0)
                                                     a2))
                                               t1 u0 e0)
                                            u1)
                                         (_e1 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((x0 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          ((_A :
                                                              cic.Univ
                                                                (cic.type
                                                                   cic.z) =>
                                                            matita_basics_lists_list.list
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    cic.z)
                                                                 _A))
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                a1)) =>
                                                      p0 :
                                                        cic.Term cic.prop
                                                          ((A :
                                                              cic.Univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                            _x :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            __ :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            matita_basics_logic.eq
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A)
                                                              _x __)
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                ((_A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                  matita_basics_lists_list.list
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    cic.z) _A))
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) a1)))
                                                             (matita_basics_logic.R0
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   ((
                                                                    _A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                    matita_basics_lists_list.list
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) a1)))
                                                                t0)
                                                             x0) =>
                                                      (A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_basics_lists_list.length
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              a1)
                                                           x0)
                                                        a2)
                                                       u0 e0))
                                                 (matita_basics_logic.R1
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0
                                                    (x0 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         ((_A :
                                                             cic.Univ
                                                               (cic.type
                                                                  cic.z) =>
                                                           matita_basics_lists_list.list
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                _A))
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               a1)) =>
                                                     p0 :
                                                       cic.Term cic.prop
                                                         ((A :
                                                             cic.Univ
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                           _x :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           __ :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           matita_basics_logic.eq
                                                             (cic.lift
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A)
                                                             _x __)
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               ((_A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    cic.z) =>
                                                                 matita_basics_lists_list.list
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)))
                                                            t0 x0) =>
                                                     cic.lift cic.prop
                                                       (cic.type cic.z)
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             matita_arithmetics_nat.nat)
                                                          (matita_basics_lists_list.length
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                a1)
                                                             x0)
                                                          a2))
                                                    t1 u0 e0)
                                                 u1) =>
                                          P)))
                                   (_z83 :
                                      cic.Term (cic.type (cic.s cic.z))
                                        (cic.prod cic.prop
                                           (cic.type (cic.s cic.z))
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 ((_A :
                                                     cic.Univ
                                                       (cic.type cic.z) =>
                                                   matita_basics_lists_list.list
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) _A))
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) a1)))
                                              (matita_basics_logic.R0
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z)
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 t0)
                                              u0)
                                           (e0 :
                                              cic.Term cic.prop
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      ((_A :
                                                          cic.Univ
                                                            (cic.type cic.z) =>
                                                        matita_basics_lists_list.list
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             _A))
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type cic.z)
                                                            a1)))
                                                   (matita_basics_logic.R0
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z)
                                                         ((_A :
                                                             cic.Univ
                                                               (cic.type
                                                                  cic.z) =>
                                                           matita_basics_lists_list.list
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                _A))
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               a1)))
                                                      t0)
                                                   u0) =>
                                            cic.prod cic.prop
                                              (cic.type (cic.s cic.z))
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift cic.prop
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((x0 :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          ((_A :
                                                              cic.Univ
                                                                (cic.type
                                                                   cic.z) =>
                                                            matita_basics_lists_list.list
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    cic.z)
                                                                 _A))
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                a1)) =>
                                                      p0 :
                                                        cic.Term cic.prop
                                                          ((A :
                                                              cic.Univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                            _x :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            __ :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            matita_basics_logic.eq
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A)
                                                              _x __)
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                ((_A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                  matita_basics_lists_list.list
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    cic.z) _A))
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) a1)))
                                                             (matita_basics_logic.R0
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   ((
                                                                    _A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                    matita_basics_lists_list.list
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) a1)))
                                                                t0)
                                                             x0) =>
                                                      (A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_basics_lists_list.length
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              a1)
                                                           x0)
                                                        a2)
                                                       u0 e0))
                                                 (matita_basics_logic.R1
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0
                                                    (x0 :
                                                       cic.Term
                                                         (cic.type cic.z)
                                                         ((_A :
                                                             cic.Univ
                                                               (cic.type
                                                                  cic.z) =>
                                                           matita_basics_lists_list.list
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                _A))
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               a1)) =>
                                                     p0 :
                                                       cic.Term cic.prop
                                                         ((A :
                                                             cic.Univ
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                           _x :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           __ :
                                                             cic.Term
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A =>
                                                           matita_basics_logic.eq
                                                             (cic.lift
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A)
                                                             _x __)
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               ((_A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    cic.z) =>
                                                                 matita_basics_lists_list.list
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)))
                                                            t0 x0) =>
                                                     cic.lift cic.prop
                                                       (cic.type cic.z)
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             matita_arithmetics_nat.nat)
                                                          (matita_basics_lists_list.length
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                a1)
                                                             x0)
                                                          a2))
                                                    t1 u0 e0)
                                                 u1)
                                              (_e1 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A)
                                                       _x __)
                                                      (cic.lift cic.prop
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         ((x0 :
                                                             cic.Term
                                                               (cic.type
                                                                  cic.z)
                                                               ((_A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    cic.z) =>
                                                                 matita_basics_lists_list.list
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)) =>
                                                           p0 :
                                                             cic.Term
                                                               cic.prop
                                                               ((A :
                                                                   cic.Univ
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                                 _x :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 __ :
                                                                   cic.Term
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                 matita_basics_logic.eq
                                                                   (cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A)
                                                                   _x __)
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   (_A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                    matita_basics_lists_list.list
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)))
                                                                  (matita_basics_logic.R0
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   (_A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                    matita_basics_lists_list.list
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    cic.z) _A))
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)))
                                                                    t0)
                                                                  x0) =>
                                                           (A :
                                                              cic.Univ
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                            _x :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            __ :
                                                              cic.Term
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                A =>
                                                            matita_basics_logic.eq
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A)
                                                              _x __)
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   (cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                matita_arithmetics_nat.nat)
                                                             (matita_basics_lists_list.length
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   a1)
                                                                x0)
                                                             a2)
                                                            u0 e0))
                                                      (matita_basics_logic.R1
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            ((_A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    cic.z) =>
                                                              matita_basics_lists_list.list
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   _A))
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  a1)))
                                                         t0
                                                         (x0 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              ((_A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    cic.z) =>
                                                                matita_basics_lists_list.list
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) _A))
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    cic.z) a1)) =>
                                                          p0 :
                                                            cic.Term cic.prop
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (_A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    cic.z) =>
                                                                   matita_basics_lists_list.list
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) _A))
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    cic.z) a1)))
                                                                 t0 x0) =>
                                                          cic.lift cic.prop
                                                            (cic.type cic.z)
                                                            ((A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z))) =>
                                                              _x :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              __ :
                                                                cic.Term
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A =>
                                                              matita_basics_logic.eq
                                                                (cic.lift
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   (cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                   A)
                                                                _x __)
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  matita_arithmetics_nat.nat)
                                                               (matita_basics_lists_list.length
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    cic.z)
                                                                    (
                                                                   cic.type
                                                                    cic.z) a1)
                                                                  x0)
                                                               a2))
                                                         t1 u0 e0)
                                                      u1) =>
                                               P))) =>
                                    P)))
                             y)
                          x))))))
      :=
      a1 : cic.Univ (cic.type cic.z) =>
      a2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
      y :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
      Deq :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2))
             x y) =>
      matita_basics_logic.eq_rect_Type2
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           ((_A : cic.Univ (cic.type cic.z) =>
             _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_basics_vectors.Vector
               (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
              (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2))
        x
        (x_13 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
         _x_14 :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2))
                x x_13) =>
         cic.lift (cic.type (cic.s (cic.s cic.z)))
           (cic.type (cic.s (cic.s cic.z)))
           (matita_basics_vectors.match_Vector
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
              (__ :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
               cic.univ (cic.type (cic.s (cic.s cic.z))))
              (t0 :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
               t1 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1) t0)
                      a2) =>
               matita_basics_vectors.match_Vector
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
                 (__ :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
                  cic.univ (cic.type (cic.s (cic.s cic.z))))
                 (u0 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
                  u1 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) a1)
                            u0)
                         a2) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z))
                    (cic.univ (cic.type (cic.s cic.z)))
                    (P : cic.Univ (cic.type (cic.s cic.z)) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                ((_A : cic.Univ (cic.type cic.z) =>
                                  matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A))
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) a1)))
                             (matita_basics_logic.R0
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   ((_A : cic.Univ (cic.type cic.z) =>
                                     matita_basics_lists_list.list
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) _A))
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) a1)))
                                t0)
                             u0)
                          (e0 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A))
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) a1)))
                                  (matita_basics_logic.R0
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)))
                                     t0)
                                  u0) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((x0 :
                                       cic.Term (cic.type cic.z)
                                         ((_A : cic.Univ (cic.type cic.z) =>
                                           matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) _A))
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) a1)) =>
                                     p0 :
                                       cic.Term cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((_A :
                                                   cic.Univ (cic.type cic.z) =>
                                                 matita_basics_lists_list.list
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) _A))
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) a1)))
                                            (matita_basics_logic.R0
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z)
                                                  ((_A :
                                                      cic.Univ
                                                        (cic.type cic.z) =>
                                                    matita_basics_lists_list.list
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) _A))
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) a1)))
                                               t0)
                                            x0) =>
                                     (A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) a1)
                                          x0)
                                       a2)
                                      u0 e0))
                                (matita_basics_logic.R1
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A))
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) a1)))
                                   t0
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)) =>
                                    p0 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)))
                                           t0 x0) =>
                                    cic.lift cic.prop (cic.type cic.z)
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_basics_lists_list.length
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) a1)
                                            x0)
                                         a2))
                                   t1 u0 e0)
                                u1)
                             (_e1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        ((x0 :
                                            cic.Term (cic.type cic.z)
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 (matita_basics_logic.R0
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)
                                               x0)
                                            a2)
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A))
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) a1)))
                                        t0
                                        (x0 :
                                           cic.Term (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.length
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)
                                                 x0)
                                              a2))
                                        t1 u0 e0)
                                     u1) =>
                              P)))
                       (_z83 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A))
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) a1)))
                                  (matita_basics_logic.R0
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)))
                                     t0)
                                  u0)
                               (e0 :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          ((_A : cic.Univ (cic.type cic.z) =>
                                            matita_basics_lists_list.list
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) _A))
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) a1)))
                                       (matita_basics_logic.R0
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)))
                                          t0)
                                       u0) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        ((x0 :
                                            cic.Term (cic.type cic.z)
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 (matita_basics_logic.R0
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)
                                               x0)
                                            a2)
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A))
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) a1)))
                                        t0
                                        (x0 :
                                           cic.Term (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __ :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.length
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)
                                                 x0)
                                              a2))
                                        t1 u0 e0)
                                     u1)
                                  (_e1 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __)
                                          (cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             ((x0 :
                                                 cic.Term (cic.type cic.z)
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)) =>
                                               p0 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __ :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A)
                                                       _x __)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         ((_A :
                                                             cic.Univ
                                                               (cic.type
                                                                  cic.z) =>
                                                           matita_basics_lists_list.list
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                _A))
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               a1)))
                                                      (matita_basics_logic.R0
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type cic.z)
                                                            ((_A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    cic.z) =>
                                                              matita_basics_lists_list.list
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   _A))
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  a1)))
                                                         t0)
                                                      x0) =>
                                               (A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_basics_lists_list.length
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) a1)
                                                    x0)
                                                 a2)
                                                u0 e0))
                                          (matita_basics_logic.R1
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  matita_basics_lists_list.list
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A))
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) a1)))
                                             t0
                                             (x0 :
                                                cic.Term (cic.type cic.z)
                                                  ((_A :
                                                      cic.Univ
                                                        (cic.type cic.z) =>
                                                    matita_basics_lists_list.list
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) _A))
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) a1)) =>
                                              p0 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((_A :
                                                            cic.Univ
                                                              (cic.type cic.z) =>
                                                          matita_basics_lists_list.list
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               _A))
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              a1)))
                                                     t0 x0) =>
                                              cic.lift cic.prop
                                                (cic.type cic.z)
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __ :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      matita_arithmetics_nat.nat)
                                                   (matita_basics_lists_list.length
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)
                                                      x0)
                                                   a2))
                                             t1 u0 e0)
                                          u1) =>
                                   P))) =>
                        P)))
                 x_13)
              x))
        (matita_basics_vectors.match_Vector (cic.type (cic.s (cic.s cic.z)))
           (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
           (__ :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
            matita_basics_vectors.match_Vector
              (cic.type (cic.s (cic.s (cic.s cic.z))))
              (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
              (_0 :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
               cic.univ (cic.type (cic.s (cic.s cic.z))))
              (t0 :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
               t1 :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1) t0)
                      a2) =>
               matita_basics_vectors.match_Vector
                 (cic.type (cic.s (cic.s (cic.s cic.z))))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2
                 (_0 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a2) =>
                  cic.univ (cic.type (cic.s (cic.s cic.z))))
                 (u0 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        matita_basics_lists_list.list
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                         (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
                  u1 :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) a1)
                            u0)
                         a2) =>
                  cic.prod (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s cic.z))
                    (cic.univ (cic.type (cic.s cic.z)))
                    (P : cic.Univ (cic.type (cic.s cic.z)) =>
                     cic.prod (cic.type (cic.s cic.z))
                       (cic.type (cic.s cic.z))
                       (cic.prod cic.prop (cic.type (cic.s cic.z))
                          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                ((_A : cic.Univ (cic.type cic.z) =>
                                  matita_basics_lists_list.list
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A))
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) a1)))
                             (matita_basics_logic.R0
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   ((_A : cic.Univ (cic.type cic.z) =>
                                     matita_basics_lists_list.list
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) _A))
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) a1)))
                                t0)
                             u0)
                          (e0 :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A))
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) a1)))
                                  (matita_basics_logic.R0
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)))
                                     t0)
                                  u0) =>
                           cic.prod cic.prop (cic.type (cic.s cic.z))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __1)
                                (cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((x0 :
                                       cic.Term (cic.type cic.z)
                                         ((_A : cic.Univ (cic.type cic.z) =>
                                           matita_basics_lists_list.list
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) _A))
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) a1)) =>
                                     p0 :
                                       cic.Term cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((_A :
                                                   cic.Univ (cic.type cic.z) =>
                                                 matita_basics_lists_list.list
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) _A))
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) a1)))
                                            (matita_basics_logic.R0
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z)
                                                  ((_A :
                                                      cic.Univ
                                                        (cic.type cic.z) =>
                                                    matita_basics_lists_list.list
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) _A))
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) a1)))
                                               t0)
                                            x0) =>
                                     (A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __1 :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __1)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) a1)
                                          x0)
                                       a2)
                                      u0 e0))
                                (matita_basics_logic.R1
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A))
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) a1)))
                                   t0
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)) =>
                                    p0 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __1 :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __1)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)))
                                           t0 x0) =>
                                    cic.lift cic.prop (cic.type cic.z)
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_basics_lists_list.length
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) a1)
                                            x0)
                                         a2))
                                   t1 u0 e0)
                                u1)
                             (_e1 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __1)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        ((x0 :
                                            cic.Term (cic.type cic.z)
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __1)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 (matita_basics_logic.R0
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)
                                               x0)
                                            a2)
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A))
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) a1)))
                                        t0
                                        (x0 :
                                           cic.Term (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __1 :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __1)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __1 :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __1)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.length
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)
                                                 x0)
                                              a2))
                                        t1 u0 e0)
                                     u1) =>
                              P)))
                       (_z83 :
                          cic.Term (cic.type (cic.s cic.z))
                            (cic.prod cic.prop (cic.type (cic.s cic.z))
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       matita_basics_lists_list.list
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A))
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) a1)))
                                  (matita_basics_logic.R0
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z)
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          matita_basics_lists_list.list
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A))
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) a1)))
                                     t0)
                                  u0)
                               (e0 :
                                  cic.Term cic.prop
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __1 :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __1)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          ((_A : cic.Univ (cic.type cic.z) =>
                                            matita_basics_lists_list.list
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) _A))
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) a1)))
                                       (matita_basics_logic.R0
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)))
                                          t0)
                                       u0) =>
                                cic.prod cic.prop (cic.type (cic.s cic.z))
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __1)
                                     (cic.lift cic.prop
                                        (cic.type (cic.s (cic.s cic.z)))
                                        ((x0 :
                                            cic.Term (cic.type cic.z)
                                              ((_A :
                                                  cic.Univ (cic.type cic.z) =>
                                                matita_basics_lists_list.list
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) _A))
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)) =>
                                          p0 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __1)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    ((_A :
                                                        cic.Univ
                                                          (cic.type cic.z) =>
                                                      matita_basics_lists_list.list
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type cic.z)
                                                           _A))
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) a1)))
                                                 (matita_basics_logic.R0
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z)
                                                       ((_A :
                                                           cic.Univ
                                                             (cic.type cic.z) =>
                                                         matita_basics_lists_list.list
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              _A))
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type cic.z)
                                                             a1)))
                                                    t0)
                                                 x0) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_basics_lists_list.length
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)
                                               x0)
                                            a2)
                                           u0 e0))
                                     (matita_basics_logic.R1
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           ((_A :
                                               cic.Univ (cic.type cic.z) =>
                                             matita_basics_lists_list.list
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) _A))
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) a1)))
                                        t0
                                        (x0 :
                                           cic.Term (cic.type cic.z)
                                             ((_A :
                                                 cic.Univ (cic.type cic.z) =>
                                               matita_basics_lists_list.list
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) _A))
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) a1)) =>
                                         p0 :
                                           cic.Term cic.prop
                                             ((A :
                                                 cic.Univ
                                                   (cic.type
                                                      (cic.s (cic.s cic.z))) =>
                                               _x :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               __1 :
                                                 cic.Term
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A =>
                                               matita_basics_logic.eq
                                                 (cic.lift
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A)
                                                 _x __1)
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)))
                                                t0 x0) =>
                                         cic.lift cic.prop (cic.type cic.z)
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __1 :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __1)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_basics_lists_list.length
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type cic.z) a1)
                                                 x0)
                                              a2))
                                        t1 u0 e0)
                                     u1)
                                  (_e1 :
                                     cic.Term cic.prop
                                       ((A :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         __1 :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A)
                                           _x __1)
                                          (cic.lift cic.prop
                                             (cic.type (cic.s (cic.s cic.z)))
                                             ((x0 :
                                                 cic.Term (cic.type cic.z)
                                                   ((_A :
                                                       cic.Univ
                                                         (cic.type cic.z) =>
                                                     matita_basics_lists_list.list
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z) _A))
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)) =>
                                               p0 :
                                                 cic.Term cic.prop
                                                   ((A :
                                                       cic.Univ
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z))) =>
                                                     _x :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     __1 :
                                                       cic.Term
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A =>
                                                     matita_basics_logic.eq
                                                       (cic.lift
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A)
                                                       _x __1)
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         ((_A :
                                                             cic.Univ
                                                               (cic.type
                                                                  cic.z) =>
                                                           matita_basics_lists_list.list
                                                             (cic.lift
                                                                (cic.type
                                                                   cic.z)
                                                                (cic.type
                                                                   cic.z)
                                                                _A))
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               a1)))
                                                      (matita_basics_logic.R0
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type cic.z)
                                                            ((_A :
                                                                cic.Univ
                                                                  (cic.type
                                                                    cic.z) =>
                                                              matita_basics_lists_list.list
                                                                (cic.lift
                                                                   (cic.type
                                                                    cic.z)
                                                                   (cic.type
                                                                    cic.z)
                                                                   _A))
                                                               (cic.lift
                                                                  (cic.type
                                                                    cic.z)
                                                                  (cic.type
                                                                    cic.z)
                                                                  a1)))
                                                         t0)
                                                      x0) =>
                                               (A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __1 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __1)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_basics_lists_list.length
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) a1)
                                                    x0)
                                                 a2)
                                                u0 e0))
                                          (matita_basics_logic.R1
                                             (cic.lift (cic.type cic.z)
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                ((_A :
                                                    cic.Univ (cic.type cic.z) =>
                                                  matita_basics_lists_list.list
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) _A))
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type cic.z) a1)))
                                             t0
                                             (x0 :
                                                cic.Term (cic.type cic.z)
                                                  ((_A :
                                                      cic.Univ
                                                        (cic.type cic.z) =>
                                                    matita_basics_lists_list.list
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) _A))
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type cic.z) a1)) =>
                                              p0 :
                                                cic.Term cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __1)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((_A :
                                                            cic.Univ
                                                              (cic.type cic.z) =>
                                                          matita_basics_lists_list.list
                                                            (cic.lift
                                                               (cic.type
                                                                  cic.z)
                                                               (cic.type
                                                                  cic.z)
                                                               _A))
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type cic.z)
                                                              a1)))
                                                     t0 x0) =>
                                              cic.lift cic.prop
                                                (cic.type cic.z)
                                                ((A :
                                                    cic.Univ
                                                      (cic.type
                                                         (cic.s (cic.s cic.z))) =>
                                                  _x :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  __1 :
                                                    cic.Term
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A =>
                                                  matita_basics_logic.eq
                                                    (cic.lift
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A)
                                                    _x __1)
                                                   (cic.lift (cic.type cic.z)
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      matita_arithmetics_nat.nat)
                                                   (matita_basics_lists_list.length
                                                      (cic.lift
                                                         (cic.type cic.z)
                                                         (cic.type cic.z) a1)
                                                      x0)
                                                   a2))
                                             t1 u0 e0)
                                          u1) =>
                                   P))) =>
                        P)))
                 __)
              __)
           (a0 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
            a10 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a0)
                   a2) =>
            P : cic.Univ (cic.type (cic.s cic.z)) =>
            DH :
              cic.Term (cic.type (cic.s cic.z))
                (cic.prod cic.prop (cic.type (cic.s cic.z))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                      (matita_basics_logic.R0
                         (cic.lift (cic.type cic.z) (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                         a0)
                      a0)
                   (e0 :
                      cic.Term cic.prop
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A))
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    a1)))
                           (matita_basics_logic.R0
                              (cic.lift (cic.type cic.z) (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) a1)))
                              a0)
                           a0) =>
                    cic.prod cic.prop (cic.type (cic.s cic.z))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     a1)
                                  a0)
                               a2))
                         (matita_basics_logic.R1
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     a1)))
                            a0
                            (x0 :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   matita_basics_lists_list.list
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A))
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) a1)) =>
                             p0 :
                               cic.Term cic.prop
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __ :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z))) A)
                                     _x __)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z)))
                                       ((_A : cic.Univ (cic.type cic.z) =>
                                         matita_basics_lists_list.list
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) _A))
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) a1)))
                                    a0 x0) =>
                             cic.lift cic.prop (cic.type cic.z)
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) a1)
                                     x0)
                                  a2))
                            a10 a0 e0)
                         a10)
                      (_e1 :
                         cic.Term cic.prop
                           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                             _x :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             __ :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                             matita_basics_logic.eq
                               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               _x __)
                              (cic.lift cic.prop
                                 (cic.type (cic.s (cic.s cic.z)))
                                 ((A :
                                     cic.Univ
                                       (cic.type (cic.s (cic.s cic.z))) =>
                                   _x :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   __ :
                                     cic.Term
                                       (cic.type (cic.s (cic.s cic.z))) A =>
                                   matita_basics_logic.eq
                                     (cic.lift
                                        (cic.type (cic.s (cic.s cic.z)))
                                        (cic.type (cic.s (cic.s cic.z))) A)
                                     _x __)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type (cic.s (cic.s cic.z)))
                                       matita_arithmetics_nat.nat)
                                    (matita_basics_lists_list.length
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) a1)
                                       a0)
                                    a2))
                              (matita_basics_logic.R1
                                 (cic.lift (cic.type cic.z)
                                    (cic.type (cic.s (cic.s cic.z)))
                                    ((_A : cic.Univ (cic.type cic.z) =>
                                      matita_basics_lists_list.list
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) _A))
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) a1)))
                                 a0
                                 (x0 :
                                    cic.Term (cic.type cic.z)
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        matita_basics_lists_list.list
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A))
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) a1)) =>
                                  p0 :
                                    cic.Term cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((_A :
                                                cic.Univ (cic.type cic.z) =>
                                              matita_basics_lists_list.list
                                                (cic.lift (cic.type cic.z)
                                                   (cic.type cic.z) _A))
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) a1)))
                                         a0 x0) =>
                                  cic.lift cic.prop (cic.type cic.z)
                                    ((A :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      __ :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        _x __)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z)))
                                          matita_arithmetics_nat.nat)
                                       (matita_basics_lists_list.length
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) a1)
                                          x0)
                                       a2))
                                 a10 a0 e0)
                              a10) =>
                       P))) =>
            DH
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      matita_basics_lists_list.list
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                 (matita_basics_logic.R0
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                    a0))
              (matita_basics_logic.refl
                 (cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) a1) a0)
                       a2))
                 (matita_basics_logic.R1
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                    a0
                    (x0 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) a1)) =>
                     p0 :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     a1)))
                            a0 x0) =>
                     cic.lift cic.prop (cic.type cic.z)
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) a1)
                             x0)
                          a2))
                    a10 a0
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) a1)))
                       (matita_basics_logic.R0
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               matita_basics_lists_list.list
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A))
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   a1)))
                          a0)))))
           x)
        y Deq.

def dpi1__o__vec :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (x0 : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
              matita_arithmetics_nat.nat
              (x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1)
                    (__ :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x0)
                            x1) =>
                     cic.univ (cic.type cic.z)))
                 (x2 :
                    cic.Term (cic.type (cic.s cic.z))
                      (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) x0)
                            x1)
                         (__ :
                            cic.Term (cic.type cic.z)
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    x0)
                                 x1) =>
                          cic.univ (cic.type cic.z))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    ((A : cic.Univ (cic.type cic.z) =>
                      _f :
                        cic.Term (cic.type (cic.s cic.z))
                          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
                             A
                             (__ : cic.Term (cic.type cic.z) A =>
                              cic.univ (cic.type cic.z))) =>
                      matita_basics_types.DPair
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _f)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) x0)
                             x1))
                       (__ :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) x0)
                               x1) =>
                        cic.lift (cic.type cic.z) (cic.type cic.z) (x2 __)))
                    (x3 :
                       cic.Term (cic.type cic.z)
                         ((A : cic.Univ (cic.type cic.z) =>
                           _f :
                             cic.Term (cic.type (cic.s cic.z))
                               (cic.prod (cic.type cic.z)
                                  (cic.type (cic.s cic.z)) A
                                  (__ : cic.Term (cic.type cic.z) A =>
                                   cic.univ (cic.type cic.z))) =>
                           matita_basics_types.DPair
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             _f)
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     x0)
                                  x1))
                            (__ :
                               cic.Term (cic.type cic.z)
                                 ((_A : cic.Univ (cic.type cic.z) =>
                                   _n :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_basics_vectors.Vector
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) _A)
                                     _n)
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) x0)
                                    x1) =>
                             cic.lift (cic.type cic.z) (cic.type cic.z)
                               (x2 __))) =>
                     (_A : cic.Univ (cic.type cic.z) =>
                      matita_basics_lists_list.list
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                       (cic.lift (cic.type cic.z) (cic.type cic.z) x0))))))
      :=
      x0 : cic.Univ (cic.type cic.z) =>
      x1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      x2 :
        cic.Term (cic.type (cic.s cic.z))
          (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z))
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1)
             (__ :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1) =>
              cic.univ (cic.type cic.z))) =>
      x3 :
        cic.Term (cic.type cic.z)
          ((A : cic.Univ (cic.type cic.z) =>
            _f :
              cic.Term (cic.type (cic.s cic.z))
                (cic.prod (cic.type cic.z) (cic.type (cic.s cic.z)) A
                   (__ : cic.Term (cic.type cic.z) A =>
                    cic.univ (cic.type cic.z))) =>
            matita_basics_types.DPair
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _f)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1))
             (__ :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1) =>
              cic.lift (cic.type cic.z) (cic.type cic.z) (x2 __))) =>
      matita_basics_vectors.vec
        (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1
        (matita_basics_types.dpi1
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1))
           (__ :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) x0) x1) =>
            cic.lift (cic.type cic.z) (cic.type cic.z) (x2 __))
           x3).

def Vector_of_list :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A))
              (l :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
               (_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) l))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      l :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            matita_basics_lists_list.list
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (matita_basics_lists_list.length
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) l)
        l
        (matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) l)).

Vector_eq :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
          (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) cic.prop
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
             (v1 :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
              cic.prod (cic.type cic.z) cic.prop
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                (v2 :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       _n :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_basics_vectors.Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                 cic.prod cic.prop cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           matita_basics_lists_list.list
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)))
                      (matita_basics_vectors.vec
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v1)
                      (matita_basics_vectors.vec
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v2))
                   (__ :
                      cic.Term cic.prop
                        ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x :
                            cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                          __ :
                            cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A1)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              ((_A : cic.Univ (cic.type cic.z) =>
                                matita_basics_lists_list.list
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A))
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)))
                           (matita_basics_vectors.vec
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              n v1)
                           (matita_basics_vectors.vec
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              n v2)) =>
                    (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n))
                      v1 v2)))))).

def vec_tail :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (_v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  (_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred n)))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (matita_arithmetics_nat.pred n)
        (matita_basics_lists_list.tail
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.pred
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.pred
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                            v)))) =>
            cic.lift cic.prop cic.prop
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.pred n)))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              n
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x n) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.pred x)
                    (matita_arithmetics_nat.pred n)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.pred n))
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
              (matita_basics_vectors.len
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (matita_basics_lists_list.tail
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)))
           (matita_basics_lists_list.length_tail
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))).

def vec_cons :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z) A
              (_a : cic.Term (cic.type cic.z) A =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat
                 (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                    (_v :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                     (_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      a : cic.Term (cic.type cic.z) A =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (matita_arithmetics_nat.S n)
        (matita_basics_lists_list.cons
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) a
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           n
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x n) =>
            cic.lift cic.prop cic.prop
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.S x) (matita_arithmetics_nat.S n)))
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.S n))
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
           (matita_basics_vectors.len
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)).

def vec_hd :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n))
                 (_v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.S n)) =>
                  A))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (matita_arithmetics_nat.S n)) =>
      matita_basics_lists_list.hd
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (matita_basics_vectors.vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (matita_arithmetics_nat.S n) v)
        (matita_basics_vectors.Vector_rect_Type0
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (matita_arithmetics_nat.S n)
           (_x_1505 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S n)) =>
            cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (_clearme :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
            matita_basics_lists_list.match_list (cic.type cic.z)
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (__ :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
               cic.prod cic.prop (cic.type cic.z)
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
                    (matita_arithmetics_nat.S n))
                 (_len :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
                         (matita_arithmetics_nat.S n)) =>
                  A))
              (H :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      matita_arithmetics_nat.O (matita_arithmetics_nat.S n)) =>
               matita_arithmetics_nat.nat_discr matita_arithmetics_nat.O
                 (matita_arithmetics_nat.S n) H
                 (cic.lift (cic.type cic.z) (cic.type (cic.s cic.z)) A))
              (a : cic.Term (cic.type cic.z) A =>
               H :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
               eq :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_lists_list.cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) a
                            H))
                      (matita_arithmetics_nat.S n)) =>
               a)
              _clearme)
           v).

vec_expand :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
          (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) cic.prop
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (matita_arithmetics_nat.S n))
             (v :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                     (matita_arithmetics_nat.S n)) =>
              (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A1)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S n)))
                v
                (matita_basics_vectors.vec_cons
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_basics_vectors.vec_hd
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)
                   n
                   (matita_basics_vectors.vec_tail
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S n) v)))))).

vector_nil :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             matita_arithmetics_nat.O)
          (v :
             cic.Term (cic.type cic.z)
               ((_A : cic.Univ (cic.type cic.z) =>
                 _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 matita_basics_vectors.Vector
                   (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                  matita_arithmetics_nat.O) =>
           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A1)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   matita_arithmetics_nat.O))
             v
             (matita_basics_vectors.mk_Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                matita_arithmetics_nat.O
                (matita_basics_lists_list.nil
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                (matita_basics_logic.refl
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_basics_lists_list.nil
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))))).

def vec_append :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat
                 (n2 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n1)
                    (v1 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n1) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n2)
                       (v2 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n2) =>
                        cic.prod cic.prop (cic.type cic.z)
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_lists_list.append
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n1 v1)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n2 v2)))
                             (matita_arithmetics_nat.plus n1 n2))
                          (_len :
                             cic.Term cic.prop
                               ((A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_lists_list.append
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_basics_vectors.vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           n1 v1)
                                        (matita_basics_vectors.vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           n2 v2)))
                                  (matita_arithmetics_nat.plus n1 n2)) =>
                           (_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.plus n1 n2))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v1 :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n1) =>
      v2 :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n2) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (matita_arithmetics_nat.plus n1 n2)
        (matita_basics_lists_list.append
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n1 v1)
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n2 v2)).

def vec_map :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
              (cic.univ (cic.type cic.z))
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => B))
                 (_f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__ : cic.Term (cic.type cic.z) A => B)) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                       (_v :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n) =>
                        (_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) n))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) A
             (__ : cic.Term (cic.type cic.z) A => B)) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
        (matita_basics_lists_list.map
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
        (matita_basics_logic.trans_eq
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (matita_basics_lists_list.map
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)))
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
           n
           (matita_basics_lists_list.length_map
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)
              f)
           (matita_basics_vectors.len
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)).

def nth_default :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                    (v :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (d1 : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop A
                          (d2 : cic.Term (cic.type cic.z) A =>
                           cic.prod cic.prop cic.prop
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) i n)
                             (__ :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) i n) =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n v)
                                   d1)
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n v)
                                   d2)))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (d1 : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (d2 : cic.Term (cic.type cic.z) A =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) _x_365 n)
                          (__ :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) _x_365 n) =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             (matita_basics_lists_list.nth _x_365
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v)
                                d1)
                             (matita_basics_lists_list.nth _x_365
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v)
                                d2))))))))
        (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         v :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
         d1 : cic.Term (cic.type cic.z) A =>
         d2 : cic.Term (cic.type cic.z) A =>
         ltOn :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
         matita_arithmetics_nat.lt_O_n_elim n ltOn
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              (cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
                 (V :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) __) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) __ V)
                       d1)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) __ V)
                       d2))))
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v0 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S m)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m)))
              (matita_basics_vectors.vec_cons
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec_hd
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) m v0)
                 m
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m) v0))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S m)) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S m)))
                      x
                      (matita_basics_vectors.vec_cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec_hd
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) m
                            v0)
                         m
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S m) v0))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S m) x)
                       d1)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S m) x)
                       d2)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth matita_arithmetics_nat.O
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S m)
                       (matita_basics_vectors.vec_cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec_hd
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) m
                             v0)
                          m
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S m) v0)))
                    d1))
              v0
              (matita_basics_vectors.vec_expand
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) m v0))
           v)
        (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                   (v :
                      cic.Term (cic.type cic.z)
                        ((_A : cic.Univ (cic.type cic.z) =>
                          _n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                    cic.prod (cic.type cic.z) cic.prop A
                      (d1 : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) cic.prop A
                         (d2 : cic.Term (cic.type cic.z) A =>
                          cic.prod cic.prop cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) i0 n)
                            (__ :
                               cic.Term cic.prop
                                 ((__ :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __ __1) i0 n) =>
                             (A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               (matita_basics_lists_list.nth i0
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     n v)
                                  d1)
                               (matita_basics_lists_list.nth i0
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     n v)
                                  d2))))))) =>
         n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         v :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
         d1 : cic.Term (cic.type cic.z) A =>
         d2 : cic.Term (cic.type cic.z) A =>
         ltn :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1)
                (matita_arithmetics_nat.S i0) n) =>
         matita_arithmetics_nat.lt_O_n_elim n
           (matita_arithmetics_nat.ltn_to_ltO (matita_arithmetics_nat.S i0) n
              ltn)
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              (cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
                 (V :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) __) =>
                  cic.prod cic.prop cic.prop
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       (matita_arithmetics_nat.S i0) __)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            (matita_arithmetics_nat.S i0) __) =>
                     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S i0)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __ V)
                          d1)
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S i0)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __ V)
                          d2)))))
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v0 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S m)) =>
            ltim :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1)
                   (matita_arithmetics_nat.S i0) (matita_arithmetics_nat.S m)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m)))
              (matita_basics_vectors.vec_cons
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec_hd
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) m v0)
                 m
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m) v0))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S m)) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S m)))
                      x
                      (matita_basics_vectors.vec_cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec_hd
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) m
                            v0)
                         m
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S m) v0))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S i0)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S m) x)
                       d1)
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S i0)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S m) x)
                       d2)))
              (Hind m
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m) v0)
                 d1 d2
                 (matita_arithmetics_nat.le_S_S_to_le
                    (matita_arithmetics_nat.S i0) m ltim))
              v0
              (matita_basics_vectors.vec_expand
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) m v0))
           v ltn)
        i.

def eq_vec :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (v1 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                    (v2 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (d : cic.Term (cic.type cic.z) A =>
                        cic.prod cic.prop cic.prop
                          (cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod cic.prop cic.prop
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) i n)
                                (__ :
                                   cic.Term cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) i n) =>
                                 (A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   (matita_basics_lists_list.nth i
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v1)
                                      d)
                                   (matita_basics_lists_list.nth i
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v2)
                                      d))))
                          (__ :
                             cic.Term cic.prop
                               (cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (i :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   cic.prod cic.prop cic.prop
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) i n)
                                     (__ :
                                        cic.Term cic.prop
                                          ((__ :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            __1 :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            matita_arithmetics_nat.lt __ __1)
                                             i n) =>
                                      (A1 :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       __1 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1)
                                         _x __1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z))) A)
                                        (matita_basics_lists_list.nth i
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           (matita_basics_vectors.vec
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) A)
                                              n v1)
                                           d)
                                        (matita_basics_lists_list.nth i
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           (matita_basics_vectors.vec
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) A)
                                              n v2)
                                           d)))) =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                ((_A : cic.Univ (cic.type cic.z) =>
                                  _n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n))
                             v1 v2)))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _x_365)
              (v1 :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) _x_365) =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) _x_365)
                 (v2 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         _x_365) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (d : cic.Term (cic.type cic.z) A =>
                     cic.prod cic.prop cic.prop
                       (cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod cic.prop cic.prop
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) i _x_365)
                             (__ :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) i
                                     _x_365) =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      _x_365 v1)
                                   d)
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      _x_365 v2)
                                   d))))
                       (__ :
                          cic.Term cic.prop
                            (cic.prod (cic.type cic.z) cic.prop
                               matita_arithmetics_nat.nat
                               (i :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.prod cic.prop cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) i
                                     _x_365)
                                  (__ :
                                     cic.Term cic.prop
                                       ((__ :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         __1 :
                                           cic.Term (cic.type cic.z)
                                             matita_arithmetics_nat.nat =>
                                         matita_arithmetics_nat.lt __ __1) i
                                          _x_365) =>
                                   (A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __1 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __1)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z))) A)
                                     (matita_basics_lists_list.nth i
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_basics_vectors.vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           _x_365 v1)
                                        d)
                                     (matita_basics_lists_list.nth i
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_basics_vectors.vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           _x_365 v2)
                                        d)))) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                _x_365))
                          v1 v2))))))
        (v1 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                matita_arithmetics_nat.O) =>
         v2 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                matita_arithmetics_nat.O) =>
         H : cic.Term (cic.type cic.z) A =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 matita_arithmetics_nat.O))
           (matita_basics_vectors.mk_Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              matita_arithmetics_nat.O
              (matita_basics_lists_list.nil
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_lists_list.nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))
           (x :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   matita_arithmetics_nat.O) =>
            __ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         matita_arithmetics_nat.O))
                   x
                   (matita_basics_vectors.mk_Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      matita_arithmetics_nat.O
                      (matita_basics_lists_list.nil
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                      (matita_basics_logic.refl
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_basics_lists_list.nil
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))) =>
            cic.lift cic.prop cic.prop
              (cic.prod cic.prop cic.prop
                 (cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __2 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __1 __2) i
                          matita_arithmetics_nat.O)
                       (__1 :
                          cic.Term cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2) i
                               matita_arithmetics_nat.O) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __2 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth i
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                matita_arithmetics_nat.O x)
                             H)
                          (matita_basics_lists_list.nth i
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                matita_arithmetics_nat.O v2)
                             H))))
                 (__1 :
                    cic.Term cic.prop
                      (cic.prod (cic.type cic.z) cic.prop
                         matita_arithmetics_nat.nat
                         (i :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          cic.prod cic.prop cic.prop
                            ((__1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __2 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __1 __2) i
                               matita_arithmetics_nat.O)
                            (__1 :
                               cic.Term cic.prop
                                 ((__1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __2 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __1 __2) i
                                    matita_arithmetics_nat.O) =>
                             (A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __2 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __2)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               (matita_basics_lists_list.nth i
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     matita_arithmetics_nat.O x)
                                  H)
                               (matita_basics_lists_list.nth i
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     matita_arithmetics_nat.O v2)
                                  H)))) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __2)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          matita_arithmetics_nat.O))
                    x v2)))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O))
              (matita_basics_vectors.mk_Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 matita_arithmetics_nat.O
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      matita_arithmetics_nat.O) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            matita_arithmetics_nat.O))
                      x
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         matita_arithmetics_nat.O
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                         (matita_basics_logic.refl
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)))))) =>
               cic.lift cic.prop cic.prop
                 (cic.prod cic.prop cic.prop
                    (cic.prod (cic.type cic.z) cic.prop
                       matita_arithmetics_nat.nat
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod cic.prop cic.prop
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) i
                             matita_arithmetics_nat.O)
                          (__1 :
                             cic.Term cic.prop
                               ((__1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __1 __2) i
                                  matita_arithmetics_nat.O) =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __2 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __2)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             (matita_basics_lists_list.nth i
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_lists_list.nil
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A))
                                H)
                             (matita_basics_lists_list.nth i
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   matita_arithmetics_nat.O x)
                                H))))
                    (__1 :
                       cic.Term cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            matita_arithmetics_nat.nat
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop
                               ((__1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __1 __2) i
                                  matita_arithmetics_nat.O)
                               (__1 :
                                  cic.Term cic.prop
                                    ((__1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __2 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __1 __2) i
                                       matita_arithmetics_nat.O) =>
                                (A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __2 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __2)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) A)
                                  (matita_basics_lists_list.nth i
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_lists_list.nil
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A))
                                     H)
                                  (matita_basics_lists_list.nth i
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        matita_arithmetics_nat.O x)
                                     H)))) =>
                     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             matita_arithmetics_nat.O))
                       (matita_basics_vectors.mk_Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          matita_arithmetics_nat.O
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_lists_list.nil
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)))))
                       x)))
              (auto :
                 cic.Term cic.prop
                   (cic.prod (cic.type cic.z) cic.prop
                      matita_arithmetics_nat.nat
                      (i :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       cic.prod cic.prop cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) i
                            matita_arithmetics_nat.O)
                         (__ :
                            cic.Term cic.prop
                              ((__ :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                __1 :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_arithmetics_nat.lt __ __1) i
                                 matita_arithmetics_nat.O) =>
                          (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __1 :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __1)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            (matita_basics_lists_list.nth i
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A))
                               H)
                            (matita_basics_lists_list.nth i
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A))
                               H)))) =>
               matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       matita_arithmetics_nat.O))
                 (matita_basics_vectors.mk_Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O
                    (matita_basics_lists_list.nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A))))))
              v2
              (matita_basics_vectors.vector_nil
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) v2))
           v1
           (matita_basics_vectors.vector_nil
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) v1))
        (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0)
                (v1 :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       _n :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       matita_basics_vectors.Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0) =>
                 cic.prod (cic.type cic.z) cic.prop
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0)
                   (v2 :
                      cic.Term (cic.type cic.z)
                        ((_A : cic.Univ (cic.type cic.z) =>
                          _n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0) =>
                    cic.prod (cic.type cic.z) cic.prop A
                      (d : cic.Term (cic.type cic.z) A =>
                       cic.prod cic.prop cic.prop
                         (cic.prod (cic.type cic.z) cic.prop
                            matita_arithmetics_nat.nat
                            (i :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.prod cic.prop cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) i n0)
                               (__ :
                                  cic.Term cic.prop
                                    ((__ :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __ __1) i n0) =>
                                (A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) A)
                                  (matita_basics_lists_list.nth i
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        n0 v1)
                                     d)
                                  (matita_basics_lists_list.nth i
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        n0 v2)
                                     d))))
                         (__ :
                            cic.Term cic.prop
                              (cic.prod (cic.type cic.z) cic.prop
                                 matita_arithmetics_nat.nat
                                 (i :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  cic.prod cic.prop cic.prop
                                    ((__ :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      __1 :
                                        cic.Term (cic.type cic.z)
                                          matita_arithmetics_nat.nat =>
                                      matita_arithmetics_nat.lt __ __1) i n0)
                                    (__ :
                                       cic.Term cic.prop
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            i n0) =>
                                     (A1 :
                                        cic.Univ
                                          (cic.type (cic.s (cic.s cic.z))) =>
                                      _x :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A1 =>
                                      __1 :
                                        cic.Term
                                          (cic.type (cic.s (cic.s cic.z))) A1 =>
                                      matita_basics_logic.eq
                                        (cic.lift
                                           (cic.type (cic.s (cic.s cic.z)))
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1)
                                        _x __1)
                                       (cic.lift (cic.type cic.z)
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       (matita_basics_lists_list.nth i
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) A)
                                          (matita_basics_vectors.vec
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) A)
                                             n0 v1)
                                          d)
                                       (matita_basics_lists_list.nth i
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) A)
                                          (matita_basics_vectors.vec
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) A)
                                             n0 v2)
                                          d)))) =>
                          (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __1 :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __1)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n0))
                            v1 v2))))) =>
         v1 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (matita_arithmetics_nat.S n0)) =>
         v2 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (matita_arithmetics_nat.S n0)) =>
         d : cic.Term (cic.type cic.z) A =>
         H :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod cic.prop cic.prop
                   ((__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     __1 :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.lt __ __1) i
                      (matita_arithmetics_nat.S n0))
                   (__ :
                      cic.Term cic.prop
                        ((__ :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          __1 :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_arithmetics_nat.lt __ __1) i
                           (matita_arithmetics_nat.S n0)) =>
                    (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __1)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) A)
                      (matita_basics_lists_list.nth i
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0) v1)
                         d)
                      (matita_basics_lists_list.nth i
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0) v2)
                         d)))) =>
         matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_arithmetics_nat.S n0)))
           (matita_basics_vectors.vec_cons
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (matita_basics_vectors.vec_hd
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v1)
              n0
              (matita_basics_vectors.vec_tail
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_arithmetics_nat.S n0) v1))
           (x :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S n0)) =>
            __ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.S n0)))
                   x
                   (matita_basics_vectors.vec_cons
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_basics_vectors.vec_hd
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v1)
                      n0
                      (matita_basics_vectors.vec_tail
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.S n0) v1))) =>
            cic.lift cic.prop cic.prop
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n0)))
                 x v2))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0)))
              (matita_basics_vectors.vec_cons
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec_hd
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v2)
                 n0
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0) v2))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S n0)) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0)))
                      x
                      (matita_basics_vectors.vec_cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec_hd
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0
                            v2)
                         n0
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0) v2))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n0)))
                    (matita_basics_vectors.vec_cons
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec_hd
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0
                          v1)
                       n0
                       (matita_basics_vectors.vec_tail
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n0) v1))
                    x))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0))
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0) v2)
                 (x :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0) =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n0))
                         x
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0) v2)) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n0)))
                       (matita_basics_vectors.vec_cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec_hd
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             n0 v1)
                          n0 x)
                       (matita_basics_vectors.vec_cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec_hd
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             n0 v2)
                          n0
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n0) v2))))
                 (matita_basics_logic.rewrite_l
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_vectors.vec_hd
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v1)
                    (x : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n0)))
                          (matita_basics_vectors.vec_cons
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec_hd
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n0 v1)
                             n0
                             (matita_basics_vectors.vec_tail
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n0) v2))
                          (matita_basics_vectors.vec_cons
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) x
                             n0
                             (matita_basics_vectors.vec_tail
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n0) v2))))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n0)))
                       (matita_basics_vectors.vec_cons
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec_hd
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             n0 v1)
                          n0
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n0) v2)))
                    (matita_basics_vectors.vec_hd
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v2)
                    ((i :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      d1 : cic.Term (cic.type cic.z) A =>
                      d2 : cic.Term (cic.type cic.z) A =>
                      Hi :
                        cic.Term cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) i
                             (matita_arithmetics_nat.S n0)) =>
                      matita_basics_logic.eq_ind_r
                        (cic.lift (cic.type cic.z)
                           (cic.type (cic.s (cic.s cic.z))) A)
                        (matita_basics_lists_list.nth i
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                           (matita_basics_vectors.vec
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_arithmetics_nat.S n0) v1)
                           d)
                        (x : cic.Term (cic.type cic.z) A =>
                         __ :
                           cic.Term cic.prop
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                x
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_arithmetics_nat.S n0) v1)
                                   d)) =>
                         cic.lift cic.prop cic.prop
                           ((A1 :
                               cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                             _x :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                             __1 :
                               cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                             matita_basics_logic.eq
                               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                  (cic.type (cic.s (cic.s cic.z))) A1)
                               _x __1)
                              (cic.lift (cic.type cic.z)
                                 (cic.type (cic.s (cic.s cic.z))) A)
                              x
                              (matita_basics_lists_list.nth i
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 (matita_basics_vectors.vec
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) A)
                                    (matita_arithmetics_nat.S n0) v2)
                                 d2)))
                        (matita_basics_logic.eq_ind_r
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z))) A)
                           (matita_basics_lists_list.nth i
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_basics_vectors.vec
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 (matita_arithmetics_nat.S n0) v2)
                              d)
                           (x : cic.Term (cic.type cic.z) A =>
                            __ :
                              cic.Term cic.prop
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   x
                                   (matita_basics_lists_list.nth i
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         (matita_arithmetics_nat.S n0) v2)
                                      d)) =>
                            cic.lift cic.prop cic.prop
                              ((A1 :
                                  cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                _x :
                                  cic.Term (cic.type (cic.s (cic.s cic.z)))
                                    A1 =>
                                __1 :
                                  cic.Term (cic.type (cic.s (cic.s cic.z)))
                                    A1 =>
                                matita_basics_logic.eq
                                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                     (cic.type (cic.s (cic.s cic.z))) A1)
                                  _x __1)
                                 (cic.lift (cic.type cic.z)
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 (matita_basics_lists_list.nth i
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) A)
                                    (matita_basics_vectors.vec
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       (matita_arithmetics_nat.S n0) v1)
                                    d)
                                 x))
                           (H i Hi)
                           (matita_basics_lists_list.nth i
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_basics_vectors.vec
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 (matita_arithmetics_nat.S n0) v2)
                              d2)
                           (matita_basics_vectors.nth_default
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              i (matita_arithmetics_nat.S n0) v2 d2 d Hi))
                        (matita_basics_lists_list.nth i
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                           (matita_basics_vectors.vec
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_arithmetics_nat.S n0) v1)
                           d1)
                        (matita_basics_vectors.nth_default
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) i
                           (matita_arithmetics_nat.S n0) v1 d1 d Hi))
                       matita_arithmetics_nat.O
                       (matita_basics_vectors.Vector_rect_Type0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n0)
                          (_x_1505 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.S n0)) =>
                           cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (_clearme :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)) =>
                           matita_basics_lists_list.match_list
                             (cic.type cic.z)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (__ :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)) =>
                              cic.prod cic.prop (cic.type cic.z)
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      __)
                                   (matita_arithmetics_nat.S n0))
                                (_len :
                                   cic.Term cic.prop
                                     ((A1 :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       __1 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1)
                                         _x __1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_basics_lists_list.length
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           __)
                                        (matita_arithmetics_nat.S n0)) =>
                                 A))
                             (H0 :
                                cic.Term cic.prop
                                  ((A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (matita_arithmetics_nat.S n0)) =>
                              matita_arithmetics_nat.nat_discr
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S n0) H0
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) A))
                             (a : cic.Term (cic.type cic.z) A =>
                              H0 :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)) =>
                              eq :
                                cic.Term cic.prop
                                  ((A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_basics_lists_list.cons
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           a H0))
                                     (matita_arithmetics_nat.S n0)) =>
                              a)
                             _clearme)
                          v1)
                       (matita_basics_vectors.Vector_rect_Type0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n0)
                          (_x_1505 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.S n0)) =>
                           cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (_clearme :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)) =>
                           matita_basics_lists_list.match_list
                             (cic.type cic.z)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (__ :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)) =>
                              cic.prod cic.prop (cic.type cic.z)
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_basics_lists_list.length
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      __)
                                   (matita_arithmetics_nat.S n0))
                                (_len :
                                   cic.Term cic.prop
                                     ((A1 :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       __1 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1)
                                         _x __1)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_basics_lists_list.length
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           __)
                                        (matita_arithmetics_nat.S n0)) =>
                                 A))
                             (H0 :
                                cic.Term cic.prop
                                  ((A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     matita_arithmetics_nat.O
                                     (matita_arithmetics_nat.S n0)) =>
                              matita_arithmetics_nat.nat_discr
                                matita_arithmetics_nat.O
                                (matita_arithmetics_nat.S n0) H0
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s cic.z)) A))
                             (a : cic.Term (cic.type cic.z) A =>
                              H0 :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    matita_basics_lists_list.list
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A))
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)) =>
                              eq :
                                cic.Term cic.prop
                                  ((A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_basics_lists_list.length
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_basics_lists_list.cons
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           a H0))
                                     (matita_arithmetics_nat.S n0)) =>
                              a)
                             _clearme)
                          v2)
                       (matita_arithmetics_nat.lt_O_S n0)))
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0) v1)
                 (Hind
                    (matita_basics_vectors.vec_tail
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n0) v1)
                    (matita_basics_vectors.vec_tail
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n0) v2)
                    d
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     ltin :
                       cic.Term cic.prop
                         ((__ :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __ __1) i n0) =>
                     H (matita_arithmetics_nat.S i)
                       (matita_arithmetics_nat.le_S_S
                          (matita_arithmetics_nat.S i) n0 ltin))))
              v2
              (matita_basics_vectors.vec_expand
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v2))
           v1
           (matita_basics_vectors.vec_expand
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v1))
        n.

def nth_vec_map :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) cic.prop
              (cic.univ (cic.type cic.z))
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type cic.z) cic.prop
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__ : cic.Term (cic.type cic.z) A => B))
                 (f :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__ : cic.Term (cic.type cic.z) A => B)) =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop
                       matita_arithmetics_nat.nat
                       (n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                          (v :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n) =>
                           cic.prod (cic.type cic.z) cic.prop A
                             (d : cic.Term (cic.type cic.z) A =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) B)
                                (f
                                   (matita_basics_lists_list.nth i
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v)
                                      d))
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) B)
                                      n
                                      (matita_basics_vectors.vec_map
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) B)
                                         f n v))
                                   (f d))))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) A
             (__ : cic.Term (cic.type cic.z) A => B)) =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (d : cic.Term (cic.type cic.z) A =>
                     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B)
                       (f
                          (matita_basics_lists_list.nth _x_365
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v)
                             d))
                       (matita_basics_lists_list.nth _x_365
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
                             (matita_basics_vectors.vec_map
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                f n v))
                          (f d)))))))
        (_clearme : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
              (v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) __) =>
               cic.prod (cic.type cic.z) cic.prop A
                 (d : cic.Term (cic.type cic.z) A =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __ v)
                          d))
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) __
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             __ v))
                       (f d)))))
           (v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   matita_arithmetics_nat.O) =>
            d : cic.Term (cic.type cic.z) A =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O))
              (matita_basics_vectors.mk_Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 matita_arithmetics_nat.O
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      matita_arithmetics_nat.O) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            matita_arithmetics_nat.O))
                      x
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         matita_arithmetics_nat.O
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                         (matita_basics_logic.refl
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)))))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             matita_arithmetics_nat.O x)
                          d))
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          matita_arithmetics_nat.O
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             matita_arithmetics_nat.O x))
                       (f d))))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 (f
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                       d)))
              v
              (matita_basics_vectors.vector_nil
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) v))
           (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S n0)) =>
            d : cic.Term (cic.type cic.z) A =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0)))
              (matita_basics_vectors.vec_cons
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec_hd
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v)
                 n0
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n0) v))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S n0)) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0)))
                      x
                      (matita_basics_vectors.vec_cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec_hd
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0
                            v)
                         n0
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n0) v))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n0) x)
                          d))
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_arithmetics_nat.S n0)
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             (matita_arithmetics_nat.S n0) x))
                       (f d))))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 (f
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n0)
                          (matita_basics_vectors.vec_cons
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec_hd
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n0 v)
                             n0
                             (matita_basics_vectors.vec_tail
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n0) v)))
                       d)))
              v
              (matita_basics_vectors.vec_expand
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n0 v))
           _clearme)
        (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         IH :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                   (v :
                      cic.Term (cic.type cic.z)
                        ((_A : cic.Univ (cic.type cic.z) =>
                          _n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
                    cic.prod (cic.type cic.z) cic.prop A
                      (d : cic.Term (cic.type cic.z) A =>
                       (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B)
                         (f
                            (matita_basics_lists_list.nth i0
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_vectors.vec
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n v)
                               d))
                         (matita_basics_lists_list.nth i0
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               n
                               (matita_basics_vectors.vec_map
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  f n v))
                            (f d)))))) =>
         _clearme : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) __)
              (v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A) __) =>
               cic.prod (cic.type cic.z) cic.prop A
                 (d : cic.Term (cic.type cic.z) A =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S i0)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __ v)
                          d))
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S i0)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) __
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             __ v))
                       (f d)))))
           (v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   matita_arithmetics_nat.O) =>
            d : cic.Term (cic.type cic.z) A =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O))
              (matita_basics_vectors.mk_Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 matita_arithmetics_nat.O
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)))))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      matita_arithmetics_nat.O) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            matita_arithmetics_nat.O))
                      x
                      (matita_basics_vectors.mk_Vector
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         matita_arithmetics_nat.O
                         (matita_basics_lists_list.nil
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                         (matita_basics_logic.refl
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_lists_list.nil
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)))))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S i0)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             matita_arithmetics_nat.O x)
                          d))
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S i0)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          matita_arithmetics_nat.O
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             matita_arithmetics_nat.O x))
                       (f d))))
              (matita_arithmetics_nat.match_nat cic.prop
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth __
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                          d))
                    (matita_basics_lists_list.nth __
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                       (f d)))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    d
                    (x : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          (f x)
                          (matita_basics_lists_list.nth
                             matita_arithmetics_nat.O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (matita_basics_lists_list.nil
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                             (f d))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B)
                       (f d)
                       (x : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B)
                             (f d) x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          (f d))
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                          (f d))
                       (matita_basics_lists_list.nth_nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (f d) matita_arithmetics_nat.O))
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                       d)
                    (matita_basics_lists_list.nth_nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) d
                       matita_arithmetics_nat.O))
                 (auto :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    d
                    (x : cic.Term (cic.type cic.z) A =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          (f x)
                          (matita_basics_lists_list.nth
                             (matita_arithmetics_nat.S auto)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (matita_basics_lists_list.nil
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                             (f d))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B)
                       (f d)
                       (x : cic.Term (cic.type cic.z) B =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) B)
                             (f d) x))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) B)
                          (f d))
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S auto)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_basics_lists_list.nil
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                          (f d))
                       (matita_basics_lists_list.nth_nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (f d) (matita_arithmetics_nat.S auto)))
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S auto)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_lists_list.nil
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                       d)
                    (matita_basics_lists_list.nth_nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) d
                       (matita_arithmetics_nat.S auto)))
                 i0)
              v
              (matita_basics_vectors.vector_nil
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) v))
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.S n)) =>
            d : cic.Term (cic.type cic.z) A =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n)))
              (matita_basics_vectors.vec_cons
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec_hd
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)
                 n
                 (matita_basics_vectors.vec_tail
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S n) v))
              (x :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.S n)) =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n)))
                      x
                      (matita_basics_vectors.vec_cons
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec_hd
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                            v)
                         n
                         (matita_basics_vectors.vec_tail
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n) v))) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (f
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S i0)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) x)
                          d))
                    (matita_basics_lists_list.nth
                       (matita_arithmetics_nat.S i0)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_arithmetics_nat.S n)
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             (matita_arithmetics_nat.S n) x))
                       (f d))))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    B)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
                       (matita_basics_vectors.vec_map
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) f n
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) v)))
                    (f d))
                 (x : cic.Term (cic.type cic.z) B =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) B)
                         x
                         (matita_basics_lists_list.nth i0
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               n
                               (matita_basics_vectors.vec_map
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  f n
                                  (matita_basics_vectors.vec_tail
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_arithmetics_nat.S n) v)))
                            (f d))) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) B)
                       x
                       (matita_basics_lists_list.nth i0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_basics_lists_list.tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (matita_arithmetics_nat.S n)
                                (matita_basics_vectors.vec_map
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   f (matita_arithmetics_nat.S n)
                                   (matita_basics_vectors.vec_cons
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec_hd
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v)
                                      n
                                      (matita_basics_vectors.vec_tail
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         (matita_arithmetics_nat.S n) v)))))
                          (f d))))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) B)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
                          (matita_basics_vectors.vec_map
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) f
                             n
                             (matita_basics_vectors.vec_tail
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n) v)))
                       (f d)))
                 (f
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) v))
                       d))
                 (IH n
                    (matita_basics_vectors.vec_tail
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n) v)
                    d))
              v
              (matita_basics_vectors.vec_expand
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
           _clearme)
        i.

def change_vec :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (H : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) H)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (__ :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) H)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) H
                    (__1 : cic.Term (cic.type cic.z) H =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat
                       (__2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        (_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) H) n)))))).

def change_vec_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
           (cic.univ (cic.type cic.z))
           (H : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) H)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (__ :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) H)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z) H
                    (__1 : cic.Term (cic.type cic.z) H =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat
                       (__2 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        (_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) H) n)))))).

[ H, n ] change_vec H n -->
  matita_arithmetics_nat.filter_nat (cic.type cic.z)
    (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     cic.prod (cic.type cic.z) (cic.type cic.z)
       ((_A : cic.Univ (cic.type cic.z) =>
         _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_vectors.Vector
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
          (cic.lift (cic.type cic.z) (cic.type cic.z) H)
          (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
       (__ :
          cic.Term (cic.type cic.z)
            ((_A : cic.Univ (cic.type cic.z) =>
              _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              matita_basics_vectors.Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
               (cic.lift (cic.type cic.z) (cic.type cic.z) H)
               (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
        cic.prod (cic.type cic.z) (cic.type cic.z) H
          (__1 : cic.Term (cic.type cic.z) H =>
           cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__2 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) H) n))))
    (matita_basics_vectors.change_vec_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) H))
    n.

[ H, n ] change_vec_body H n -->
  matita_arithmetics_nat.match_nat (cic.type cic.z)
    (n0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     cic.prod (cic.type cic.z) (cic.type cic.z)
       ((_A : cic.Univ (cic.type cic.z) =>
         _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_vectors.Vector
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
          (cic.lift (cic.type cic.z) (cic.type cic.z) H) n0)
       (_v :
          cic.Term (cic.type cic.z)
            ((_A : cic.Univ (cic.type cic.z) =>
              _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              matita_basics_vectors.Vector
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
               (cic.lift (cic.type cic.z) (cic.type cic.z) H) n0) =>
        cic.prod (cic.type cic.z) (cic.type cic.z) H
          (__ : cic.Term (cic.type cic.z) H =>
           cic.prod (cic.type cic.z) (cic.type cic.z)
             matita_arithmetics_nat.nat
             (__1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              (_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) H) n0))))
    (v :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) H)
            matita_arithmetics_nat.O) =>
     a : cic.Term (cic.type cic.z) H =>
     i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat => v)
    (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     v :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           matita_basics_vectors.Vector
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
            (cic.lift (cic.type cic.z) (cic.type cic.z) H)
            (matita_arithmetics_nat.S m)) =>
     a : cic.Term (cic.type cic.z) H =>
     i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
     matita_arithmetics_nat.match_nat (cic.type cic.z)
       (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        (_A : cic.Univ (cic.type cic.z) =>
         _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_vectors.Vector
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
          (cic.lift (cic.type cic.z) (cic.type cic.z) H)
          (matita_arithmetics_nat.S m))
       (matita_basics_vectors.vec_cons
          (cic.lift (cic.type cic.z) (cic.type cic.z) H) a m
          (matita_basics_vectors.vec_tail
             (cic.lift (cic.type cic.z) (cic.type cic.z) H)
             (matita_arithmetics_nat.S m) v))
       (j : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
        matita_basics_vectors.vec_cons
          (cic.lift (cic.type cic.z) (cic.type cic.z) H)
          (matita_basics_vectors.vec_hd
             (cic.lift (cic.type cic.z) (cic.type cic.z) H) m v)
          m
          (matita_basics_vectors.change_vec
             (cic.lift (cic.type cic.z) (cic.type cic.z) H) m
             (matita_basics_vectors.vec_tail
                (cic.lift (cic.type cic.z) (cic.type cic.z) H)
                (matita_arithmetics_nat.S m) v)
             a j))
       i)
    n.

def nth_change_vec :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n)))
                    (v :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n))) =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (a : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop A
                          (d : cic.Term (cic.type cic.z) A =>
                           cic.prod cic.prop cic.prop
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) i n)
                             (__ :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) i n) =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth i
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v a i))
                                   d)
                                a))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (a : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (d : cic.Term (cic.type cic.z) A =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) _x_365 n)
                          (__ :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) _x_365 n) =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             (matita_basics_lists_list.nth _x_365
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n
                                   (matita_basics_vectors.change_vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n v a _x_365))
                                d)
                             a)))))))
        (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         v :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
         a : cic.Term (cic.type cic.z) A =>
         d : cic.Term (cic.type cic.z) A =>
         ltOn :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
         matita_arithmetics_nat.lt_O_n_elim n ltOn
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              (cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.S __)))
                 (V :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S __))) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) __
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __ V a matita_arithmetics_nat.O))
                       d)
                    a)))
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            V :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.S (matita_arithmetics_nat.S m)))) =>
            matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth matita_arithmetics_nat.O
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.S m)
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S m) V a
                       matita_arithmetics_nat.O))
                 d))
           v)
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.S n)))
                   (v :
                      cic.Term (cic.type cic.z)
                        ((_A : cic.Univ (cic.type cic.z) =>
                          _n :
                            cic.Term (cic.type cic.z)
                              matita_arithmetics_nat.nat =>
                          matita_basics_vectors.Vector
                            (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                            _n)
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                           (matita_arithmetics_nat.pred
                              (matita_arithmetics_nat.S n))) =>
                    cic.prod (cic.type cic.z) cic.prop A
                      (a : cic.Term (cic.type cic.z) A =>
                       cic.prod (cic.type cic.z) cic.prop A
                         (d : cic.Term (cic.type cic.z) A =>
                          cic.prod cic.prop cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) m n)
                            (__ :
                               cic.Term cic.prop
                                 ((__ :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   __1 :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   matita_arithmetics_nat.lt __ __1) m n) =>
                             (A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               (matita_basics_lists_list.nth m
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     n
                                     (matita_basics_vectors.change_vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        n v a m))
                                  d)
                               a)))))) =>
         n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         v :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
         a : cic.Term (cic.type cic.z) A =>
         d : cic.Term (cic.type cic.z) A =>
         Hlt :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) (matita_arithmetics_nat.S m)
                n) =>
         matita_arithmetics_nat.lt_O_n_elim n
           (matita_arithmetics_nat.ltn_to_ltO (matita_arithmetics_nat.S m) n
              Hlt)
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              (cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred
                       (matita_arithmetics_nat.S __)))
                 (V :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S __))) =>
                  cic.prod cic.prop cic.prop
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2)
                       (matita_arithmetics_nat.S m) __)
                    (__1 :
                       cic.Term cic.prop
                         ((__1 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __2 :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_arithmetics_nat.lt __1 __2)
                            (matita_arithmetics_nat.S m) __) =>
                     (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __2)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S m)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             __
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                __ V a (matita_arithmetics_nat.S m)))
                          d)
                       a))))
           (p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v0 :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.S (matita_arithmetics_nat.S p)))) =>
            ltmp :
              cic.Term cic.prop
                ((__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_nat.lt __ __1)
                   (matita_arithmetics_nat.S m) (matita_arithmetics_nat.S p)) =>
            Hind p
              (matita_basics_vectors.vec_tail
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_arithmetics_nat.S p) v0)
              a d
              (matita_arithmetics_nat.le_S_S_to_le
                 (matita_arithmetics_nat.S m) p ltmp))
           v Hlt)
        i.

def nth_change_vec_neq :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (j : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n)))
                       (v :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.S n))) =>
                        cic.prod (cic.type cic.z) cic.prop A
                          (a : cic.Term (cic.type cic.z) A =>
                           cic.prod (cic.type cic.z) cic.prop A
                             (d : cic.Term (cic.type cic.z) A =>
                              cic.prod cic.prop cic.prop
                                ((_A : cic.Univ cic.prop =>
                                  matita_basics_logic.Not _A)
                                   ((A1 :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A1)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      i j))
                                (__ :
                                   cic.Term cic.prop
                                     ((_A : cic.Univ cic.prop =>
                                       matita_basics_logic.Not _A)
                                        ((A1 :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A1 =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A1 =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A1)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           i j)) =>
                                 (A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   (matita_basics_lists_list.nth j
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n
                                         (matita_basics_vectors.change_vec
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            n v a i))
                                      d)
                                   (matita_basics_lists_list.nth j
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.S n))
                                         v)
                                      d))))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      j : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_nat.nat_ind
        (_x_365 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n)))
                    (v :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n))) =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (a : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop A
                          (d : cic.Term (cic.type cic.z) A =>
                           cic.prod cic.prop cic.prop
                             ((_A : cic.Univ cic.prop =>
                               matita_basics_logic.Not _A)
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   i _x_365))
                             (__ :
                                cic.Term cic.prop
                                  ((_A : cic.Univ cic.prop =>
                                    matita_basics_logic.Not _A)
                                     ((A1 :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        i _x_365)) =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth _x_365
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v a i))
                                   d)
                                (matita_basics_lists_list.nth _x_365
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S n))
                                      v)
                                   d)))))))))
        (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_arithmetics_nat.pred (matita_arithmetics_nat.S __)))
              (v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.S __))) =>
               cic.prod (cic.type cic.z) cic.prop A
                 (a : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (d : cic.Term (cic.type cic.z) A =>
                     cic.prod cic.prop cic.prop
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             i matita_arithmetics_nat.O))
                       (__1 :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              matita_basics_logic.Not _A)
                               ((A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  i matita_arithmetics_nat.O)) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __2 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth
                             matita_arithmetics_nat.O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                __
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   __ v a i))
                             d)
                          (matita_basics_lists_list.nth
                             matita_arithmetics_nat.O
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S __))
                                v)
                             d))))))
           (v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
            a : cic.Term (cic.type cic.z) A =>
            d : cic.Term (cic.type cic.z) A =>
            auto :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i matita_arithmetics_nat.O)) =>
            matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth matita_arithmetics_nat.O
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       matita_arithmetics_nat.O v a i))
                 d))
           (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.S (matita_arithmetics_nat.S n)))) =>
            a : cic.Term (cic.type cic.z) A =>
            d : cic.Term (cic.type cic.z) A =>
            matita_arithmetics_nat.match_nat cic.prop
              (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod cic.prop cic.prop
                 ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       __ matita_arithmetics_nat.O))
                 (__1 :
                    cic.Term cic.prop
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __1 :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __1)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            __ matita_arithmetics_nat.O)) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __2)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n)
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) v a __))
                       d)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S n)))
                          v)
                       d)))
              (H :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O matita_arithmetics_nat.O)) =>
               matita_basics_logic.False_ind
                 (_x_66 : cic.Term cic.prop matita_basics_logic.False =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n)
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n) v a
                                matita_arithmetics_nat.O))
                          d)
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S n)))
                             v)
                          d)))
                 (matita_basics_logic.absurd
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O matita_arithmetics_nat.O)
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       matita_arithmetics_nat.O)
                    H))
              (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S i0)
                         matita_arithmetics_nat.O)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n)))
                 (matita_basics_vectors.vec_cons
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec_hd
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)
                    n
                    (matita_basics_vectors.vec_tail
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n) v))
                 (x :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.S n)) =>
                  _0 :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.S n)))
                         x
                         (matita_basics_vectors.vec_cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_basics_vectors.vec_hd
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n v)
                            n
                            (matita_basics_vectors.vec_tail
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.S n) v))) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n)
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n) v a
                                (matita_arithmetics_nat.S i0)))
                          d)
                       (matita_basics_lists_list.nth matita_arithmetics_nat.O
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S n)))
                             x)
                          d)))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth matita_arithmetics_nat.O
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n)
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) v a
                             (matita_arithmetics_nat.S i0)))
                       d))
                 v
                 (matita_basics_vectors.vec_expand
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
              i)
           _clearme)
        (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                (i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.prod (cic.type cic.z) cic.prop
                   matita_arithmetics_nat.nat
                   (n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod (cic.type cic.z) cic.prop
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n)))
                      (v :
                         cic.Term (cic.type cic.z)
                           ((_A : cic.Univ (cic.type cic.z) =>
                             _n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_arithmetics_nat.pred
                                 (matita_arithmetics_nat.S n))) =>
                       cic.prod (cic.type cic.z) cic.prop A
                         (a : cic.Term (cic.type cic.z) A =>
                          cic.prod (cic.type cic.z) cic.prop A
                            (d : cic.Term (cic.type cic.z) A =>
                             cic.prod cic.prop cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 matita_basics_logic.Not _A)
                                  ((A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     i m))
                               (__ :
                                  cic.Term cic.prop
                                    ((_A : cic.Univ cic.prop =>
                                      matita_basics_logic.Not _A)
                                       ((A1 :
                                           cic.Univ
                                             (cic.type (cic.s (cic.s cic.z))) =>
                                         _x :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A1 =>
                                         __ :
                                           cic.Term
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A1 =>
                                         matita_basics_logic.eq
                                           (cic.lift
                                              (cic.type (cic.s (cic.s cic.z)))
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A1)
                                           _x __)
                                          (cic.lift (cic.type cic.z)
                                             (cic.type (cic.s (cic.s cic.z)))
                                             matita_arithmetics_nat.nat)
                                          i m)) =>
                                (A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) A)
                                  (matita_basics_lists_list.nth m
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        n
                                        (matita_basics_vectors.change_vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           n v a i))
                                     d)
                                  (matita_basics_lists_list.nth m
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_arithmetics_nat.pred
                                           (matita_arithmetics_nat.S n))
                                        v)
                                     d)))))))) =>
         i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_arithmetics_nat.match_nat cic.prop
           (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                matita_basics_vectors.Vector
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_arithmetics_nat.pred (matita_arithmetics_nat.S __)))
              (v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.S __))) =>
               cic.prod (cic.type cic.z) cic.prop A
                 (a : cic.Term (cic.type cic.z) A =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (d : cic.Term (cic.type cic.z) A =>
                     cic.prod cic.prop cic.prop
                       ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             i (matita_arithmetics_nat.S m)))
                       (__1 :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              matita_basics_logic.Not _A)
                               ((A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __1 :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __1)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  i (matita_arithmetics_nat.S m))) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __2 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth
                             (matita_arithmetics_nat.S m)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                __
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   __ v a i))
                             d)
                          (matita_basics_lists_list.nth
                             (matita_arithmetics_nat.S m)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S __))
                                v)
                             d))))))
           (v :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  _n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_vectors.Vector
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                   (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                   (matita_arithmetics_nat.pred
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
            a : cic.Term (cic.type cic.z) A =>
            d : cic.Term (cic.type cic.z) A =>
            auto :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i (matita_arithmetics_nat.S m))) =>
            matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth (matita_arithmetics_nat.S m)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    matita_arithmetics_nat.O
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       matita_arithmetics_nat.O v a i))
                 d))
           (matita_arithmetics_nat.match_nat cic.prop
              (__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (__1 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S __1))))
                    (v :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S
                                  (matita_arithmetics_nat.S __1)))) =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (a : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop A
                          (d : cic.Term (cic.type cic.z) A =>
                           cic.prod cic.prop cic.prop
                             ((_A : cic.Univ cic.prop =>
                               matita_basics_logic.Not _A)
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __2 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __2)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   __ (matita_arithmetics_nat.S m)))
                             (__2 :
                                cic.Term cic.prop
                                  ((_A : cic.Univ cic.prop =>
                                    matita_basics_logic.Not _A)
                                     ((A1 :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       __2 :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z)))
                                           A1 =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1)
                                         _x __2)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        __ (matita_arithmetics_nat.S m))) =>
                              (A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __3 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __3)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth
                                   (matita_arithmetics_nat.S m)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_arithmetics_nat.S __1)
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         (matita_arithmetics_nat.S __1) v a
                                         __))
                                   d)
                                (matita_basics_lists_list.nth
                                   (matita_arithmetics_nat.S m)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S __1)))
                                      v)
                                   d)))))))
              (auto : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S auto)))) =>
               a : cic.Term (cic.type cic.z) A =>
               d : cic.Term (cic.type cic.z) A =>
               auto' :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         matita_arithmetics_nat.O
                         (matita_arithmetics_nat.S m))) =>
               matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth (matita_arithmetics_nat.S m)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S auto)
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S auto) v a
                          matita_arithmetics_nat.O))
                    d))
              (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               v :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     _n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_vectors.Vector
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                      (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                      (matita_arithmetics_nat.pred
                         (matita_arithmetics_nat.S
                            (matita_arithmetics_nat.S n)))) =>
               a : cic.Term (cic.type cic.z) A =>
               d : cic.Term (cic.type cic.z) A =>
               neqim :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.S i0)
                         (matita_arithmetics_nat.S m))) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth m
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       (matita_basics_vectors.vec_tail
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n) v))
                    d)
                 (x : cic.Term (cic.type cic.z) A =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) A)
                         x
                         (matita_basics_lists_list.nth m
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.S n))
                               (matita_basics_vectors.vec_tail
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.S n) v))
                            d)) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       x
                       (matita_basics_lists_list.nth
                          (matita_arithmetics_nat.S m)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S n)))
                             v)
                          d)))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       ((_A : cic.Univ (cic.type cic.z) =>
                         _n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_basics_vectors.Vector
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n)))
                    (matita_basics_vectors.vec_cons
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec_hd
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v)
                       n
                       (matita_basics_vectors.vec_tail
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.S n) v))
                    (x :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n)) =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.S n)))
                            x
                            (matita_basics_vectors.vec_cons
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_vectors.vec_hd
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n v)
                               n
                               (matita_basics_vectors.vec_tail
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.S n) v))) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth m
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                (matita_basics_vectors.vec_tail
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_arithmetics_nat.S n) v))
                             d)
                          (matita_basics_lists_list.nth
                             (matita_arithmetics_nat.S m)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S n)))
                                x)
                             d)))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth m
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             (matita_basics_vectors.vec_tail
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.S n) v))
                          d))
                    v
                    (matita_basics_vectors.vec_expand
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v))
                 (matita_basics_lists_list.nth m
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.vec_tail
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.S n) v)
                          a i0))
                    d)
                 (Hind i0 n
                    (matita_basics_vectors.vec_tail
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.S n) v)
                    a d
                    (matita_basics_logic.not_to_not
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          i0 m)
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S i0)
                          (matita_arithmetics_nat.S m))
                       (auto :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               i0 m) =>
                        matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          m
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.S x)
                                (matita_arithmetics_nat.S m)))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S m))
                          i0 auto)
                       neqim)))
              i)
           _clearme)
        j.

def change_vec_same :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (sig : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (i :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod (cic.type cic.z) cic.prop sig
                       (d : cic.Term (cic.type cic.z) sig =>
                        (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   sig)
                                n))
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             n v
                             (matita_basics_lists_list.nth i
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   sig)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) sig)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   v)
                                d)
                             i)
                          v))))))
      :=
      sig : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
             (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      d : cic.Term (cic.type cic.z) sig =>
      matita_basics_vectors.eq_vec
        (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v
           (matita_basics_lists_list.nth i
              (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)) v)
              d)
           i)
        v d
        (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hi0 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i0 n) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i i0)
           (matita_basics_logic.Not
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 i i0))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i i0)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         i i0))) =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) sig)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v
                       (matita_basics_lists_list.nth i
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             v)
                          d)
                       i))
                 d)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v)
                 d))
           (Hi00 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   i i0) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i0
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x i0) =>
               cic.lift cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             n v
                             (matita_basics_lists_list.nth x
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   sig)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) sig)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   v)
                                d)
                             x))
                       d)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v)
                       d)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    sig)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       v)
                    d)
                 (x : cic.Term (cic.type cic.z) sig =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) sig)
                         x
                         (matita_basics_lists_list.nth i0
                            (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  sig)
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.S n))
                               v)
                            d)) =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) sig)
                       x
                       (matita_basics_lists_list.nth i0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             n v)
                          d)))
                 (matita_basics_logic.refl
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v)
                       d))
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v
                          (matita_basics_lists_list.nth i0
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   sig)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                v)
                             d)
                          i0))
                    d)
                 (matita_basics_vectors.nth_change_vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) i0 n v
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v)
                       d)
                    d Hi0))
              i Hi00)
           (Hi00 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i i0)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) sig)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))
                    v)
                 d)
              (x : cic.Term (cic.type cic.z) sig =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) sig)
                      x
                      (matita_basics_lists_list.nth i0
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n))
                            v)
                         d)) =>
               cic.lift cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    x
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v)
                       d)))
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    sig)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       v)
                    d))
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v
                       (matita_basics_lists_list.nth i
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             v)
                          d)
                       i))
                 d)
              (matita_basics_vectors.nth_change_vec_neq
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig) i0 i n v
                 (matita_basics_lists_list.nth i
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       v)
                    d)
                 d Hi00))
           (matita_arithmetics_nat.decidable_eq_nat i i0)).

change_vec_cons_tail :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
          (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
           cic.prod (cic.type cic.z) cic.prop
             ((_A : cic.Univ (cic.type cic.z) =>
               _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_basics_vectors.Vector
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
             (vA :
                cic.Term (cic.type cic.z)
                  ((_A : cic.Univ (cic.type cic.z) =>
                    _n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    matita_basics_vectors.Vector
                      (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                     (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
              cic.prod (cic.type cic.z) cic.prop A
                (a : cic.Term (cic.type cic.z) A =>
                 cic.prod (cic.type cic.z) cic.prop A
                   (b : cic.Term (cic.type cic.z) A =>
                    cic.prod (cic.type cic.z) cic.prop
                      matita_arithmetics_nat.nat
                      (i :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            ((_A : cic.Univ (cic.type cic.z) =>
                              _n :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_basics_vectors.Vector
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A)
                                _n)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.S n)))
                         (matita_basics_vectors.change_vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.S n)
                            (matita_basics_vectors.vec_cons
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               a n vA)
                            b (matita_arithmetics_nat.S i))
                         (matita_basics_vectors.vec_cons
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) a
                            n
                            (matita_basics_vectors.change_vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n vA b i))))))))).

def change_vec_commute :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (a : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (b : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.prod (cic.type cic.z) cic.prop
                             matita_arithmetics_nat.nat
                             (j :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.prod cic.prop cic.prop
                                ((_A : cic.Univ cic.prop =>
                                  matita_basics_logic.Not _A)
                                   ((A1 :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A1)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      i j))
                                (__ :
                                   cic.Term cic.prop
                                     ((_A : cic.Univ cic.prop =>
                                       matita_basics_logic.Not _A)
                                        ((A1 :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A1 =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A1 =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A1)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           i j)) =>
                                 (A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((_A : cic.Univ (cic.type cic.z) =>
                                        _n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_basics_vectors.Vector
                                          (cic.lift (cic.type cic.z)
                                             (cic.type cic.z) _A)
                                          _n)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n))
                                   (matita_basics_vectors.change_vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v a i)
                                      b j)
                                   (matita_basics_vectors.change_vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) A)
                                         n v b j)
                                      a i))))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      j : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      Hij :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
             ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A1)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                i j)) =>
      matita_basics_vectors.eq_vec
        (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
           (matita_basics_vectors.change_vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v a i)
           b j)
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
           (matita_basics_vectors.change_vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v b j)
           a i)
        a
        (k : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hk :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) k n) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              k i)
           (matita_basics_logic.Not
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 k i))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      k i)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         k i))) =>
            (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A1)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth k
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b j))
                 a)
              (matita_basics_lists_list.nth k
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          b j)
                       a i))
                 a))
           (Hki :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   k i) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x i) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth x
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v a i)
                             b j))
                       a)
                    (matita_basics_lists_list.nth x
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v b j)
                             a i))
                       a)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 a
                 (x : cic.Term (cic.type cic.z) A =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) A)
                         x a) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth i
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v a i)
                                b j))
                          a)
                       x))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth i
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v a i))
                       a)
                    (x : cic.Term (cic.type cic.z) A =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            x
                            (matita_basics_lists_list.nth i
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_vectors.vec
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.S n))
                                  (matita_basics_vectors.change_vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     n v a i))
                               a)) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          x a))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       a
                       (x : cic.Term (cic.type cic.z) A =>
                        __ :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               x a) =>
                        cic.lift cic.prop cic.prop
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             x a))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          a)
                       (matita_basics_lists_list.nth i
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                v a i))
                          a)
                       (matita_basics_vectors.nth_change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) i
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v a a
                          (matita_basics_logic.eq_coerc
                             (cic.lift cic.prop (cic.type cic.z)
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) k n))
                             (cic.lift cic.prop (cic.type cic.z)
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) i
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))))
                             Hk
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                i
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((A1 :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A1 =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A1)
                                       _x __)
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.univ (cic.type cic.z)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            x n))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            i
                                            (matita_arithmetics_nat.pred
                                               (matita_arithmetics_nat.S n))))))
                                (matita_basics_logic.rewrite_l
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   n
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A1 :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1 =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1 =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A1)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.univ (cic.type cic.z)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               i n))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               i x))))
                                   (matita_basics_logic.refl
                                      (cic.lift (cic.type (cic.s cic.z))
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.univ (cic.type cic.z)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            i n)))
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   (matita_arithmetics_nat.pred_Sn n))
                                k Hki))))
                    (matita_basics_lists_list.nth i
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v a i)
                             b j))
                       a)
                    (matita_basics_vectors.nth_change_vec_neq
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) i j n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b a
                       (matita_basics_logic.sym_not_eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          i j Hij)))
                 (matita_basics_lists_list.nth i
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b j)
                          a i))
                    a)
                 (matita_basics_vectors.nth_change_vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) i n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v b j)
                    a a
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) k n))
                       (cic.lift cic.prop (cic.type cic.z)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) i n))
                       Hk
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          i
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.univ (cic.type cic.z)))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) x n))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) i n))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.univ (cic.type cic.z)))
                             (cic.lift cic.prop (cic.type cic.z)
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) i n)))
                          k Hki))))
              k Hki)
           (Hki :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      k i)) =>
            matita_basics_logic.match_Or cic.prop
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 k j)
              (matita_basics_logic.Not
                 (matita_basics_logic.eq
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    k j))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         k j)
                      ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            k j))) =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth k
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v a i)
                          b j))
                    a)
                 (matita_basics_lists_list.nth k
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b j)
                          a i))
                    a))
              (Hkj :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      k j) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 j
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x j) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth x
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v a i)
                                b j))
                          a)
                       (matita_basics_lists_list.nth x
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v b j)
                                a i))
                          a)))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    b
                    (x : cic.Term (cic.type cic.z) A =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            x b) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          x
                          (matita_basics_lists_list.nth j
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n
                                   (matita_basics_vectors.change_vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n v b j)
                                   a i))
                             a)))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth j
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v b j))
                          a)
                       (x : cic.Term (cic.type cic.z) A =>
                        __ :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               x
                               (matita_basics_lists_list.nth j
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.S n))
                                     (matita_basics_vectors.change_vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        n v b j))
                                  a)) =>
                        cic.lift cic.prop cic.prop
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             b x))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          b
                          (x : cic.Term (cic.type cic.z) A =>
                           __ :
                             cic.Term cic.prop
                               ((A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) A)
                                  x b) =>
                           cic.lift cic.prop cic.prop
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                b x))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             b)
                          (matita_basics_lists_list.nth j
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   v b j))
                             a)
                          (matita_basics_vectors.nth_change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) j
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             v b a
                             (matita_basics_logic.eq_coerc
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) k n))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) j
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S n))))
                                Hk
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   j
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A1 :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1 =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A1 =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A1)
                                          _x __)
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.univ (cic.type cic.z)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               x n))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               j
                                               (matita_arithmetics_nat.pred
                                                  (matita_arithmetics_nat.S n))))))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      n
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A1 :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A1 =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A1 =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A1)
                                             _x __)
                                            (cic.lift
                                               (cic.type (cic.s cic.z))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.univ (cic.type cic.z)))
                                            (cic.lift cic.prop
                                               (cic.type cic.z)
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  j n))
                                            (cic.lift cic.prop
                                               (cic.type cic.z)
                                               ((__ :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 __1 :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_nat.lt __
                                                   __1)
                                                  j x))))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type (cic.s cic.z))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.univ (cic.type cic.z)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((__ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __1 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __
                                                __1)
                                               j n)))
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S n))
                                      (matita_arithmetics_nat.pred_Sn n))
                                   k Hkj))))
                       (matita_basics_lists_list.nth j
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v b j)
                                a i))
                          a)
                       (matita_basics_vectors.nth_change_vec_neq
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) j i
                          n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b j)
                          a a Hij))
                    (matita_basics_lists_list.nth j
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v a i)
                             b j))
                       a)
                    (matita_basics_vectors.nth_change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) j n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b a
                       (matita_basics_logic.eq_coerc
                          (cic.lift cic.prop (cic.type cic.z)
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) k n))
                          (cic.lift cic.prop (cic.type cic.z)
                             ((__ :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __ __1) j n))
                          Hk
                          (matita_basics_logic.rewrite_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             j
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop
                                (cic.type (cic.s (cic.s cic.z)))
                                ((A1 :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A1 =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A1)
                                    _x __)
                                   (cic.lift (cic.type (cic.s cic.z))
                                      (cic.type (cic.s (cic.s cic.z)))
                                      (cic.univ (cic.type cic.z)))
                                   (cic.lift cic.prop (cic.type cic.z)
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) x n))
                                   (cic.lift cic.prop (cic.type cic.z)
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) j n))))
                             (matita_basics_logic.refl
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.univ (cic.type cic.z)))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) j n)))
                             k Hkj))))
                 k Hkj)
              (Hkj :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         k j)) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth k
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          b j))
                    a)
                 (x : cic.Term (cic.type cic.z) A =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) A)
                         x
                         (matita_basics_lists_list.nth k
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.S n))
                               (matita_basics_vectors.change_vec
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n v b j))
                            a)) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth k
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v a i)
                                b j))
                          a)
                       x))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth k
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v a i))
                       a)
                    (x : cic.Term (cic.type cic.z) A =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            x
                            (matita_basics_lists_list.nth k
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_vectors.vec
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.S n))
                                  (matita_basics_vectors.change_vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     n v a i))
                               a)) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          x
                          (matita_basics_lists_list.nth k
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v b j))
                             a)))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth k
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))))
                             v)
                          a)
                       (x : cic.Term (cic.type cic.z) A =>
                        __ :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z))) A)
                               x
                               (matita_basics_lists_list.nth k
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_basics_vectors.vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.S
                                           (matita_arithmetics_nat.pred
                                              (matita_arithmetics_nat.S n))))
                                     v)
                                  a)) =>
                        cic.lift cic.prop cic.prop
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __1 :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __1)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             x
                             (matita_basics_lists_list.nth k
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   (matita_basics_vectors.change_vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      n v b j))
                                a)))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth k
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S n))))
                                v)
                             a)
                          (x : cic.Term (cic.type cic.z) A =>
                           __ :
                             cic.Term cic.prop
                               ((A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z))) A)
                                  x
                                  (matita_basics_lists_list.nth k
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (matita_basics_vectors.vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (matita_arithmetics_nat.pred
                                           (matita_arithmetics_nat.S
                                              (matita_arithmetics_nat.pred
                                                 (matita_arithmetics_nat.S n))))
                                        v)
                                     a)) =>
                           cic.lift cic.prop cic.prop
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                (matita_basics_lists_list.nth k
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_basics_vectors.vec
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) A)
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.pred
                                               (matita_arithmetics_nat.S n))))
                                      v)
                                   a)
                                x))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z))) A)
                             (matita_basics_lists_list.nth k
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_basics_vectors.vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.pred
                                            (matita_arithmetics_nat.S n))))
                                   v)
                                a))
                          (matita_basics_lists_list.nth k
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))
                                   v b j))
                             a)
                          (matita_basics_vectors.nth_change_vec_neq
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) k
                             j
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             v b a
                             (matita_basics_logic.sym_not_eq
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                k j Hkj)))
                       (matita_basics_lists_list.nth k
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S n))
                                v a i))
                          a)
                       (matita_basics_vectors.nth_change_vec_neq
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) k i
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v a a
                          (matita_basics_logic.sym_not_eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             k i Hki)))
                    (matita_basics_lists_list.nth k
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v a i)
                             b j))
                       a)
                    (matita_basics_vectors.nth_change_vec_neq
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) k j n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b a
                       (matita_basics_logic.sym_not_eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          k j Hkj)))
                 (matita_basics_lists_list.nth k
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b j)
                          a i))
                    a)
                 (matita_basics_vectors.nth_change_vec_neq
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) k i n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v b j)
                    a a
                    (matita_basics_logic.sym_not_eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       k i Hki)))
              (matita_arithmetics_nat.decidable_eq_nat k j))
           (matita_arithmetics_nat.decidable_eq_nat k i)).

def change_vec_change_vec :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n)))
                 (v :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n))) =>
                  cic.prod (cic.type cic.z) cic.prop A
                    (a : cic.Term (cic.type cic.z) A =>
                     cic.prod (cic.type cic.z) cic.prop A
                       (b : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) cic.prop
                          matita_arithmetics_nat.nat
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                ((_A : cic.Univ (cic.type cic.z) =>
                                  _n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_basics_vectors.Vector
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) _A)
                                    _n)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n))
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n
                                (matita_basics_vectors.change_vec
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   n v a i)
                                b i)
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v b i))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
             (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))) =>
      a : cic.Term (cic.type cic.z) A =>
      b : cic.Term (cic.type cic.z) A =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_vectors.eq_vec
        (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
           (matita_basics_vectors.change_vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v a i)
           b i)
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v b i)
        a
        (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hi0 :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i0 n) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i i0)
           (matita_basics_logic.Not
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 i i0))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i i0)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         i i0))) =>
            (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A1)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b i))
                 a)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v b i))
                 a))
           (Hii0 :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   i i0) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i0
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x i0) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v a x)
                             b x))
                       a)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b x))
                       a)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 b
                 (x : cic.Term (cic.type cic.z) A =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) A)
                         x b) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       x
                       (matita_basics_lists_list.nth i0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v b i0))
                          a)))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    b
                    (x : cic.Term (cic.type cic.z) A =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            x b) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          b x))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       b)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b i0))
                       a)
                    (matita_basics_vectors.nth_change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) i0 n v
                       b a Hi0))
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v a i0)
                          b i0))
                    a)
                 (matita_basics_vectors.nth_change_vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) i0 n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v a
                       i0)
                    b a Hi0))
              i Hii0)
           (Hii0 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i i0)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) A)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v a i))
                 a)
              (x : cic.Term (cic.type cic.z) A =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) A)
                      x
                      (matita_basics_lists_list.nth i0
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n))
                            (matita_basics_vectors.change_vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               n v a i))
                         a)) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    x
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b i))
                       a)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    A)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S n))))
                       v)
                    a)
                 (x : cic.Term (cic.type cic.z) A =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) A)
                         x
                         (matita_basics_lists_list.nth i0
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            (matita_basics_vectors.vec
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_arithmetics_nat.pred
                                  (matita_arithmetics_nat.S
                                     (matita_arithmetics_nat.pred
                                        (matita_arithmetics_nat.S n))))
                               v)
                            a)) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       x
                       (matita_basics_lists_list.nth i0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             (matita_basics_vectors.change_vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                n v b i))
                          a)))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) A)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v)
                       a)
                    (x : cic.Term (cic.type cic.z) A =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z))) A)
                            x
                            (matita_basics_lists_list.nth i0
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (matita_basics_vectors.vec
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  (matita_arithmetics_nat.pred
                                     (matita_arithmetics_nat.S n))
                                  v)
                               a)) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) A)
                          (matita_basics_lists_list.nth i0
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_basics_vectors.vec
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (matita_arithmetics_nat.pred
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.pred
                                         (matita_arithmetics_nat.S n))))
                                v)
                             a)
                          x))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) A)
                       (matita_basics_lists_list.nth i0
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (matita_arithmetics_nat.pred
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.pred
                                      (matita_arithmetics_nat.S n))))
                             v)
                          a))
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                             v b i))
                       a)
                    (matita_basics_vectors.nth_change_vec_neq
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) i0 i n
                       v b a Hii0))
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (matita_arithmetics_nat.pred
                             (matita_arithmetics_nat.S n))
                          v a i))
                    a)
                 (matita_basics_vectors.nth_change_vec_neq
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) i0 i
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))
                    v a a Hii0))
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v
                          a i)
                       b i))
                 a)
              (matita_basics_vectors.nth_change_vec_neq
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) i0 i n
                 (matita_basics_vectors.change_vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n v a i)
                 b a Hii0))
           (matita_arithmetics_nat.decidable_eq_nat i i0)).

def eq_vec_change_vec :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (sig : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop
                 ((_A : cic.Univ (cic.type cic.z) =>
                   _n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_basics_vectors.Vector
                     (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n)
                 (v1 :
                    cic.Term (cic.type cic.z)
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n) =>
                  cic.prod (cic.type cic.z) cic.prop
                    ((_A : cic.Univ (cic.type cic.z) =>
                      _n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_basics_vectors.Vector
                        (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n)
                    (v2 :
                       cic.Term (cic.type cic.z)
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                            n) =>
                     cic.prod (cic.type cic.z) cic.prop
                       matita_arithmetics_nat.nat
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) cic.prop sig
                          (t : cic.Term (cic.type cic.z) sig =>
                           cic.prod (cic.type cic.z) cic.prop sig
                             (d : cic.Term (cic.type cic.z) sig =>
                              cic.prod cic.prop cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z))) sig)
                                   (matita_basics_lists_list.nth i
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) sig)
                                      (matita_basics_vectors.vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) sig)
                                         n v2)
                                      d)
                                   t)
                                (__ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           sig)
                                        (matita_basics_lists_list.nth i
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) sig)
                                           (matita_basics_vectors.vec
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type cic.z) sig)
                                              n v2)
                                           d)
                                        t) =>
                                 cic.prod cic.prop cic.prop
                                   (cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (j :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           matita_basics_logic.Not _A)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __1 :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __1)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               i j))
                                         (__1 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                matita_basics_logic.Not _A)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __1)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    i j)) =>
                                          (A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __2 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __2)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               sig)
                                            (matita_basics_lists_list.nth j
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) sig)
                                               (matita_basics_vectors.vec
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) sig)
                                                  n v1)
                                               d)
                                            (matita_basics_lists_list.nth j
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type cic.z) sig)
                                               (matita_basics_vectors.vec
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type cic.z) sig)
                                                  n v2)
                                               d))))
                                   (__1 :
                                      cic.Term cic.prop
                                        (cic.prod (cic.type cic.z) cic.prop
                                           matita_arithmetics_nat.nat
                                           (j :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.prod cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                matita_basics_logic.Not _A)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __1 :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __1)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    i j))
                                              (__1 :
                                                 cic.Term cic.prop
                                                   ((_A :
                                                       cic.Univ cic.prop =>
                                                     matita_basics_logic.Not
                                                       _A)
                                                      ((A :
                                                          cic.Univ
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z))) =>
                                                        _x :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        __1 :
                                                          cic.Term
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A =>
                                                        matita_basics_logic.eq
                                                          (cic.lift
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A)
                                                          _x __1)
                                                         (cic.lift
                                                            (cic.type cic.z)
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            matita_arithmetics_nat.nat)
                                                         i j)) =>
                                               (A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __2 :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __2)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    sig)
                                                 (matita_basics_lists_list.nth
                                                    j
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) sig)
                                                    (matita_basics_vectors.vec
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z)
                                                          sig)
                                                       n v1)
                                                    d)
                                                 (matita_basics_lists_list.nth
                                                    j
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type cic.z) sig)
                                                    (matita_basics_vectors.vec
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type cic.z)
                                                          sig)
                                                       n v2)
                                                    d)))) =>
                                    (A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __2 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __2)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((_A : cic.Univ (cic.type cic.z) =>
                                           _n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_basics_vectors.Vector
                                             (cic.lift (cic.type cic.z)
                                                (cic.type cic.z) _A)
                                             _n)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) sig)
                                            n))
                                      v2
                                      (matita_basics_vectors.change_vec
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) sig)
                                         n v1 t i)))))))))))
      :=
      sig : cic.Univ (cic.type cic.z) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      v1 :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n) =>
      v2 :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n) =>
      i : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      t : cic.Term (cic.type cic.z) sig =>
      d : cic.Term (cic.type cic.z) sig =>
      H1 :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) sig)
             (matita_basics_lists_list.nth i
                (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                (matita_basics_vectors.vec
                   (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v2)
                d)
             t) =>
      H2 :
        cic.Term cic.prop
          (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
             (j : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.prod cic.prop cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i j))
                (__ :
                   cic.Term cic.prop
                     ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                          matita_basics_logic.eq
                            (cic.lift (cic.type (cic.s (cic.s cic.z)))
                               (cic.type (cic.s (cic.s cic.z))) A)
                            _x __)
                           (cic.lift (cic.type cic.z)
                              (cic.type (cic.s (cic.s cic.z)))
                              matita_arithmetics_nat.nat)
                           i j)) =>
                 (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __1)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z))) sig)
                   (matita_basics_lists_list.nth j
                      (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                      (matita_basics_vectors.vec
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                         v1)
                      d)
                   (matita_basics_lists_list.nth j
                      (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                      (matita_basics_vectors.vec
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                         v2)
                      d)))) =>
      matita_basics_vectors.eq_vec
        (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v2
        (matita_basics_vectors.change_vec
           (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v1 t i)
        d
        (i0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         Hlt :
           cic.Term cic.prop
             ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               matita_arithmetics_nat.lt __ __1) i0 n) =>
         matita_basics_logic.match_Or cic.prop
           (matita_basics_logic.eq
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i0 i)
           (matita_basics_logic.Not
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 i0 i))
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i0 i)
                   ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         i0 i))) =>
            (A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) sig)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v2)
                 d)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v1
                       t i))
                 d))
           (Hii0 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   i0 i) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              i
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x i) =>
               cic.lift cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    (matita_basics_lists_list.nth x
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v2)
                       d)
                    (matita_basics_lists_list.nth x
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          (matita_basics_vectors.change_vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             n v1 t i))
                       d)))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    sig)
                 t
                 (x : cic.Term (cic.type cic.z) sig =>
                  __ :
                    cic.Term cic.prop
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z))) sig)
                         x t) =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) sig)
                       (matita_basics_lists_list.nth i
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                             n v2)
                          d)
                       x))
                 (matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    t
                    (x : cic.Term (cic.type cic.z) sig =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z))) sig)
                          x t))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z))) sig)
                       t)
                    (matita_basics_lists_list.nth i
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v2)
                       d)
                    H1)
                 (matita_basics_lists_list.nth i
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                       (matita_basics_vectors.change_vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v1 t i))
                    d)
                 (matita_basics_vectors.nth_change_vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) i n v1 t
                    d
                    (matita_basics_logic.eq_coerc
                       (cic.lift cic.prop (cic.type cic.z)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) i0 n))
                       (cic.lift cic.prop (cic.type cic.z)
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) i n))
                       Hlt
                       (matita_basics_logic.rewrite_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          i
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type (cic.s cic.z))
                                   (cic.type (cic.s (cic.s cic.z)))
                                   (cic.univ (cic.type cic.z)))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) x n))
                                (cic.lift cic.prop (cic.type cic.z)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) i n))))
                          (matita_basics_logic.refl
                             (cic.lift (cic.type (cic.s cic.z))
                                (cic.type (cic.s (cic.s cic.z)))
                                (cic.univ (cic.type cic.z)))
                             (cic.lift cic.prop (cic.type cic.z)
                                ((__ :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __ __1) i n)))
                          i0 Hii0))))
              i0 Hii0)
           (Hii0 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop => matita_basics_logic.Not _A)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      i0 i)) =>
            matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z))) sig)
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_arithmetics_nat.pred (matita_arithmetics_nat.S n))
                    v1)
                 d)
              (x : cic.Term (cic.type cic.z) sig =>
               __ :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z))) sig)
                      x
                      (matita_basics_lists_list.nth i0
                         (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n))
                            v1)
                         d)) =>
               cic.lift cic.prop cic.prop
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z))) sig)
                    (matita_basics_lists_list.nth i0
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_basics_vectors.vec
                          (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                          v2)
                       d)
                    x))
              (matita_basics_logic.sym_eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    sig)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                       (matita_arithmetics_nat.pred
                          (matita_arithmetics_nat.S n))
                       v1)
                    d)
                 (matita_basics_lists_list.nth i0
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v2)
                    d)
                 (H2 i0
                    (matita_basics_logic.sym_not_eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       i0 i Hii0)))
              (matita_basics_lists_list.nth i0
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n
                    (matita_basics_vectors.change_vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) sig) n v1
                       t i))
                 d)
              (matita_basics_vectors.nth_change_vec_neq
                 (cic.lift (cic.type cic.z) (cic.type cic.z) sig) i0 i n v1 t
                 d
                 (matita_basics_logic.sym_not_eq
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    i0 i Hii0)))
           (matita_arithmetics_nat.decidable_eq_nat i0 i)).

def pmap :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (H : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.univ (cic.type cic.z))
              (H0 : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.univ (cic.type cic.z))
                 (H1 : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) H
                       (__ : cic.Term (cic.type cic.z) H =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) H0
                          (__1 : cic.Term (cic.type cic.z) H0 => H1)))
                    (__ :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) H
                            (__ : cic.Term (cic.type cic.z) H =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) H0
                               (__1 : cic.Term (cic.type cic.z) H0 => H1))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) H))
                       (__1 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) H)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) H0))
                          (__2 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     H0)) =>
                           (_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) H1)))))))).

def pmap_body :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (H : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.univ (cic.type cic.z))
              (H0 : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.univ (cic.type cic.z))
                 (H1 : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) H
                       (__ : cic.Term (cic.type cic.z) H =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) H0
                          (__1 : cic.Term (cic.type cic.z) H0 => H1)))
                    (__ :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) H
                            (__ : cic.Term (cic.type cic.z) H =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) H0
                               (__1 : cic.Term (cic.type cic.z) H0 => H1))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       ((_A : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) H))
                       (__1 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) H)) =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) H0))
                          (__2 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     H0)) =>
                           (_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) H1)))))))).

[ H, H0, H1, __, __1 ] pmap H H0 H1 __ __1 -->
  matita_basics_lists_list.filter_list (cic.type cic.z) H
    (__1 :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
            (cic.lift (cic.type cic.z) (cic.type cic.z) H)) =>
     cic.prod (cic.type cic.z) (cic.type cic.z)
       ((_A : cic.Univ (cic.type cic.z) =>
         matita_basics_lists_list.list
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
          (cic.lift (cic.type cic.z) (cic.type cic.z) H0))
       (__2 :
          cic.Term (cic.type cic.z)
            ((_A : cic.Univ (cic.type cic.z) =>
              matita_basics_lists_list.list
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
               (cic.lift (cic.type cic.z) (cic.type cic.z) H0)) =>
        (_A : cic.Univ (cic.type cic.z) =>
         matita_basics_lists_list.list
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
          (cic.lift (cic.type cic.z) (cic.type cic.z) H1)))
    (matita_basics_vectors.pmap_body
       (cic.lift (cic.type cic.z) (cic.type cic.z) H)
       (cic.lift (cic.type cic.z) (cic.type cic.z) H0)
       (cic.lift (cic.type cic.z) (cic.type cic.z) H1) __)
    __1.

[ H, H0, H1, __, __1 ] pmap_body H H0 H1 __ __1 -->
  l2 :
    cic.Term (cic.type cic.z)
      ((_A : cic.Univ (cic.type cic.z) =>
        matita_basics_lists_list.list
          (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
         (cic.lift (cic.type cic.z) (cic.type cic.z) H0)) =>
  matita_basics_lists_list.match_list (cic.type cic.z)
    (cic.lift (cic.type cic.z) (cic.type cic.z) H)
    (__2 :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
            (cic.lift (cic.type cic.z) (cic.type cic.z) H)) =>
     (_A : cic.Univ (cic.type cic.z) =>
      matita_basics_lists_list.list
        (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
       (cic.lift (cic.type cic.z) (cic.type cic.z) H1))
    (matita_basics_lists_list.nil
       (cic.lift (cic.type cic.z) (cic.type cic.z) H1))
    (a : cic.Term (cic.type cic.z) H =>
     tlA :
       cic.Term (cic.type cic.z)
         ((_A : cic.Univ (cic.type cic.z) =>
           matita_basics_lists_list.list
             (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
            (cic.lift (cic.type cic.z) (cic.type cic.z) H)) =>
     matita_basics_lists_list.match_list (cic.type cic.z)
       (cic.lift (cic.type cic.z) (cic.type cic.z) H0)
       (__2 :
          cic.Term (cic.type cic.z)
            ((_A : cic.Univ (cic.type cic.z) =>
              matita_basics_lists_list.list
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
               (cic.lift (cic.type cic.z) (cic.type cic.z) H0)) =>
        (_A : cic.Univ (cic.type cic.z) =>
         matita_basics_lists_list.list
           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
          (cic.lift (cic.type cic.z) (cic.type cic.z) H1))
       (matita_basics_lists_list.nil
          (cic.lift (cic.type cic.z) (cic.type cic.z) H1))
       (b : cic.Term (cic.type cic.z) H0 =>
        tlB :
          cic.Term (cic.type cic.z)
            ((_A : cic.Univ (cic.type cic.z) =>
              matita_basics_lists_list.list
                (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
               (cic.lift (cic.type cic.z) (cic.type cic.z) H0)) =>
        matita_basics_lists_list.cons
          (cic.lift (cic.type cic.z) (cic.type cic.z) H1) (__ a b)
          (matita_basics_vectors.pmap
             (cic.lift (cic.type cic.z) (cic.type cic.z) H)
             (cic.lift (cic.type cic.z) (cic.type cic.z) H0)
             (cic.lift (cic.type cic.z) (cic.type cic.z) H1) __ tlA tlB))
       l2)
    __1.

def length_pmap :
      cic.Term cic.prop
        (cic.prod (cic.type (cic.s cic.z)) cic.prop
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) cic.prop
              (cic.univ (cic.type cic.z))
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) cic.prop
                 (cic.univ (cic.type cic.z))
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) cic.prop
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__ : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (__1 : cic.Term (cic.type cic.z) B => C)))
                    (f :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (__1 : cic.Term (cic.type cic.z) B => C))) =>
                     cic.prod (cic.type cic.z) cic.prop
                       ((_A : cic.Univ (cic.type cic.z) =>
                         matita_basics_lists_list.list
                           (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                       (l1 :
                          cic.Term (cic.type cic.z)
                            ((_A : cic.Univ (cic.type cic.z) =>
                              matita_basics_lists_list.list
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   _A))
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
                        cic.prod (cic.type cic.z) cic.prop
                          ((_A : cic.Univ (cic.type cic.z) =>
                            matita_basics_lists_list.list
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                          (l2 :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 matita_basics_lists_list.list
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A))
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)) =>
                           (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                (matita_basics_vectors.pmap
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) C)
                                   f l1 l2))
                             (matita_arithmetics_nat.min
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   l1)
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   l2)))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) B
                (__1 : cic.Term (cic.type cic.z) B => C))) =>
      l1 :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            matita_basics_lists_list.list
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
             (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
      matita_basics_lists_list.list_ind
        (cic.lift (cic.type cic.z) (cic.type cic.z) A)
        (_x_716 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
         cic.lift cic.prop cic.prop
           (cic.prod (cic.type cic.z) cic.prop
              ((_A : cic.Univ (cic.type cic.z) =>
                matita_basics_lists_list.list
                  (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B))
              (l2 :
                 cic.Term (cic.type cic.z)
                   ((_A : cic.Univ (cic.type cic.z) =>
                     matita_basics_lists_list.list
                       (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                      (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
               (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                    (matita_basics_vectors.pmap
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                       (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                       _x_716 l2))
                 (matita_arithmetics_nat.min
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) _x_716)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) l2)))))
        (l2 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
         matita_basics_logic.refl
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) C)
              (matita_basics_vectors.pmap
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                 (matita_basics_lists_list.nil
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A))
                 l2)))
        (a : cic.Term (cic.type cic.z) A =>
         tlA :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) A)) =>
         Hind :
           cic.Term cic.prop
             (cic.prod (cic.type cic.z) cic.prop
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B))
                (l2 :
                   cic.Term (cic.type cic.z)
                     ((_A : cic.Univ (cic.type cic.z) =>
                       matita_basics_lists_list.list
                         (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                        (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
                 (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_basics_lists_list.length
                      (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                      (matita_basics_vectors.pmap
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) C) f tlA
                         l2))
                   (matita_arithmetics_nat.min
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B) l2)))) =>
         l2 :
           cic.Term (cic.type cic.z)
             ((_A : cic.Univ (cic.type cic.z) =>
               matita_basics_lists_list.list
                 (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
         matita_basics_lists_list.match_list cic.prop
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (__ :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
            (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A1)
               _x __1)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                 (matita_basics_vectors.pmap
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                    (matita_basics_lists_list.cons
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) a tlA)
                    __))
              (matita_arithmetics_nat.min
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (matita_basics_lists_list.cons
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) a tlA))
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B) __)))
           (matita_basics_logic.refl
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                 (matita_basics_vectors.pmap
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                    (matita_basics_lists_list.cons
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) a tlA)
                    (matita_basics_lists_list.nil
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B)))))
           (b : cic.Term (cic.type cic.z) B =>
            tlB :
              cic.Term (cic.type cic.z)
                ((_A : cic.Univ (cic.type cic.z) =>
                  matita_basics_lists_list.list
                    (cic.lift (cic.type cic.z) (cic.type cic.z) _A))
                   (cic.lift (cic.type cic.z) (cic.type cic.z) B)) =>
            matita_basics_logic.match_Or cic.prop
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_basics_bool.bool)
                 (matita_arithmetics_nat.leb
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                 matita_basics_bool.true)
              (matita_basics_logic.eq
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_basics_bool.bool)
                 (matita_arithmetics_nat.leb
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                 matita_basics_bool.false)
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_basics_bool.bool)
                         (matita_arithmetics_nat.leb
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               tlA)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               tlB))
                         matita_basics_bool.true)
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_basics_bool.bool)
                         (matita_arithmetics_nat.leb
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               tlA)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               tlB))
                         matita_basics_bool.false)) =>
               cic.prod cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                       (matita_basics_vectors.pmap
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                          tlA tlB))
                    (matita_basics_bool.match_bool (cic.type cic.z)
                       (_0 :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB)
                       (matita_arithmetics_nat.leb
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             tlA)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             tlB))))
                 (__1 :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __1)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                            (matita_basics_vectors.pmap
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                               f tlA tlB))
                         (matita_basics_bool.match_bool (cic.type cic.z)
                            (_0 :
                               cic.Term (cic.type cic.z)
                                 matita_basics_bool.bool =>
                             matita_arithmetics_nat.nat)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               tlA)
                            (matita_basics_lists_list.length
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               tlB)
                            (matita_arithmetics_nat.leb
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  tlA)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     B)
                                  tlB)))) =>
                  (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __2 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __2)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.S
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                          (matita_basics_vectors.pmap
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                             tlA tlB)))
                    (matita_basics_bool.match_bool (cic.type cic.z)
                       (_0 :
                          cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                        matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.S
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             tlA))
                       (matita_arithmetics_nat.S
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             tlB))
                       (matita_arithmetics_nat.leb
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             tlA)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             tlB)))))
              (H :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_basics_bool.bool)
                      (matita_arithmetics_nat.leb
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            tlA)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            tlB))
                      matita_basics_bool.true) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_basics_bool.bool)
                 matita_basics_bool.true
                 (x : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_basics_bool.bool)
                         x matita_basics_bool.true) =>
                  cic.lift cic.prop cic.prop
                    (cic.prod cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                             (matita_basics_vectors.pmap
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                f tlA tlB))
                          (matita_basics_bool.match_bool (cic.type cic.z)
                             (_0 :
                                cic.Term (cic.type cic.z)
                                  matita_basics_bool.bool =>
                              matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB)
                             x))
                       (__1 :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     C)
                                  (matita_basics_vectors.pmap
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) C)
                                     f tlA tlB))
                               (matita_basics_bool.match_bool
                                  (cic.type cic.z)
                                  (_0 :
                                     cic.Term (cic.type cic.z)
                                       matita_basics_bool.bool =>
                                   matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     tlA)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     tlB)
                                  x)) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __2 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                (matita_basics_vectors.pmap
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) C)
                                   f tlA tlB)))
                          (matita_basics_bool.match_bool (cic.type cic.z)
                             (_0 :
                                cic.Term (cic.type cic.z)
                                  matita_basics_bool.bool =>
                              matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   tlA))
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   tlB))
                             x))))
                 (auto :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                            (matita_basics_vectors.pmap
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                               f tlA tlB))
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            tlA)) =>
                  matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.min
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S x)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   tlA))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA)))
                       (matita_arithmetics_nat.min
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             tlA)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             tlB))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                             (matita_basics_vectors.pmap
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                f tlA tlB))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   tlA)))
                          auto
                          (matita_arithmetics_nat.min
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB))
                          (Hind tlB)))
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                       (matita_basics_vectors.pmap
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                          tlA tlB))
                    (Hind tlB))
                 (matita_arithmetics_nat.leb
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                 H)
              (H :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_basics_bool.bool)
                      (matita_arithmetics_nat.leb
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                            tlA)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            tlB))
                      matita_basics_bool.false) =>
               matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_basics_bool.bool)
                 matita_basics_bool.false
                 (x : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_basics_bool.bool)
                         x matita_basics_bool.false) =>
                  cic.lift cic.prop cic.prop
                    (cic.prod cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                             (matita_basics_vectors.pmap
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                f tlA tlB))
                          (matita_basics_bool.match_bool (cic.type cic.z)
                             (_0 :
                                cic.Term (cic.type cic.z)
                                  matita_basics_bool.bool =>
                              matita_arithmetics_nat.nat)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB)
                             x))
                       (__1 :
                          cic.Term cic.prop
                            ((A1 :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              __1 :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A1)
                                _x __1)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               (matita_basics_lists_list.length
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     C)
                                  (matita_basics_vectors.pmap
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) C)
                                     f tlA tlB))
                               (matita_basics_bool.match_bool
                                  (cic.type cic.z)
                                  (_0 :
                                     cic.Term (cic.type cic.z)
                                       matita_basics_bool.bool =>
                                   matita_arithmetics_nat.nat)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     tlA)
                                  (matita_basics_lists_list.length
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     tlB)
                                  x)) =>
                        (A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __2 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __2)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                (matita_basics_vectors.pmap
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) C)
                                   f tlA tlB)))
                          (matita_basics_bool.match_bool (cic.type cic.z)
                             (_0 :
                                cic.Term (cic.type cic.z)
                                  matita_basics_bool.bool =>
                              matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) A)
                                   tlA))
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   tlB))
                             x))))
                 (auto :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                            (matita_basics_vectors.pmap
                               (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                               (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                               f tlA tlB))
                         (matita_basics_lists_list.length
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            tlB)) =>
                  matita_basics_logic.rewrite_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.min
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S x)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB))))
                    (matita_basics_logic.rewrite_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                          ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                            _x :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            __ :
                              cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                            matita_basics_logic.eq
                              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                 (cic.type (cic.s (cic.s cic.z))) A1)
                              _x __)
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.S x)
                             (matita_arithmetics_nat.S
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   tlB))))
                       (matita_basics_logic.refl
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.S
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB)))
                       (matita_arithmetics_nat.min
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             tlA)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                             tlB))
                       (matita_basics_logic.rewrite_l
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_lists_list.length
                             (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                             (matita_basics_vectors.pmap
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                f tlA tlB))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
                             ((A1 :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A1)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                x
                                (matita_basics_lists_list.length
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) B)
                                   tlB)))
                          auto
                          (matita_arithmetics_nat.min
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                tlA)
                             (matita_basics_lists_list.length
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                tlB))
                          (Hind tlB)))
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                       (matita_basics_vectors.pmap
                          (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                          tlA tlB))
                    (Hind tlB))
                 (matita_arithmetics_nat.leb
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB))
                 H)
              (matita_basics_bool.true_or_false
                 (matita_arithmetics_nat.leb
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) tlA)
                    (matita_basics_lists_list.length
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) tlB)))
              (Hind tlB))
           l2)
        l1.

def pmap_vec :
      cic.Term (cic.type (cic.s cic.z))
        (cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
           (cic.univ (cic.type cic.z))
           (A : cic.Univ (cic.type cic.z) =>
            cic.prod (cic.type (cic.s cic.z)) (cic.type (cic.s cic.z))
              (cic.univ (cic.type cic.z))
              (B : cic.Univ (cic.type cic.z) =>
               cic.prod (cic.type (cic.s cic.z)) (cic.type cic.z)
                 (cic.univ (cic.type cic.z))
                 (C : cic.Univ (cic.type cic.z) =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__ : cic.Term (cic.type cic.z) A =>
                        cic.prod (cic.type cic.z) (cic.type cic.z) B
                          (__1 : cic.Term (cic.type cic.z) B => C)))
                    (_f :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.prod (cic.type cic.z) (cic.type cic.z) B
                               (__1 : cic.Term (cic.type cic.z) B => C))) =>
                     cic.prod (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat
                       (n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.prod (cic.type cic.z) (cic.type cic.z)
                          ((_A : cic.Univ (cic.type cic.z) =>
                            _n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_basics_vectors.Vector
                              (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                              _n)
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                          (_vA :
                             cic.Term (cic.type cic.z)
                               ((_A : cic.Univ (cic.type cic.z) =>
                                 _n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_basics_vectors.Vector
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z) _A)
                                   _n)
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     A)
                                  n) =>
                           cic.prod (cic.type cic.z) (cic.type cic.z)
                             ((_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                                n)
                             (_vB :
                                cic.Term (cic.type cic.z)
                                  ((_A : cic.Univ (cic.type cic.z) =>
                                    _n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_basics_vectors.Vector
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z) _A)
                                      _n)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     n) =>
                              (_A : cic.Univ (cic.type cic.z) =>
                               _n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_basics_vectors.Vector
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    _A)
                                 _n)
                                (cic.lift (cic.type cic.z) (cic.type cic.z) C)
                                n))))))))
      :=
      A : cic.Univ (cic.type cic.z) =>
      B : cic.Univ (cic.type cic.z) =>
      C : cic.Univ (cic.type cic.z) =>
      f :
        cic.Term (cic.type cic.z)
          (cic.prod (cic.type cic.z) (cic.type cic.z) A
             (__ : cic.Term (cic.type cic.z) A =>
              cic.prod (cic.type cic.z) (cic.type cic.z) B
                (__1 : cic.Term (cic.type cic.z) B => C))) =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      vA :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) A) n) =>
      vB :
        cic.Term (cic.type cic.z)
          ((_A : cic.Univ (cic.type cic.z) =>
            _n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_basics_vectors.Vector
              (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
             (cic.lift (cic.type cic.z) (cic.type cic.z) B) n) =>
      matita_basics_vectors.mk_Vector
        (cic.lift (cic.type cic.z) (cic.type cic.z) C) n
        (matita_basics_vectors.pmap
           (cic.lift (cic.type cic.z) (cic.type cic.z) A)
           (cic.lift (cic.type cic.z) (cic.type cic.z) B)
           (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA)
           (matita_basics_vectors.vec
              (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.min
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA))
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB)))
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A1)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x
                   (matita_arithmetics_nat.min
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) A) n
                            vA))
                      (matita_basics_lists_list.length
                         (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                         (matita_basics_vectors.vec
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
                            vB)))) =>
            cic.lift cic.prop cic.prop
              ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A1)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x n))
           (matita_basics_logic.eq_ind_r
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              n
              (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               __ :
                 cic.Term cic.prop
                   ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A1)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      x n) =>
               cic.lift cic.prop cic.prop
                 ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A1)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.min x
                       (matita_basics_lists_list.length
                          (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                          (matita_basics_vectors.vec
                             (cic.lift (cic.type cic.z) (cic.type cic.z) B) n
                             vB)))
                    n))
              (matita_basics_logic.eq_ind_r
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 n
                 (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  __ :
                    cic.Term cic.prop
                      ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A1)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         x n) =>
                  cic.lift cic.prop cic.prop
                    ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                      _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                      matita_basics_logic.eq
                        (cic.lift (cic.type (cic.s (cic.s cic.z)))
                           (cic.type (cic.s (cic.s cic.z))) A1)
                        _x __1)
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.min n x) n))
                 (matita_basics_logic.eq_ind_r
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_basics_bool.bool)
                    matita_basics_bool.true
                    (x : cic.Term (cic.type cic.z) matita_basics_bool.bool =>
                     __ :
                       cic.Term cic.prop
                         ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A1)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_basics_bool.bool)
                            x matita_basics_bool.true) =>
                     cic.lift cic.prop cic.prop
                       ((A1 : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                         _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         __1 :
                           cic.Term (cic.type (cic.s (cic.s cic.z))) A1 =>
                         matita_basics_logic.eq
                           (cic.lift (cic.type (cic.s (cic.s cic.z)))
                              (cic.type (cic.s (cic.s cic.z))) A1)
                           _x __1)
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_basics_bool.match_bool (cic.type cic.z)
                             (_0 :
                                cic.Term (cic.type cic.z)
                                  matita_basics_bool.bool =>
                              matita_arithmetics_nat.nat)
                             n n x)
                          n))
                    (matita_basics_logic.refl
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_basics_bool.match_bool (cic.type cic.z)
                          (__ :
                             cic.Term (cic.type cic.z)
                               matita_basics_bool.bool =>
                           matita_arithmetics_nat.nat)
                          n n matita_basics_bool.true))
                    (matita_arithmetics_nat.leb n n)
                    (matita_arithmetics_nat.le_to_leb_true n n
                       (matita_arithmetics_nat.le_n n)))
                 (matita_basics_lists_list.length
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                    (matita_basics_vectors.vec
                       (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB))
                 (matita_basics_vectors.len
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB))
              (matita_basics_lists_list.length
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA))
              (matita_basics_vectors.len
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA))
           (matita_basics_lists_list.length
              (cic.lift (cic.type cic.z) (cic.type cic.z) C)
              (matita_basics_vectors.pmap
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                 (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA)
                 (matita_basics_vectors.vec
                    (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB)))
           (matita_basics_vectors.length_pmap
              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
              (cic.lift (cic.type cic.z) (cic.type cic.z) B)
              (cic.lift (cic.type cic.z) (cic.type cic.z) C) f
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) n vA)
              (matita_basics_vectors.vec
                 (cic.lift (cic.type cic.z) (cic.type cic.z) B) n vB))).

pmap_vec_cons :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type (cic.s cic.z)) cic.prop
          (cic.univ (cic.type cic.z))
          (B : cic.Univ (cic.type cic.z) =>
           cic.prod (cic.type (cic.s cic.z)) cic.prop
             (cic.univ (cic.type cic.z))
             (C : cic.Univ (cic.type cic.z) =>
              cic.prod (cic.type cic.z) cic.prop
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A =>
                    cic.prod (cic.type cic.z) (cic.type cic.z) B
                      (__1 : cic.Term (cic.type cic.z) B => C)))
                (f :
                   cic.Term (cic.type cic.z)
                     (cic.prod (cic.type cic.z) (cic.type cic.z) A
                        (__ : cic.Term (cic.type cic.z) A =>
                         cic.prod (cic.type cic.z) (cic.type cic.z) B
                           (__1 : cic.Term (cic.type cic.z) B => C))) =>
                 cic.prod (cic.type cic.z) cic.prop
                   matita_arithmetics_nat.nat
                   (n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod (cic.type cic.z) cic.prop
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A) n)
                      (vA :
                         cic.Term (cic.type cic.z)
                           ((_A : cic.Univ (cic.type cic.z) =>
                             _n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              n) =>
                       cic.prod (cic.type cic.z) cic.prop
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B) n)
                         (vB :
                            cic.Term (cic.type cic.z)
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 n) =>
                          cic.prod (cic.type cic.z) cic.prop A
                            (a : cic.Term (cic.type cic.z) A =>
                             cic.prod (cic.type cic.z) cic.prop B
                               (b : cic.Term (cic.type cic.z) B =>
                                (A1 :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A1 =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A1)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     ((_A : cic.Univ (cic.type cic.z) =>
                                       _n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_basics_vectors.Vector
                                         (cic.lift (cic.type cic.z)
                                            (cic.type cic.z) _A)
                                         _n)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) C)
                                        (matita_arithmetics_nat.S n)))
                                  (matita_basics_vectors.pmap_vec
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) A)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) B)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) C)
                                     f (matita_arithmetics_nat.S n)
                                     (matita_basics_vectors.vec_cons
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        a n vA)
                                     (matita_basics_vectors.vec_cons
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        b n vB))
                                  (matita_basics_vectors.vec_cons
                                     (cic.lift (cic.type cic.z)
                                        (cic.type cic.z) C)
                                     (f a b) n
                                     (matita_basics_vectors.pmap_vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) C)
                                        f n vA vB)))))))))))).

pmap_change :
  cic.Term cic.prop
    (cic.prod (cic.type (cic.s cic.z)) cic.prop (cic.univ (cic.type cic.z))
       (A : cic.Univ (cic.type cic.z) =>
        cic.prod (cic.type (cic.s cic.z)) cic.prop
          (cic.univ (cic.type cic.z))
          (B : cic.Univ (cic.type cic.z) =>
           cic.prod (cic.type (cic.s cic.z)) cic.prop
             (cic.univ (cic.type cic.z))
             (C : cic.Univ (cic.type cic.z) =>
              cic.prod (cic.type cic.z) cic.prop
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A =>
                    cic.prod (cic.type cic.z) (cic.type cic.z) B
                      (__1 : cic.Term (cic.type cic.z) B => C)))
                (f :
                   cic.Term (cic.type cic.z)
                     (cic.prod (cic.type cic.z) (cic.type cic.z) A
                        (__ : cic.Term (cic.type cic.z) A =>
                         cic.prod (cic.type cic.z) (cic.type cic.z) B
                           (__1 : cic.Term (cic.type cic.z) B => C))) =>
                 cic.prod (cic.type cic.z) cic.prop
                   matita_arithmetics_nat.nat
                   (n :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.prod (cic.type cic.z) cic.prop
                      ((_A : cic.Univ (cic.type cic.z) =>
                        _n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_basics_vectors.Vector
                          (cic.lift (cic.type cic.z) (cic.type cic.z) _A) _n)
                         (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                         (matita_arithmetics_nat.pred
                            (matita_arithmetics_nat.S n)))
                      (vA :
                         cic.Term (cic.type cic.z)
                           ((_A : cic.Univ (cic.type cic.z) =>
                             _n :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             matita_basics_vectors.Vector
                               (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                               _n)
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              (matita_arithmetics_nat.pred
                                 (matita_arithmetics_nat.S n))) =>
                       cic.prod (cic.type cic.z) cic.prop
                         ((_A : cic.Univ (cic.type cic.z) =>
                           _n :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           matita_basics_vectors.Vector
                             (cic.lift (cic.type cic.z) (cic.type cic.z) _A)
                             _n)
                            (cic.lift (cic.type cic.z) (cic.type cic.z) B)
                            (matita_arithmetics_nat.pred
                               (matita_arithmetics_nat.S n)))
                         (vB :
                            cic.Term (cic.type cic.z)
                              ((_A : cic.Univ (cic.type cic.z) =>
                                _n :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                matita_basics_vectors.Vector
                                  (cic.lift (cic.type cic.z) (cic.type cic.z)
                                     _A)
                                  _n)
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    B)
                                 (matita_arithmetics_nat.pred
                                    (matita_arithmetics_nat.S n))) =>
                          cic.prod (cic.type cic.z) cic.prop A
                            (a : cic.Term (cic.type cic.z) A =>
                             cic.prod (cic.type cic.z) cic.prop B
                               (b : cic.Term (cic.type cic.z) B =>
                                cic.prod (cic.type cic.z) cic.prop
                                  matita_arithmetics_nat.nat
                                  (i :
                                     cic.Term (cic.type cic.z)
                                       matita_arithmetics_nat.nat =>
                                   (A1 :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A1 =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A1)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        ((_A : cic.Univ (cic.type cic.z) =>
                                          _n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_basics_vectors.Vector
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) _A)
                                            _n)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) C)
                                           n))
                                     (matita_basics_vectors.pmap_vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) A)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) B)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) C)
                                        f n
                                        (matita_basics_vectors.change_vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           n vA a i)
                                        (matita_basics_vectors.change_vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           n vB b i))
                                     (matita_basics_vectors.change_vec
                                        (cic.lift (cic.type cic.z)
                                           (cic.type cic.z) C)
                                        n
                                        (matita_basics_vectors.pmap_vec
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) A)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) B)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z) C)
                                           f n vA vB)
                                        (f a b) i)))))))))))).


