(; This file was automatically generated from Matita. ;)

def let_clause_1562 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times d m)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times n c) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times c n)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times d m))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.commutative_times c n))
        (matita_arithmetics_nat.times m d)
        (matita_arithmetics_nat.commutative_times d m).

def let_clause_1600 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.times m d))
        (matita_arithmetics_chinese_reminder.let_clause_1562 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15621 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times d m)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times n c) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times c n)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times d m))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.commutative_times c n))
        (matita_arithmetics_nat.times m d)
        (matita_arithmetics_nat.commutative_times d m).

def let_clause_16001 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.times m d))
        (matita_arithmetics_chinese_reminder.let_clause_15621 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_1569 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times d m)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times n c) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times c n)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times d m))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.commutative_times c n))
        (matita_arithmetics_nat.times m d)
        (matita_arithmetics_nat.commutative_times d m).

def let_clause_15691 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times d m)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times n c) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times c n)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times d m))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.commutative_times c n))
        (matita_arithmetics_nat.times m d)
        (matita_arithmetics_nat.commutative_times d m).

def let_clause_1575 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             cic.prod (cic.type cic.z)
                                               cic.prop
                                               matita_arithmetics_nat.nat
                                               (x1029 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                (A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  x1029
                                                  (matita_arithmetics_nat.times
                                                     x1029
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           n c)
                                                        (matita_arithmetics_nat.times
                                                           m d)))))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times c n)
                (matita_arithmetics_nat.times d m))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      x1029 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              x1029 (matita_arithmetics_nat.times x1029 x)))
        (matita_arithmetics_nat.times_n_1 x1029)
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times n c)
           (matita_arithmetics_nat.times m d))
        (matita_arithmetics_chinese_reminder.let_clause_15691 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15692 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_1607 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.times n c))
        (matita_arithmetics_chinese_reminder.let_clause_15692 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15693 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_15694 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_15622 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_16002 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.times n c))
        (matita_arithmetics_chinese_reminder.let_clause_15622 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15623 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_16003 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.times n c))
        (matita_arithmetics_chinese_reminder.let_clause_15623 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15624 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_16004 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.times n c))
        (matita_arithmetics_chinese_reminder.let_clause_15624 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def let_clause_15625 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_l
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.times c n)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_nat.minus
                 (matita_arithmetics_nat.times m d) x)
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_nat.times d m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus x
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           H (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.commutative_times d m))
        (matita_arithmetics_nat.times n c)
        (matita_arithmetics_nat.commutative_times c n).

def let_clause_16005 :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (posn :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1)
                             matita_arithmetics_nat.O m)
                          (posm :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (pnm :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              cic.prod (cic.type cic.z) cic.prop
                                matita_arithmetics_nat.nat
                                (c :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.prod cic.prop cic.prop
                                   ((A : cic.Univ (cic.type cic.z) =>
                                     _P :
                                       cic.Term (cic.type cic.z)
                                         (cic.prod (cic.type cic.z)
                                            (cic.type cic.z) A
                                            (__ :
                                               cic.Term (cic.type cic.z) A =>
                                             cic.univ cic.prop)) =>
                                     matita_basics_logic.ex
                                       (cic.lift (cic.type cic.z)
                                          (cic.type cic.z) A)
                                       _P)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type cic.z)
                                         matita_arithmetics_nat.nat)
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))))
                                   (_clearme :
                                      cic.Term cic.prop
                                        ((A : cic.Univ (cic.type cic.z) =>
                                          _P :
                                            cic.Term (cic.type cic.z)
                                              (cic.prod (cic.type cic.z)
                                                 (cic.type cic.z) A
                                                 (__ :
                                                    cic.Term (cic.type cic.z)
                                                      A =>
                                                  cic.univ cic.prop)) =>
                                          matita_basics_logic.ex
                                            (cic.lift (cic.type cic.z)
                                               (cic.type cic.z) A)
                                            _P)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type cic.z)
                                              matita_arithmetics_nat.nat)
                                           (d :
                                              cic.Term (cic.type cic.z)
                                                matita_arithmetics_nat.nat =>
                                            cic.lift cic.prop cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))))) =>
                                    cic.prod (cic.type cic.z) cic.prop
                                      matita_arithmetics_nat.nat
                                      (d :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.prod cic.prop cic.prop
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.Or _A _B)
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (_clearme0 :
                                            cic.Term cic.prop
                                              ((_A : cic.Univ cic.prop =>
                                                _B : cic.Univ cic.prop =>
                                                matita_basics_logic.Or _A _B)
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          c n)
                                                       (matita_arithmetics_nat.times
                                                          d m))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O))) =>
                                          cic.prod cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))
                                            (H :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.minus
                                                       (matita_arithmetics_nat.times
                                                          d m)
                                                       (matita_arithmetics_nat.times
                                                          c n))
                                                    (matita_arithmetics_nat.S
                                                       matita_arithmetics_nat.O)) =>
                                             (A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c)))))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type cic.z) =>
            _P :
              cic.Term (cic.type cic.z)
                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                   (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
            matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
             (cic.lift (cic.type cic.z) (cic.type cic.z)
                matita_arithmetics_nat.nat)
             (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
              cic.lift cic.prop cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
      d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      _clearme0 :
        cic.Term cic.prop
          ((_A : cic.Univ cic.prop =>
            _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times c n)
                   (matita_arithmetics_nat.times d m))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                (matita_arithmetics_nat.minus
                   (matita_arithmetics_nat.times d m)
                   (matita_arithmetics_nat.times c n))
                (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
      H :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_nat.minus (matita_arithmetics_nat.times d m)
                (matita_arithmetics_nat.times c n))
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.rewrite_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S matita_arithmetics_nat.O)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
           ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
             _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
             matita_basics_logic.eq
               (cic.lift (cic.type (cic.s (cic.s cic.z)))
                  (cic.type (cic.s (cic.s cic.z))) A)
               _x __)
              (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                 matita_arithmetics_nat.nat)
              (matita_arithmetics_gcd.gcd m n) x))
        (matita_basics_logic.rewrite_l
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop (cic.type (cic.s (cic.s cic.z)))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           pnm (matita_arithmetics_gcd.gcd m n)
           (matita_arithmetics_gcd.commutative_gcd n m))
        (matita_arithmetics_nat.minus (matita_arithmetics_nat.times m d)
           (matita_arithmetics_nat.times n c))
        (matita_arithmetics_chinese_reminder.let_clause_15625 m n a b posn
           posm pnm c _clearme d _clearme0 H).

def congruent_ab :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2)
                             matita_arithmetics_nat.O m)
                          (__1 :
                             cic.Term cic.prop
                               ((__1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __1 __2)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __2 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __2)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (__2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __2 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __2)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              (A : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) A
                                      (__3 : cic.Term (cic.type cic.z) A =>
                                       cic.univ cic.prop)) =>
                               matita_basics_logic.ex
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 _P)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop cic.prop
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _p :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_congruence.congruent
                                          _n _m _p)
                                         x a m)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _p :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_congruence.congruent
                                          _n _m _p)
                                         x b n)))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (matita_basics_logic.ex
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 (matita_basics_logic.Or
                    (matita_basics_logic.eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times c n)
                          (matita_arithmetics_nat.times d m))
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                    (matita_basics_logic.eq
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times d m)
                          (matita_arithmetics_nat.times c n))
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
        (__ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z)
                   matita_arithmetics_nat.nat)
                (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop
                   ((A : cic.Univ (cic.type cic.z) =>
                     _P :
                       cic.Term (cic.type cic.z)
                         (cic.prod (cic.type cic.z) (cic.type cic.z) A
                            (__ : cic.Term (cic.type cic.z) A =>
                             cic.univ cic.prop)) =>
                     matita_basics_logic.ex
                       (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                      (cic.lift (cic.type cic.z) (cic.type cic.z)
                         matita_arithmetics_nat.nat)
                      (d :
                         cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                       cic.lift cic.prop cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.Or _A _B)
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.times c n)
                                  (matita_arithmetics_nat.times d m))
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               (matita_arithmetics_nat.minus
                                  (matita_arithmetics_nat.times d m)
                                  (matita_arithmetics_nat.times c n))
                               (matita_arithmetics_nat.S
                                  matita_arithmetics_nat.O))))))) =>
         (A : cic.Univ (cic.type cic.z) =>
          _P :
            cic.Term (cic.type cic.z)
              (cic.prod (cic.type cic.z) (cic.type cic.z) A
                 (__1 : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
          matita_basics_logic.ex
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _p :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_congruence.congruent _n _m _p) x a m)
                 ((_n :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _m :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   _p :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_congruence.congruent _n _m _p) x b n))))
        (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z)
                   matita_arithmetics_nat.nat)
                (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.times c n)
                            (matita_arithmetics_nat.times d m))
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.times d m)
                            (matita_arithmetics_nat.times c n))
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))))) =>
         matita_basics_logic.match_ex cic.prop
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.times c n)
                       (matita_arithmetics_nat.times d m))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    (matita_arithmetics_nat.minus
                       (matita_arithmetics_nat.times d m)
                       (matita_arithmetics_nat.times c n))
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
           (__ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type cic.z) =>
                  _P :
                    cic.Term (cic.type cic.z)
                      (cic.prod (cic.type cic.z) (cic.type cic.z) A
                         (__ : cic.Term (cic.type cic.z) A =>
                          cic.univ cic.prop)) =>
                  matita_basics_logic.ex
                    (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                   (cic.lift (cic.type cic.z) (cic.type cic.z)
                      matita_arithmetics_nat.nat)
                   (d :
                      cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                    cic.lift cic.prop cic.prop
                      ((_A : cic.Univ cic.prop =>
                        _B : cic.Univ cic.prop =>
                        matita_basics_logic.Or _A _B)
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times c n)
                               (matita_arithmetics_nat.times d m))
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))
                         ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                           _x :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           __ :
                             cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                           matita_basics_logic.eq
                             (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                (cic.type (cic.s (cic.s cic.z))) A)
                             _x __)
                            (cic.lift (cic.type cic.z)
                               (cic.type (cic.s (cic.s cic.z)))
                               matita_arithmetics_nat.nat)
                            (matita_arithmetics_nat.minus
                               (matita_arithmetics_nat.times d m)
                               (matita_arithmetics_nat.times c n))
                            (matita_arithmetics_nat.S
                               matita_arithmetics_nat.O))))) =>
            (A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__1 : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (x0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p) x0 a
                       m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p) x0 b
                       n))))
           (d : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _clearme0 :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
            matita_basics_logic.match_Or cic.prop
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.times c n)
                    (matita_arithmetics_nat.times d m))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.times d m)
                    (matita_arithmetics_nat.times c n))
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (__ :
                 cic.Term cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.Or _A _B)
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.times c n)
                            (matita_arithmetics_nat.times d m))
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))
                      ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                        _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                        matita_basics_logic.eq
                          (cic.lift (cic.type (cic.s (cic.s cic.z)))
                             (cic.type (cic.s (cic.s cic.z))) A)
                          _x __)
                         (cic.lift (cic.type cic.z)
                            (cic.type (cic.s (cic.s cic.z)))
                            matita_arithmetics_nat.nat)
                         (matita_arithmetics_nat.minus
                            (matita_arithmetics_nat.times d m)
                            (matita_arithmetics_nat.times c n))
                         (matita_arithmetics_nat.S matita_arithmetics_nat.O))) =>
               (A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__1 : cic.Term (cic.type cic.z) A =>
                        cic.univ cic.prop)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (x0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          a m)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          b n))))
              (H :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times c n)
                         (matita_arithmetics_nat.times d m))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (x0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          a m)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          b n)))
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.plus a
                             (matita_arithmetics_nat.times b m))
                          c)
                       n)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times b d) m))
                 (matita_basics_logic.conj
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus a
                                   (matita_arithmetics_nat.times b m))
                                c)
                             n)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times b d) m))
                       a m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus a
                                   (matita_arithmetics_nat.times b m))
                                c)
                             n)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times b d) m))
                       b n)
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.plus a
                             (matita_arithmetics_nat.times b m))
                          (matita_arithmetics_nat.times c n))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus a
                                     (matita_arithmetics_nat.times b m))
                                  (matita_arithmetics_nat.times c n))) =>
                        cic.lift cic.prop cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             (matita_arithmetics_nat.minus x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times b d) m))
                             a m))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times d m)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times d m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))) =>
                           cic.lift cic.prop cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))
                                      x)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times b d) m))
                                a m))
                          (matita_basics_logic.eq_ind
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times d m))
                             (x_1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              _x_2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        (matita_arithmetics_nat.times d m))
                                     x_1) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _p :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_congruence.congruent _n
                                    _m _p)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus a
                                            (matita_arithmetics_nat.times b m))
                                         x_1)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times b d) m))
                                   a m))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))
                                      (matita_arithmetics_nat.times d m)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus a
                                                 (matita_arithmetics_nat.times
                                                    b m))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus a
                                                 (matita_arithmetics_nat.times
                                                    b m))
                                              (matita_arithmetics_nat.times d
                                                 m)))) =>
                                 cic.lift cic.prop cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _p :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_congruence.congruent
                                       _n _m _p)
                                      (matita_arithmetics_nat.minus x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times b d)
                                            m))
                                      a m))
                                (matita_basics_logic.eq_ind
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.times b m))
                                   (x_1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _x_2 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.plus a
                                              (matita_arithmetics_nat.times b
                                                 m))
                                           x_1) =>
                                    cic.lift cic.prop cic.prop
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _p :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_congruence.congruent
                                          _n _m _p)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.plus x_1
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        b m))
                                                  (matita_arithmetics_nat.times
                                                     d m)))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  b d)
                                               m))
                                         a m))
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times b m)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     b m))
                                               (matita_arithmetics_nat.times
                                                  d m))))
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              x
                                              (matita_arithmetics_nat.plus a
                                                 (matita_arithmetics_nat.plus
                                                    (matita_arithmetics_nat.times
                                                       b m)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          a
                                                          (matita_arithmetics_nat.times
                                                             b m))
                                                       (matita_arithmetics_nat.times
                                                          d m))))) =>
                                       cic.lift cic.prop cic.prop
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _p :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_congruence.congruent
                                             _n _m _p)
                                            (matita_arithmetics_nat.minus x
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     b d)
                                                  m))
                                            a m))
                                      (matita_basics_logic.eq_ind
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     b m))
                                               d)
                                            m)
                                         (x_1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _x_2 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          a
                                                          (matita_arithmetics_nat.times
                                                             b m))
                                                       d)
                                                    m)
                                                 x_1) =>
                                          cic.lift cic.prop cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _p :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_congruence.congruent
                                                _n _m _p)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           b m)
                                                        x_1))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        b d)
                                                     m))
                                               a m))
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus b
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           b m))
                                                     d))
                                               m)
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          b
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                a
                                                                (matita_arithmetics_nat.times
                                                                   b m))
                                                             d))
                                                       m)
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 _m :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 _p :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_congruence.congruent
                                                   _n _m _p)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        a x_1)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           b d)
                                                        m))
                                                  a m))
                                            (matita_basics_logic.eq_ind
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 b m))
                                                           d))
                                                     m)
                                                  a)
                                               (x_1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                _x_2 :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                b
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    b m))
                                                                   d))
                                                             m)
                                                          a)
                                                       x_1) =>
                                                cic.lift cic.prop cic.prop
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    _m :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    _p :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_congruence.congruent
                                                      _n _m _p)
                                                     (matita_arithmetics_nat.minus
                                                        x_1
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              b d)
                                                           m))
                                                     a m))
                                               (matita_basics_logic.eq_ind
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))
                                                                 d))
                                                           m)
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              b d)
                                                           m))
                                                     a)
                                                  (x_1 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _x_2 :
                                                     cic.Term cic.prop
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.minus
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    (
                                                                    matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    b m)) d))
                                                                   m)
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.times
                                                                    b d)
                                                                   m))
                                                             a)
                                                          x_1) =>
                                                   cic.lift cic.prop cic.prop
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       _m :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       _p :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_congruence.congruent
                                                         _n _m _p)
                                                        x_1 a m))
                                                  (matita_arithmetics_congruence.eq_times_plus_to_congruent
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)) d))
                                                              m)
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 b d)
                                                              m))
                                                        a)
                                                     a m
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              d
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b))))
                                                        (matita_arithmetics_nat.times
                                                           b d))
                                                     posm
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           m b)
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) d))
                                                                    m)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) m))
                                                                 a)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                 a)))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              d
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b)))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x) m)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) m))
                                                                    a)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) m))
                                                                    a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    x) a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)))
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    x a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)))) x))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)))
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) m)
                                                                    a))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))) a)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))) a))
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)))
                                                                    (
                                                                  matita_arithmetics_nat.distributive_times_minus
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)))
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) m)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) m))
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                 m)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                 m))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b))
                                                              d)
                                                           (matita_arithmetics_nat.commutative_times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b))
                                                              d))
                                                        (matita_arithmetics_nat.times
                                                           b m)
                                                        (matita_arithmetics_nat.commutative_times
                                                           b m)))
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))
                                                                 d))
                                                           m)
                                                        a)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           b d)
                                                        m))
                                                  (matita_arithmetics_nat.plus_minus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           b d)
                                                        m)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    b m))
                                                              d))
                                                        m)
                                                     a
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    b d))
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.times
                                                                    b d)
                                                                 m)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)) d))
                                                                 m)))
                                                        (matita_arithmetics_nat.monotonic_le_times_r
                                                           m
                                                           (matita_arithmetics_nat.times
                                                              b d)
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 d
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                           (matita_arithmetics_nat.transitive_le
                                                              (matita_arithmetics_nat.times
                                                                 b d)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))
                                                                 d)
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                              (matita_basics_logic.eq_coerc
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d b)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)) d)))
                                                                 (matita_arithmetics_nat.monotonic_le_times_r
                                                                    d b
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))
                                                                    (
                                                                  matita_arithmetics_nat.transitive_le
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))
                                                                    (
                                                                  matita_arithmetics_nat.monotonic_le_times_r
                                                                    b
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) m
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    m))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) m))
                                                                    posm
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    m))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) m))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) m)))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    x))))
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    b
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b x)))
                                                                    (
                                                                  matita_arithmetics_nat.times_n_1
                                                                    b)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m)))
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) a)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))))
                                                                    (
                                                                  matita_arithmetics_nat.le_plus_n_r
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) a)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m))))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) a)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) a)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) a))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m)))))
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d b)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) d)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d b)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d) x))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d b)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    d b))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m)))
                                                              (matita_basics_logic.eq_coerc
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) b)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)) d)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                                 (matita_arithmetics_nat.le_plus_n_r
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) b)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) d)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) b)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) b)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))) b))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    b m)))))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 b d))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)) d))
                                                                    m)))))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) d))
                                                                    m)))))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x) m)))))
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d)) x))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b d))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))) m)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))) m))
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)) d))
                                                              (matita_arithmetics_nat.times
                                                                 b m)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 b m))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 b d)
                                                              m)
                                                           (matita_arithmetics_nat.commutative_times
                                                              (matita_arithmetics_nat.times
                                                                 b d)
                                                              m)))))
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 b m))
                                                           d))
                                                     m))
                                               (matita_arithmetics_nat.commutative_plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 b m))
                                                           d))
                                                     m)
                                                  a))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  b m)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           b m))
                                                     d)
                                                  m))
                                            (matita_arithmetics_nat.distributive_times_plus_r
                                               m b
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        b m))
                                                  d)))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            (matita_arithmetics_nat.times d m))
                                         (matita_arithmetics_nat.associative_times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            d m))
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.plus a
                                            (matita_arithmetics_nat.times b m))
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            (matita_arithmetics_nat.times d m)))
                                      (matita_arithmetics_nat.associative_plus
                                         a (matita_arithmetics_nat.times b m)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            (matita_arithmetics_nat.times d m))))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times_n_1
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.times b m))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times d m)))
                                (matita_arithmetics_nat.distributive_times_plus
                                   (matita_arithmetics_nat.plus a
                                      (matita_arithmetics_nat.times b m))
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times d m)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times d m)))
                          (matita_arithmetics_nat.times c n)
                          (matita_arithmetics_nat.minus_to_plus
                             (matita_arithmetics_nat.times c n)
                             (matita_arithmetics_nat.times d m)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.transitive_le
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times d m))
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.le_n_Sn
                                   (matita_arithmetics_nat.times d m))
                                (matita_arithmetics_nat.lt_minus_to_plus_r
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times c n)
                                   (matita_arithmetics_nat.times d m)
                                   (matita_basics_logic.eq_coerc
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  c n)
                                               (matita_arithmetics_nat.times
                                                  d m))))
                                      (matita_arithmetics_nat.lt_O_S
                                         matita_arithmetics_nat.O)
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times n c)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.univ (cic.type cic.z)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.minus
                                                        x
                                                        (matita_arithmetics_nat.times
                                                           d m))))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times m d)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              n c)
                                                           x)))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           x))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_gcd.gcd
                                                     m n)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              x))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_gcd.gcd
                                                                 m n)))))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           (matita_arithmetics_gcd.gcd
                                                              m n))))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           n c)
                                                        (matita_arithmetics_nat.times
                                                           m d))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           x
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (matita_arithmetics_chinese_reminder.let_clause_1562
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)
                                                     (matita_arithmetics_gcd.gcd
                                                        m n)
                                                     (matita_arithmetics_chinese_reminder.let_clause_1600
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)))
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_chinese_reminder.let_clause_1600
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H))
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.commutative_times
                                               d m))
                                         (matita_arithmetics_nat.times c n)
                                         (matita_arithmetics_nat.commutative_times
                                            c n)))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times n c)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.minus x
                                         (matita_arithmetics_nat.times d m))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times m d)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times n c)
                                            x)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_gcd.gcd m n)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_gcd.gcd m n)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               x))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_gcd.gcd m n))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  n c)
                                               (matita_arithmetics_nat.times
                                                  m d))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))
                                            (matita_arithmetics_chinese_reminder.let_clause_15621
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)
                                            (matita_arithmetics_gcd.gcd m n)
                                            (matita_arithmetics_chinese_reminder.let_clause_16001
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)))
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times n c)
                                         (matita_arithmetics_nat.times m d))
                                      (matita_arithmetics_chinese_reminder.let_clause_16001
                                         m n a b posn posm pnm c _clearme d
                                         _clearme0 H))
                                   (matita_arithmetics_nat.times d m)
                                   (matita_arithmetics_nat.commutative_times
                                      d m))
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.commutative_times c n))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.plus a
                                (matita_arithmetics_nat.times b m))
                             c)
                          n)
                       (matita_arithmetics_nat.associative_times
                          (matita_arithmetics_nat.plus a
                             (matita_arithmetics_nat.times b m))
                          c n))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times b
                          (matita_arithmetics_nat.times d m))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times b
                                  (matita_arithmetics_nat.times d m))) =>
                        cic.lift cic.prop cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus a
                                         (matita_arithmetics_nat.times b m))
                                      c)
                                   n)
                                x)
                             b n))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.times c n)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.times c n)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))) =>
                           cic.lift cic.prop cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus a
                                            (matita_arithmetics_nat.times b m))
                                         c)
                                      n)
                                   (matita_arithmetics_nat.times b x))
                                b n))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_nat.times c n))
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.times b
                                           (matita_arithmetics_nat.times c n))
                                        (matita_arithmetics_nat.times b
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _p :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_congruence.congruent _n
                                    _m _p)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            c)
                                         n)
                                      x)
                                   b n))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times b c) n)
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.times
                                           (matita_arithmetics_nat.times b c)
                                           n)
                                        x_1) =>
                                 cic.lift cic.prop cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _p :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_congruence.congruent
                                       _n _m _p)
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     b m))
                                               c)
                                            n)
                                         (matita_arithmetics_nat.minus x_1
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O))))
                                      b n))
                                (matita_basics_logic.eq_ind
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     b m))
                                               c)
                                            n)
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times b c)
                                            n)))
                                   (x_1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _x_2 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times b
                                                 (matita_arithmetics_nat.S
                                                    matita_arithmetics_nat.O))
                                              (matita_arithmetics_nat.minus
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          a
                                                          (matita_arithmetics_nat.times
                                                             b m))
                                                       c)
                                                    n)
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.times
                                                       b c)
                                                    n)))
                                           x_1) =>
                                    cic.lift cic.prop cic.prop
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _p :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_congruence.congruent
                                          _n _m _p)
                                         x_1 b n))
                                   (matita_arithmetics_congruence.eq_times_plus_to_congruent
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        b m))
                                                  c)
                                               n)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  b c)
                                               n)))
                                      b n
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times c
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  m b)))
                                         (matita_arithmetics_nat.times b c))
                                      posn
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times n c)
                                            (matita_arithmetics_nat.times m d))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     b x)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 b m))
                                                           c)
                                                        n)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           b c)
                                                        n)))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        (matita_arithmetics_nat.times
                                                           b c))
                                                     n)
                                                  b)))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            b
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     x
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    b m))
                                                              c)
                                                           n)
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              b c)
                                                           n)))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              c
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b)))
                                                           (matita_arithmetics_nat.times
                                                              b c))
                                                        n)
                                                     b)))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  m b)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a x)
                                                                 c)
                                                              n)
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 b c)
                                                              n)))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 c
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                              (matita_arithmetics_nat.times
                                                                 b c))
                                                           n)
                                                        b)))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     c
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 x n)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.times
                                                                    b c)
                                                                 n)))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                 (matita_arithmetics_nat.times
                                                                    b c))
                                                              n)
                                                           b)))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        n
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b))))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.minus
                                                                 x
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c) n)))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))
                                                                 n)
                                                              b)))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              b c))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))) x))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)
                                                                 b)))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                 (matita_arithmetics_nat.times
                                                                    b c)))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    b x)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)
                                                                    b)))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)))) x))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n))))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)))
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)))
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)
                                                                 b)
                                                              (matita_arithmetics_nat.commutative_plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)) n)
                                                                 b))
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    b c)))
                                                           (matita_arithmetics_nat.distributive_times_minus
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 c
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))
                                                              (matita_arithmetics_nat.times
                                                                 b c)))
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              b c)
                                                           n)
                                                        (matita_arithmetics_nat.commutative_times
                                                           (matita_arithmetics_nat.times
                                                              b c)
                                                           n))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        n)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        n))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))
                                                     c)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))
                                                     c))
                                               (matita_arithmetics_nat.times
                                                  b m)
                                               (matita_arithmetics_nat.commutative_times
                                                  b m))
                                            (matita_arithmetics_nat.times b
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d)))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        b x)))
                                               (matita_arithmetics_nat.times_n_1
                                                  b)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (matita_arithmetics_chinese_reminder.let_clause_1569
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H)))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_chinese_reminder.let_clause_1569
                                            m n a b posn posm pnm c _clearme
                                            d _clearme0 H)))
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            c)
                                         n)
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times b c)
                                            n)
                                         (matita_arithmetics_nat.times b
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O))))
                                   (matita_arithmetics_nat.minus_minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus a
                                               (matita_arithmetics_nat.times
                                                  b m))
                                            c)
                                         n)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times b c) n)
                                      (matita_arithmetics_nat.times b
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_basics_logic.eq_coerc
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     (matita_arithmetics_nat.times
                                                        m d)))
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.times
                                                     n c))))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O))
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     b c)
                                                  n)))
                                         (matita_arithmetics_nat.monotonic_le_times_r
                                            b
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  n c)
                                               (matita_arithmetics_nat.times
                                                  m d))
                                            (matita_arithmetics_nat.times n c)
                                            (matita_arithmetics_nat.le_plus_to_minus
                                               (matita_arithmetics_nat.times
                                                  n c)
                                               (matita_arithmetics_nat.times
                                                  m d)
                                               (matita_arithmetics_nat.times
                                                  n c)
                                               (matita_arithmetics_nat.le_plus_n_r
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  n c)
                                               (matita_arithmetics_nat.times
                                                  m d))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.times
                                                           b
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 n c)
                                                              (matita_arithmetics_nat.times
                                                                 m d)))
                                                        (matita_arithmetics_nat.times
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n c))))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.times
                                                           b x)
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              b c)
                                                           n)))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               b
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.times
                                                              b
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    n c)
                                                                 (matita_arithmetics_nat.times
                                                                    m d)))
                                                           (matita_arithmetics_nat.times
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n c))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           x
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 b c)
                                                              n)))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     n
                                                     (matita_arithmetics_nat.times
                                                        b c))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 b
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)))
                                                              (matita_arithmetics_nat.times
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n c))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              b x))))
                                                  (matita_basics_logic.rewrite_l
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     b
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 x
                                                                 (matita_arithmetics_nat.times
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c))))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))))))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              b c))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    x))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))))))
                                                        (matita_basics_logic.refl
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c)))))
                                                        (matita_arithmetics_nat.times
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n c))
                                                        (matita_arithmetics_nat.times_times
                                                           b n c))
                                                     (matita_arithmetics_nat.times
                                                        b
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              n c)
                                                           (matita_arithmetics_nat.times
                                                              m d)))
                                                     (matita_arithmetics_chinese_reminder.let_clause_1575
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H b))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        b c)
                                                     n)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_nat.times
                                                        b c)
                                                     n))
                                               (matita_arithmetics_nat.times
                                                  b
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     (matita_arithmetics_nat.times
                                                        m d)))
                                               (matita_arithmetics_chinese_reminder.let_clause_1575
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H b))
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_chinese_reminder.let_clause_15691
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)))
                                      (matita_basics_logic.eq_coerc
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  n
                                                  (matita_arithmetics_nat.times
                                                     b c))
                                               (matita_arithmetics_nat.times
                                                  n
                                                  (matita_arithmetics_nat.times
                                                     c
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))))))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     b c)
                                                  n)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           b m))
                                                     c)
                                                  n)))
                                         (matita_arithmetics_nat.monotonic_le_times_r
                                            n
                                            (matita_arithmetics_nat.times b c)
                                            (matita_arithmetics_nat.times c
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     m b)))
                                            (matita_basics_logic.eq_ind_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  c b)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __ :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_nat.times
                                                          c b)) =>
                                                cic.lift cic.prop cic.prop
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __1)
                                                     x
                                                     (matita_arithmetics_nat.times
                                                        c
                                                        (matita_arithmetics_nat.plus
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              m b)))))
                                               (matita_arithmetics_nat.monotonic_le_times_r
                                                  c b
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        m b))
                                                  (matita_arithmetics_nat.transitive_le
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        m b)
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 b
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)))
                                                              (matita_arithmetics_nat.times
                                                                 b m)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        (matita_arithmetics_nat.monotonic_le_times_r
                                                           b
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 n c)
                                                              (matita_arithmetics_nat.times
                                                                 m d))
                                                           m
                                                           (matita_basics_logic.eq_coerc
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    m))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)) m))
                                                              posm
                                                              (matita_basics_logic.rewrite_l
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    m))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)) m))))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)) m)))
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c) x)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d m))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    H
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    c n))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    d m)))))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           b
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b m)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                              (matita_basics_logic.refl
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))
                                                              (matita_arithmetics_nat.times
                                                                 b m)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 b m))
                                                           (matita_arithmetics_nat.times
                                                              b
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    n c)
                                                                 (matita_arithmetics_nat.times
                                                                    m d)))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b x)))
                                                              (matita_arithmetics_nat.times_n_1
                                                                 b)
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    n c)
                                                                 (matita_arithmetics_nat.times
                                                                    m d))
                                                              (matita_basics_logic.rewrite_l
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    d m)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c) x)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d m))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    H
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    c n))
                                                                 (matita_arithmetics_nat.times
                                                                    m d)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    d m)))))
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    m b)
                                                                 a)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b))))
                                                        (matita_arithmetics_nat.le_plus_n_r
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              m b))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b) x))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                           (matita_basics_logic.refl
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              a)
                                                           (matita_arithmetics_nat.commutative_plus
                                                              (matita_arithmetics_nat.times
                                                                 m b)
                                                              a)))))
                                               (matita_arithmetics_nat.times
                                                  b c)
                                               (matita_arithmetics_nat.commutative_times
                                                  b c)))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n
                                               (matita_arithmetics_nat.times
                                                  b c))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.times
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              b c))
                                                        (matita_arithmetics_nat.times
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              c
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    m b))))))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        x
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    b m))
                                                              c)
                                                           n)))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  m b)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 b c))
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 c
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 b c))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a x)
                                                                 c)
                                                              n)))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     c
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    b c))
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    b c))
                                                              (matita_arithmetics_nat.times
                                                                 x n)))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        n
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b))))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b))))))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    b c))
                                                                 x))))
                                                     (matita_basics_logic.refl
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    b c))
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m b)))))))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        n)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.times
                                                           c
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 m b)))
                                                        n))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))
                                                     c)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           m b))
                                                     c))
                                               (matita_arithmetics_nat.times
                                                  b m)
                                               (matita_arithmetics_nat.commutative_times
                                                  b m))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  b c)
                                               n)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_nat.times
                                                  b c)
                                               n)))))
                                (matita_arithmetics_nat.times b
                                   (matita_arithmetics_nat.times c n))
                                (matita_arithmetics_nat.associative_times b c
                                   n))
                             (matita_arithmetics_nat.times b
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times c n)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (matita_arithmetics_nat.distributive_times_minus
                                b (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.times d m)
                          (matita_basics_logic.sym_eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times d m)
                             (matita_arithmetics_nat.plus_to_minus
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times d m)
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times d m)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times d
                                                 m)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))) =>
                                    cic.lift cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times c n) x))
                                   (matita_arithmetics_nat.minus_to_plus
                                      (matita_arithmetics_nat.times c n)
                                      (matita_arithmetics_nat.times d m)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.transitive_le
                                         (matita_arithmetics_nat.times d m)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times d m))
                                         (matita_arithmetics_nat.times c n)
                                         (matita_arithmetics_nat.le_n_Sn
                                            (matita_arithmetics_nat.times d m))
                                         (matita_arithmetics_nat.lt_minus_to_plus_r
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.times c n)
                                            (matita_arithmetics_nat.times d m)
                                            (matita_basics_logic.eq_coerc
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           c n)
                                                        (matita_arithmetics_nat.times
                                                           d m))))
                                               (matita_arithmetics_nat.lt_O_S
                                                  matita_arithmetics_nat.O)
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.minus
                                                                 x
                                                                 (matita_arithmetics_nat.times
                                                                    d m))))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        m d)
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 matita_arithmetics_nat.O
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 matita_arithmetics_nat.O
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c) x)))))
                                                     (matita_basics_logic.rewrite_l
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              n c)
                                                           (matita_arithmetics_nat.times
                                                              m d))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    x))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d))))))
                                                        (matita_basics_logic.refl
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 matita_arithmetics_nat.O
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)))))
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              d m)
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c) x)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                           (matita_basics_logic.rewrite_l
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 c n)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d m))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                              H
                                                              (matita_arithmetics_nat.times
                                                                 n c)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 c n))
                                                           (matita_arithmetics_nat.times
                                                              m d)
                                                           (matita_arithmetics_nat.commutative_times
                                                              d m)))
                                                     (matita_arithmetics_nat.times
                                                        d m)
                                                     (matita_arithmetics_nat.commutative_times
                                                        d m))
                                                  (matita_arithmetics_nat.times
                                                     c n)
                                                  (matita_arithmetics_nat.commutative_times
                                                     c n)))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times n c)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     d m))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times m d)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     x)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     n c)
                                                  (matita_arithmetics_nat.times
                                                     m d))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           n c)
                                                        (matita_arithmetics_nat.times
                                                           m d))
                                                     x))
                                               (matita_basics_logic.refl
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     (matita_arithmetics_nat.times
                                                        m d)))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              n c)
                                                           x)
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)))
                                                  (matita_basics_logic.rewrite_l
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        c n)
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.minus
                                                              x
                                                              (matita_arithmetics_nat.times
                                                                 d m))
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     H
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     (matita_arithmetics_nat.commutative_times
                                                        c n))
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.commutative_times
                                                     d m)))
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.commutative_times
                                               d m))
                                         (matita_arithmetics_nat.times c n)
                                         (matita_arithmetics_nat.commutative_times
                                            c n)))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times d m))
                                   (matita_arithmetics_nat.commutative_plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times d m))))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times b d) m)
                       (matita_arithmetics_nat.associative_times b d m))))
              (H :
                 cic.Term cic.prop
                   ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                     _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                     matita_basics_logic.eq
                       (cic.lift (cic.type (cic.s (cic.s cic.z)))
                          (cic.type (cic.s (cic.s cic.z))) A)
                       _x __)
                      (cic.lift (cic.type cic.z)
                         (cic.type (cic.s (cic.s cic.z)))
                         matita_arithmetics_nat.nat)
                      (matita_arithmetics_nat.minus
                         (matita_arithmetics_nat.times d m)
                         (matita_arithmetics_nat.times c n))
                      (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
               matita_basics_logic.ex_intro
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (x0 :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          a m)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          b n)))
                 (matita_arithmetics_nat.minus
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.times a n))
                          d)
                       m)
                    (matita_arithmetics_nat.times
                       (matita_arithmetics_nat.times a c) n))
                 (matita_basics_logic.conj
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus b
                                   (matita_arithmetics_nat.times a n))
                                d)
                             m)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times a c) n))
                       a m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_nat.minus
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times
                                (matita_arithmetics_nat.plus b
                                   (matita_arithmetics_nat.times a n))
                                d)
                             m)
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.times a c) n))
                       b n)
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times a
                          (matita_arithmetics_nat.times c n))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times a
                                  (matita_arithmetics_nat.times c n))) =>
                        cic.lift cic.prop cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))
                                      d)
                                   m)
                                x)
                             a m))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.minus
                             (matita_arithmetics_nat.times d m)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.minus
                                     (matita_arithmetics_nat.times d m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))) =>
                           cic.lift cic.prop cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         d)
                                      m)
                                   (matita_arithmetics_nat.times a x))
                                a m))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times a
                                   (matita_arithmetics_nat.times d m))
                                (matita_arithmetics_nat.times a
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.minus
                                        (matita_arithmetics_nat.times a
                                           (matita_arithmetics_nat.times d m))
                                        (matita_arithmetics_nat.times a
                                           (matita_arithmetics_nat.S
                                              matita_arithmetics_nat.O)))) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _p :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_congruence.congruent _n
                                    _m _p)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  a n))
                                            d)
                                         m)
                                      x)
                                   a m))
                             (matita_basics_logic.eq_ind
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times a
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  a n))
                                            d)
                                         m)
                                      (matita_arithmetics_nat.times a
                                         (matita_arithmetics_nat.times d m))))
                                (x_1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _x_2 :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times a
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.minus
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.plus
                                                       b
                                                       (matita_arithmetics_nat.times
                                                          a n))
                                                    d)
                                                 m)
                                              (matita_arithmetics_nat.times a
                                                 (matita_arithmetics_nat.times
                                                    d m))))
                                        x_1) =>
                                 cic.lift cic.prop cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _p :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_congruence.congruent
                                       _n _m _p)
                                      x_1 a m))
                                (matita_arithmetics_congruence.eq_times_plus_to_congruent
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times a
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus b
                                                  (matita_arithmetics_nat.times
                                                     a n))
                                               d)
                                            m)
                                         (matita_arithmetics_nat.times a
                                            (matita_arithmetics_nat.times d m))))
                                   a m
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times d
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times n a)))
                                      (matita_arithmetics_nat.times a d))
                                   posm
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_gcd.gcd m n)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a x)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              a n))
                                                        d)
                                                     m)
                                                  (matita_arithmetics_nat.times
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        d m))))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        d
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a)))
                                                     (matita_arithmetics_nat.times
                                                        a d))
                                                  m)
                                               a)))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         a
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus x
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 a n))
                                                           d)
                                                        m)
                                                     (matita_arithmetics_nat.times
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           d m))))
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           d
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n a)))
                                                        (matita_arithmetics_nat.times
                                                           a d))
                                                     m)
                                                  a)))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n a)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     a
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 b x)
                                                              d)
                                                           m)
                                                        (matita_arithmetics_nat.times
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              d m))))
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              d
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a)))
                                                           (matita_arithmetics_nat.times
                                                              a d))
                                                        m)
                                                     a)))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  d
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        n a)))
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              x m)
                                                           (matita_arithmetics_nat.times
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 d m))))
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 d
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                              (matita_arithmetics_nat.times
                                                                 a d))
                                                           m)
                                                        a)))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     m
                                                     (matita_arithmetics_nat.times
                                                        d
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a))))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.plus
                                                           a
                                                           (matita_arithmetics_nat.minus
                                                              x
                                                              (matita_arithmetics_nat.times
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    d m))))
                                                        (matita_arithmetics_nat.plus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                 (matita_arithmetics_nat.times
                                                                    a d))
                                                              m)
                                                           a)))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        m d)
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                 (matita_arithmetics_nat.times
                                                                    a x)))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d))
                                                                 m)
                                                              a)))
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.times
                                                              a d))
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))) x))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)
                                                                 a)))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                 (matita_arithmetics_nat.times
                                                                    a d)))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    a x)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)
                                                                    a)))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)))) x))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m))))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)))
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)))
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d))))
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)
                                                                 a)
                                                              (matita_arithmetics_nat.commutative_plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d)) m)
                                                                 a))
                                                           (matita_arithmetics_nat.minus
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    a d)))
                                                           (matita_arithmetics_nat.distributive_times_minus
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 d
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                              (matita_arithmetics_nat.times
                                                                 a d)))
                                                        (matita_arithmetics_nat.times
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              m d))
                                                        (matita_arithmetics_nat.times_times
                                                           a m d))
                                                     (matita_arithmetics_nat.times
                                                        d m)
                                                     (matita_arithmetics_nat.commutative_times
                                                        d m))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        d
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a)))
                                                     m)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_nat.times
                                                        d
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a)))
                                                     m))
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        n a))
                                                  d)
                                               (matita_arithmetics_nat.commutative_times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        n a))
                                                  d))
                                            (matita_arithmetics_nat.times a n)
                                            (matita_arithmetics_nat.commutative_times
                                               a n))
                                         (matita_arithmetics_nat.times a
                                            (matita_arithmetics_gcd.gcd m n))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  m d)
                                               (matita_arithmetics_nat.times
                                                  n c))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  a
                                                  (matita_arithmetics_nat.times
                                                     a x)))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        a x)))
                                               (matita_arithmetics_nat.times_n_1
                                                  a)
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_chinese_reminder.let_clause_15692
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H))
                                            (matita_arithmetics_gcd.gcd m n)
                                            (matita_arithmetics_chinese_reminder.let_clause_1607
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times m d)
                                            (matita_arithmetics_nat.times n c))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               x
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (matita_arithmetics_chinese_reminder.let_clause_15692
                                            m n a b posn posm pnm c _clearme
                                            d _clearme0 H)
                                         (matita_arithmetics_gcd.gcd m n)
                                         (matita_arithmetics_chinese_reminder.let_clause_1607
                                            m n a b posn posm pnm c _clearme
                                            d _clearme0 H))))
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         d)
                                      m)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times a
                                         (matita_arithmetics_nat.times d m))
                                      (matita_arithmetics_nat.times a
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O))))
                                (matita_arithmetics_nat.minus_minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         d)
                                      m)
                                   (matita_arithmetics_nat.times a
                                      (matita_arithmetics_nat.times d m))
                                   (matita_arithmetics_nat.times a
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.monotonic_le_times_r
                                      a
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times d m)
                                      (matita_basics_logic.eq_ind
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.times c n))
                                         (x_1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _x_2 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_nat.minus
                                                    (matita_arithmetics_nat.times
                                                       d m)
                                                    (matita_arithmetics_nat.times
                                                       c n))
                                                 x_1) =>
                                          cic.lift cic.prop cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               x_1
                                               (matita_arithmetics_nat.times
                                                  d m)))
                                         (matita_arithmetics_nat.le_plus_to_minus
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.times c n)
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.le_plus_n_r
                                               (matita_arithmetics_nat.times
                                                  c n)
                                               (matita_arithmetics_nat.times
                                                  d m)))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         H))
                                   (matita_basics_logic.eq_ind
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times a d) m)
                                      (x_1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    a d)
                                                 m)
                                              x_1) =>
                                       cic.lift cic.prop cic.prop
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            x_1
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  d)
                                               m)))
                                      (matita_basics_logic.eq_coerc
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.times
                                                     a d))
                                               (matita_arithmetics_nat.times
                                                  m
                                                  (matita_arithmetics_nat.times
                                                     d
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           n a))))))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     a d)
                                                  m)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           a n))
                                                     d)
                                                  m)))
                                         (matita_arithmetics_nat.monotonic_le_times_r
                                            m
                                            (matita_arithmetics_nat.times a d)
                                            (matita_arithmetics_nat.times d
                                               (matita_arithmetics_nat.plus b
                                                  (matita_arithmetics_nat.times
                                                     n a)))
                                            (matita_basics_logic.eq_ind_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  d a)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                __ :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          matita_arithmetics_nat.nat)
                                                       x
                                                       (matita_arithmetics_nat.times
                                                          d a)) =>
                                                cic.lift cic.prop cic.prop
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __1)
                                                     x
                                                     (matita_arithmetics_nat.times
                                                        d
                                                        (matita_arithmetics_nat.plus
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a)))))
                                               (matita_arithmetics_nat.monotonic_le_times_r
                                                  d a
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        n a))
                                                  (matita_arithmetics_nat.transitive_le
                                                     a
                                                     (matita_arithmetics_nat.times
                                                        n a)
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           n a))
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 a
                                                                 (matita_arithmetics_gcd.gcd
                                                                    m n))
                                                              (matita_arithmetics_nat.times
                                                                 a n)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 n a)))
                                                        (matita_arithmetics_nat.monotonic_le_times_r
                                                           a
                                                           (matita_arithmetics_gcd.gcd
                                                              m n)
                                                           n
                                                           (matita_basics_logic.eq_coerc
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    n))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n))
                                                              posn
                                                              (matita_basics_logic.rewrite_l
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    n))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n))))
                                                                 (matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n)))
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    (
                                                                  matita_arithmetics_chinese_reminder.let_clause_15693
                                                                    m n a b
                                                                    posn posm
                                                                    pnm c
                                                                    _clearme
                                                                    d
                                                                    _clearme0
                                                                    H)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) x))
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m))
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c))
                                                                    (
                                                                  matita_arithmetics_chinese_reminder.let_clause_15693
                                                                    m n a b
                                                                    posn posm
                                                                    pnm c
                                                                    _clearme
                                                                    d
                                                                    _clearme0
                                                                    H))))))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           a
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                              (matita_basics_logic.refl
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                              (matita_arithmetics_nat.times
                                                                 a n)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 a n))
                                                           (matita_arithmetics_nat.times
                                                              a
                                                              (matita_arithmetics_gcd.gcd
                                                                 m n))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    m d)
                                                                 (matita_arithmetics_nat.times
                                                                    n c))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a x)))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a x)))
                                                                 (matita_arithmetics_nat.times_n_1
                                                                    a)
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c))
                                                                 (matita_arithmetics_chinese_reminder.let_clause_15694
                                                                    m n a b
                                                                    posn posm
                                                                    pnm c
                                                                    _clearme
                                                                    d
                                                                    _clearme0
                                                                    H))
                                                              (matita_arithmetics_gcd.gcd
                                                                 m n)
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) x))
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m))
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n c))
                                                                 (matita_arithmetics_chinese_reminder.let_clause_15694
                                                                    m n a b
                                                                    posn posm
                                                                    pnm c
                                                                    _clearme
                                                                    d
                                                                    _clearme0
                                                                    H)))))
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    n a)
                                                                 b)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a))))
                                                        (matita_arithmetics_nat.le_plus_n_r
                                                           b
                                                           (matita_arithmetics_nat.times
                                                              n a))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n a))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a) x))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                           (matita_basics_logic.refl
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                           (matita_arithmetics_nat.plus
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              b)
                                                           (matita_arithmetics_nat.commutative_plus
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              b)))))
                                               (matita_arithmetics_nat.times
                                                  a d)
                                               (matita_arithmetics_nat.commutative_times
                                                  a d)))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times m
                                               (matita_arithmetics_nat.times
                                                  a d))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.times
                                                              a d))
                                                        (matita_arithmetics_nat.times
                                                           m
                                                           (matita_arithmetics_nat.times
                                                              d
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a))))))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        x
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    a n))
                                                              d)
                                                           m)))))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  n a)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 a d))
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 d
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.times
                                                              m
                                                              (matita_arithmetics_nat.times
                                                                 a d))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    b x)
                                                                 d)
                                                              m)))))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     d
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           n a)))
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    a d))
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    a d))
                                                              (matita_arithmetics_nat.times
                                                                 x m)))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        m
                                                        (matita_arithmetics_nat.times
                                                           d
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n a))))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d))
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((_n :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.le
                                                                  _n __)
                                                                 (matita_arithmetics_nat.times
                                                                    m
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a d))
                                                                 x))))
                                                     (matita_basics_logic.refl
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    a d))
                                                              (matita_arithmetics_nat.times
                                                                 m
                                                                 (matita_arithmetics_nat.times
                                                                    d
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           d
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n a)))
                                                        m)
                                                     (matita_arithmetics_nat.commutative_times
                                                        (matita_arithmetics_nat.times
                                                           d
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 n a)))
                                                        m))
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           n a))
                                                     d)
                                                  (matita_arithmetics_nat.commutative_times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           n a))
                                                     d))
                                               (matita_arithmetics_nat.times
                                                  a n)
                                               (matita_arithmetics_nat.commutative_times
                                                  a n))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  a d)
                                               m)
                                            (matita_arithmetics_nat.commutative_times
                                               (matita_arithmetics_nat.times
                                                  a d)
                                               m)))
                                      (matita_arithmetics_nat.times a
                                         (matita_arithmetics_nat.times d m))
                                      (matita_arithmetics_nat.associative_times
                                         a d m))))
                             (matita_arithmetics_nat.times a
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times d m)
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)))
                             (matita_arithmetics_nat.distributive_times_minus
                                a (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.times c n)
                          (matita_basics_logic.sym_eq
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.minus
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.times c n)
                             (matita_arithmetics_nat.plus_to_minus
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times c n)
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times c n)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           x
                                           (matita_arithmetics_nat.plus
                                              (matita_arithmetics_nat.times c
                                                 n)
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))) =>
                                    cic.lift cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times d m) x))
                                   (matita_arithmetics_nat.minus_to_plus
                                      (matita_arithmetics_nat.times d m)
                                      (matita_arithmetics_nat.times c n)
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.transitive_le
                                         (matita_arithmetics_nat.times c n)
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.times c n))
                                         (matita_arithmetics_nat.times d m)
                                         (matita_arithmetics_nat.le_n_Sn
                                            (matita_arithmetics_nat.times c n))
                                         (matita_arithmetics_nat.lt_minus_to_plus_r
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.times d m)
                                            (matita_arithmetics_nat.times c n)
                                            (matita_basics_logic.eq_coerc
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           d m)
                                                        (matita_arithmetics_nat.times
                                                           c n))))
                                               (matita_arithmetics_nat.lt_O_S
                                                  matita_arithmetics_nat.O)
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_nat.minus
                                                                 x
                                                                 (matita_arithmetics_nat.times
                                                                    c n))))))
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.times
                                                        n c)
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s cic.z))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.univ
                                                                 (cic.type
                                                                    cic.z)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 matita_arithmetics_nat.O
                                                                 (matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                           (cic.lift cic.prop
                                                              (cic.type cic.z)
                                                              ((__ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                __1 :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                matita_arithmetics_nat.lt
                                                                  __ __1)
                                                                 matita_arithmetics_nat.O
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    m d) x)))))
                                                     (matita_basics_logic.rewrite_l
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_gcd.gcd
                                                           m n)
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    x))))
                                                        (matita_basics_logic.rewrite_l
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_gcd.gcd
                                                              m n)
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    x))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)))))
                                                           (matita_basics_logic.refl
                                                              (cic.lift
                                                                 (cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 (cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                              (cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    cic.z)
                                                                 ((__ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.lt
                                                                    __ __1)
                                                                    matita_arithmetics_nat.O
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))))
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.minus
                                                                 (matita_arithmetics_nat.times
                                                                    m d)
                                                                 (matita_arithmetics_nat.times
                                                                    n c))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                              (matita_arithmetics_chinese_reminder.let_clause_15622
                                                                 m n a b posn
                                                                 posm pnm c
                                                                 _clearme d
                                                                 _clearme0 H)
                                                              (matita_arithmetics_gcd.gcd
                                                                 m n)
                                                              (matita_arithmetics_chinese_reminder.let_clause_16002
                                                                 m n a b posn
                                                                 posm pnm c
                                                                 _clearme d
                                                                 _clearme0 H)))
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              m d)
                                                           (matita_arithmetics_nat.times
                                                              n c))
                                                        (matita_arithmetics_chinese_reminder.let_clause_16002
                                                           m n a b posn posm
                                                           pnm c _clearme d
                                                           _clearme0 H))
                                                     (matita_arithmetics_nat.times
                                                        c n)
                                                     (matita_arithmetics_nat.commutative_times
                                                        c n))
                                                  (matita_arithmetics_nat.times
                                                     d m)
                                                  (matita_arithmetics_nat.commutative_times
                                                     d m)))))
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times m d)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.minus
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     c n))
                                               (matita_arithmetics_nat.S
                                                  matita_arithmetics_nat.O)))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n c)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.times
                                                        m d)
                                                     x)
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     x
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_gcd.gcd
                                                     m n)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_gcd.gcd
                                                           m n)
                                                        x))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_gcd.gcd
                                                        m n))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           m d)
                                                        (matita_arithmetics_nat.times
                                                           n c))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           x
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (matita_arithmetics_chinese_reminder.let_clause_15623
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)
                                                     (matita_arithmetics_gcd.gcd
                                                        m n)
                                                     (matita_arithmetics_chinese_reminder.let_clause_16003
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)))
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_chinese_reminder.let_clause_16003
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H))
                                            (matita_arithmetics_nat.times c n)
                                            (matita_arithmetics_nat.commutative_times
                                               c n))
                                         (matita_arithmetics_nat.times d m)
                                         (matita_arithmetics_nat.commutative_times
                                            d m)))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times c n))
                                   (matita_arithmetics_nat.commutative_plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times c n))))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times a c) n)
                       (matita_arithmetics_nat.associative_times a c n))
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.times a n))
                          (matita_arithmetics_nat.times d m))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x
                               (matita_arithmetics_nat.times
                                  (matita_arithmetics_nat.plus b
                                     (matita_arithmetics_nat.times a n))
                                  (matita_arithmetics_nat.times d m))) =>
                        cic.lift cic.prop cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             (matita_arithmetics_nat.minus x
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.times a c) n))
                             b n))
                       (matita_basics_logic.eq_ind_r
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_nat.plus
                             (matita_arithmetics_nat.times c n)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O))
                          (x :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           __ :
                             cic.Term cic.prop
                               ((A :
                                   cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                 _x :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 __ :
                                   cic.Term (cic.type (cic.s (cic.s cic.z)))
                                     A =>
                                 matita_basics_logic.eq
                                   (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                      (cic.type (cic.s (cic.s cic.z))) A)
                                   _x __)
                                  (cic.lift (cic.type cic.z)
                                     (cic.type (cic.s (cic.s cic.z)))
                                     matita_arithmetics_nat.nat)
                                  x
                                  (matita_arithmetics_nat.plus
                                     (matita_arithmetics_nat.times c n)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O))) =>
                           cic.lift cic.prop cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))
                                      x)
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.times a c) n))
                                b n))
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)
                                (matita_arithmetics_nat.times c n))
                             (x :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x
                                     (matita_arithmetics_nat.plus
                                        (matita_arithmetics_nat.S
                                           matita_arithmetics_nat.O)
                                        (matita_arithmetics_nat.times c n))) =>
                              cic.lift cic.prop cic.prop
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _m :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  _p :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_congruence.congruent _n
                                    _m _p)
                                   (matita_arithmetics_nat.minus
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         x)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times a c) n))
                                   b n))
                             (matita_basics_logic.eq_ind_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.plus
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))
                                      (matita_arithmetics_nat.times c n)))
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __ :
                                   cic.Term cic.prop
                                     ((A :
                                         cic.Univ
                                           (cic.type (cic.s (cic.s cic.z))) =>
                                       _x :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       __ :
                                         cic.Term
                                           (cic.type (cic.s (cic.s cic.z))) A =>
                                       matita_basics_logic.eq
                                         (cic.lift
                                            (cic.type (cic.s (cic.s cic.z)))
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A)
                                         _x __)
                                        (cic.lift (cic.type cic.z)
                                           (cic.type (cic.s (cic.s cic.z)))
                                           matita_arithmetics_nat.nat)
                                        x
                                        (matita_arithmetics_nat.plus
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus b
                                                 (matita_arithmetics_nat.times
                                                    a n))
                                              (matita_arithmetics_nat.S
                                                 matita_arithmetics_nat.O))
                                           (matita_arithmetics_nat.times
                                              (matita_arithmetics_nat.plus b
                                                 (matita_arithmetics_nat.times
                                                    a n))
                                              (matita_arithmetics_nat.times c
                                                 n)))) =>
                                 cic.lift cic.prop cic.prop
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _m :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     _p :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_congruence.congruent
                                       _n _m _p)
                                      (matita_arithmetics_nat.minus x
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.times a c)
                                            n))
                                      b n))
                                (matita_basics_logic.eq_ind
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times a n))
                                   (x_1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _x_2 :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_arithmetics_nat.nat)
                                           (matita_arithmetics_nat.plus b
                                              (matita_arithmetics_nat.times a
                                                 n))
                                           x_1) =>
                                    cic.lift cic.prop cic.prop
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _m :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        _p :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_congruence.congruent
                                          _n _m _p)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.plus x_1
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  (matita_arithmetics_nat.times
                                                     c n)))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  a c)
                                               n))
                                         b n))
                                   (matita_basics_logic.eq_ind
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.times
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  a n))
                                            c)
                                         n)
                                      (x_1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _x_2 :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_arithmetics_nat.nat)
                                              (matita_arithmetics_nat.times
                                                 (matita_arithmetics_nat.times
                                                    (matita_arithmetics_nat.plus
                                                       b
                                                       (matita_arithmetics_nat.times
                                                          a n))
                                                    c)
                                                 n)
                                              x_1) =>
                                       cic.lift cic.prop cic.prop
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _p :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_congruence.congruent
                                             _n _m _p)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  x_1)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     a c)
                                                  n))
                                            b n))
                                      (matita_basics_logic.eq_ind_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a n)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           a n))
                                                     c)
                                                  n)))
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          __ :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 x
                                                 (matita_arithmetics_nat.plus
                                                    b
                                                    (matita_arithmetics_nat.plus
                                                       (matita_arithmetics_nat.times
                                                          a n)
                                                       (matita_arithmetics_nat.times
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                b
                                                                (matita_arithmetics_nat.times
                                                                   a n))
                                                             c)
                                                          n)))) =>
                                          cic.lift cic.prop cic.prop
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _m :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              _p :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_congruence.congruent
                                                _n _m _p)
                                               (matita_arithmetics_nat.minus
                                                  x
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.times
                                                        a c)
                                                     n))
                                               b n))
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.plus a
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           a n))
                                                     c))
                                               n)
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_nat.times
                                                       (matita_arithmetics_nat.plus
                                                          a
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                b
                                                                (matita_arithmetics_nat.times
                                                                   a n))
                                                             c))
                                                       n)
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop
                                               ((_n :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 _m :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 _p :
                                                   cic.Term (cic.type cic.z)
                                                     matita_arithmetics_nat.nat =>
                                                 matita_arithmetics_congruence.congruent
                                                   _n _m _p)
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        b x_1)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           a c)
                                                        n))
                                                  b n))
                                            (matita_basics_logic.eq_ind
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 a n))
                                                           c))
                                                     n)
                                                  b)
                                               (x_1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                _x_2 :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_nat.plus
                                                          (matita_arithmetics_nat.times
                                                             (matita_arithmetics_nat.plus
                                                                a
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    a n))
                                                                   c))
                                                             n)
                                                          b)
                                                       x_1) =>
                                                cic.lift cic.prop cic.prop
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    _m :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    _p :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_congruence.congruent
                                                      _n _m _p)
                                                     (matita_arithmetics_nat.minus
                                                        x_1
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              a c)
                                                           n))
                                                     b n))
                                               (matita_basics_logic.eq_ind
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_nat.plus
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n))
                                                                 c))
                                                           n)
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.times
                                                              a c)
                                                           n))
                                                     b)
                                                  (x_1 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   _x_2 :
                                                     cic.Term cic.prop
                                                       ((A :
                                                           cic.Univ
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z))) =>
                                                         _x :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         __ :
                                                           cic.Term
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             A =>
                                                         matita_basics_logic.eq
                                                           (cic.lift
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A)
                                                           _x __)
                                                          (cic.lift
                                                             (cic.type cic.z)
                                                             (cic.type
                                                                (cic.s
                                                                   (cic.s
                                                                    cic.z)))
                                                             matita_arithmetics_nat.nat)
                                                          (matita_arithmetics_nat.plus
                                                             (matita_arithmetics_nat.minus
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    (
                                                                    matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    a n)) c))
                                                                   n)
                                                                (matita_arithmetics_nat.times
                                                                   (matita_arithmetics_nat.times
                                                                    a c)
                                                                   n))
                                                             b)
                                                          x_1) =>
                                                   cic.lift cic.prop cic.prop
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       _m :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       _p :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_congruence.congruent
                                                         _n _m _p)
                                                        x_1 b n))
                                                  (matita_arithmetics_congruence.eq_times_plus_to_congruent
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)) c))
                                                              n)
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 a c)
                                                              n))
                                                        b)
                                                     b n
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.plus
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              c
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a))))
                                                        (matita_arithmetics_nat.times
                                                           a c))
                                                     posn
                                                     (matita_basics_logic.rewrite_r
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        (matita_arithmetics_nat.times
                                                           n a)
                                                        (x :
                                                           cic.Term
                                                             (cic.type cic.z)
                                                             matita_arithmetics_nat.nat =>
                                                         cic.lift cic.prop
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           ((A :
                                                               cic.Univ
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                             _x :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 A =>
                                                             matita_basics_logic.eq
                                                               (cic.lift
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  (cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                  A)
                                                               _x __)
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x) c))
                                                                    n)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c) n))
                                                                 b)
                                                              (matita_arithmetics_nat.plus
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                 b)))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              c
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a)))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) n)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c) n))
                                                                    b)
                                                                 (matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c) n))
                                                                    b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    x) b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)))
                                                                 (matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    x b)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)))) x))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)))
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) n)
                                                                    b))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))) b)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))) b))
                                                                    (
                                                                  matita_arithmetics_nat.minus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)))
                                                                    (
                                                                  matita_arithmetics_nat.distributive_times_minus
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)))
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c) n)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c) n))
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                 n)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                 n))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a))
                                                              c)
                                                           (matita_arithmetics_nat.commutative_times
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    n a))
                                                              c))
                                                        (matita_arithmetics_nat.times
                                                           a n)
                                                        (matita_arithmetics_nat.commutative_times
                                                           a n)))
                                                  (matita_arithmetics_nat.minus
                                                     (matita_arithmetics_nat.plus
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n))
                                                                 c))
                                                           n)
                                                        b)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           a c)
                                                        n))
                                                  (matita_arithmetics_nat.plus_minus
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.times
                                                           a c)
                                                        n)
                                                     (matita_arithmetics_nat.times
                                                        (matita_arithmetics_nat.plus
                                                           a
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.plus
                                                                 b
                                                                 (matita_arithmetics_nat.times
                                                                    a n))
                                                              c))
                                                        n)
                                                     b
                                                     (matita_basics_logic.eq_coerc
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.times
                                                                    a c))
                                                              (matita_arithmetics_nat.times
                                                                 n
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((_n :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.le
                                                               _n __)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.times
                                                                    a c)
                                                                 n)
                                                              (matita_arithmetics_nat.times
                                                                 (matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)) c))
                                                                 n)))
                                                        (matita_arithmetics_nat.monotonic_le_times_r
                                                           n
                                                           (matita_arithmetics_nat.times
                                                              a c)
                                                           (matita_arithmetics_nat.plus
                                                              a
                                                              (matita_arithmetics_nat.times
                                                                 c
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                           (matita_arithmetics_nat.transitive_le
                                                              (matita_arithmetics_nat.times
                                                                 a c)
                                                              (matita_arithmetics_nat.times
                                                                 c
                                                                 (matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                              (matita_arithmetics_nat.plus
                                                                 a
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                              (matita_basics_logic.eq_ind
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    c a)
                                                                 (x_1 :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  _x_2 :
                                                                    cic.Term
                                                                    cic.prop
                                                                    (
                                                                    (
                                                                    A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                    _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                    matita_basics_logic.eq
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                    cic.lift
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                    matita_arithmetics_nat.times
                                                                    c a) x_1) =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    cic.prop
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    x_1
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                 (matita_arithmetics_nat.monotonic_le_times_r
                                                                    c a
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))
                                                                    (
                                                                  matita_arithmetics_nat.transitive_le
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.monotonic_le_times_r
                                                                    a
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    n))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n))
                                                                    posn
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    n))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n) n)))
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    a
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    a n))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a x)))
                                                                    (
                                                                  matita_arithmetics_nat.times_n_1
                                                                    a)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_basics_logic.rewrite_l
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    n m)
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    x
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O)))
                                                                    pnm
                                                                    (
                                                                  matita_arithmetics_gcd.gcd
                                                                    m n)
                                                                    (
                                                                  matita_arithmetics_gcd.commutative_gcd
                                                                    n m)))))
                                                                    (
                                                                  matita_basics_logic.eq_coerc
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a) b)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  matita_arithmetics_nat.le_plus_n_r
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))
                                                                    (
                                                                  matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a) b)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a) b)))))
                                                                 (matita_arithmetics_nat.times
                                                                    a c)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    c a))
                                                              (matita_basics_logic.eq_coerc
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))) a)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))
                                                                 (matita_arithmetics_nat.le_plus_n_r
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))) x))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))) a)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_plus
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))) a)))))
                                                        (matita_basics_logic.rewrite_r
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           (matita_arithmetics_nat.times
                                                              n
                                                              (matita_arithmetics_nat.times
                                                                 a c))
                                                           (x :
                                                              cic.Term
                                                                (cic.type
                                                                   cic.z)
                                                                matita_arithmetics_nat.nat =>
                                                            cic.lift cic.prop
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              ((A :
                                                                  cic.Univ
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                                _x :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                __ :
                                                                  cic.Term
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    A =>
                                                                matita_basics_logic.eq
                                                                  (cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A)
                                                                  _x __)
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                                 (cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __) x
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a n)) c))
                                                                    n)))))
                                                           (matita_basics_logic.rewrite_r
                                                              (cic.lift
                                                                 (cic.type
                                                                    cic.z)
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 matita_arithmetics_nat.nat)
                                                              (matita_arithmetics_nat.times
                                                                 n a)
                                                              (x :
                                                                 cic.Term
                                                                   (cic.type
                                                                    cic.z)
                                                                   matita_arithmetics_nat.nat =>
                                                               cic.lift
                                                                 cic.prop
                                                                 (cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                 ((A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b x) c))
                                                                    n)))))
                                                              (matita_basics_logic.rewrite_r
                                                                 (cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                 (matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))
                                                                 (x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a x) n)))))
                                                                 (matita_basics_logic.rewrite_r
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    matita_arithmetics_nat.nat)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))
                                                                    (
                                                                  x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  (A :
                                                                    cic.Univ
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z))) =>
                                                                   _x :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    (
                                                                    cic.s
                                                                    (
                                                                    cic.s
                                                                    cic.z)))
                                                                    A =>
                                                                   matita_basics_logic.eq
                                                                    (
                                                                   cic.lift
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    (
                                                                   cic.type
                                                                    (
                                                                   cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                                    A) _x __)
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))))))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c)) x))))
                                                                    (
                                                                  matita_basics_logic.refl
                                                                    (
                                                                  cic.lift
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s cic.z))
                                                                    (
                                                                  cic.type
                                                                    (
                                                                  cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                                    (
                                                                  cic.univ
                                                                    (
                                                                  cic.type
                                                                    cic.z)))
                                                                    (
                                                                  cic.lift
                                                                    cic.prop
                                                                    (
                                                                  cic.type
                                                                    cic.z)
                                                                    (
                                                                  (_n :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   __ :
                                                                    cic.Term
                                                                    (
                                                                    cic.type
                                                                    cic.z)
                                                                    matita_arithmetics_nat.nat =>
                                                                   matita_arithmetics_nat.le
                                                                    _n __)
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    a c))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a))))))))
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))) n)
                                                                    (
                                                                  matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    a
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    c
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)))) n))
                                                                 (matita_arithmetics_nat.times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)) c)
                                                                 (matita_arithmetics_nat.commutative_times
                                                                    (
                                                                  matita_arithmetics_nat.plus
                                                                    b
                                                                    (
                                                                  matita_arithmetics_nat.times
                                                                    n a)) c))
                                                              (matita_arithmetics_nat.times
                                                                 a n)
                                                              (matita_arithmetics_nat.commutative_times
                                                                 a n))
                                                           (matita_arithmetics_nat.times
                                                              (matita_arithmetics_nat.times
                                                                 a c)
                                                              n)
                                                           (matita_arithmetics_nat.commutative_times
                                                              (matita_arithmetics_nat.times
                                                                 a c)
                                                              n)))))
                                               (matita_arithmetics_nat.plus b
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 a n))
                                                           c))
                                                     n))
                                               (matita_arithmetics_nat.commutative_plus
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        a
                                                        (matita_arithmetics_nat.times
                                                           (matita_arithmetics_nat.plus
                                                              b
                                                              (matita_arithmetics_nat.times
                                                                 a n))
                                                           c))
                                                     n)
                                                  b))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  a n)
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.times
                                                     (matita_arithmetics_nat.plus
                                                        b
                                                        (matita_arithmetics_nat.times
                                                           a n))
                                                     c)
                                                  n))
                                            (matita_arithmetics_nat.distributive_times_plus_r
                                               n a
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  c)))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.plus b
                                               (matita_arithmetics_nat.times
                                                  a n))
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  c)
                                               n))
                                         (matita_arithmetics_nat.associative_plus
                                            b
                                            (matita_arithmetics_nat.times a n)
                                            (matita_arithmetics_nat.times
                                               (matita_arithmetics_nat.times
                                                  (matita_arithmetics_nat.plus
                                                     b
                                                     (matita_arithmetics_nat.times
                                                        a n))
                                                  c)
                                               n)))
                                      (matita_arithmetics_nat.times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         (matita_arithmetics_nat.times c n))
                                      (matita_arithmetics_nat.associative_times
                                         (matita_arithmetics_nat.plus b
                                            (matita_arithmetics_nat.times a n))
                                         c n))
                                   (matita_arithmetics_nat.times
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.times_n_1
                                      (matita_arithmetics_nat.plus b
                                         (matita_arithmetics_nat.times a n))))
                                (matita_arithmetics_nat.times
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times a n))
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)
                                      (matita_arithmetics_nat.times c n)))
                                (matita_arithmetics_nat.distributive_times_plus
                                   (matita_arithmetics_nat.plus b
                                      (matita_arithmetics_nat.times a n))
                                   (matita_arithmetics_nat.S
                                      matita_arithmetics_nat.O)
                                   (matita_arithmetics_nat.times c n)))
                             (matita_arithmetics_nat.plus
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (matita_arithmetics_nat.commutative_plus
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))
                          (matita_arithmetics_nat.times d m)
                          (matita_arithmetics_nat.minus_to_plus
                             (matita_arithmetics_nat.times d m)
                             (matita_arithmetics_nat.times c n)
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)
                             (matita_arithmetics_nat.transitive_le
                                (matita_arithmetics_nat.times c n)
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.times c n))
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.le_n_Sn
                                   (matita_arithmetics_nat.times c n))
                                (matita_arithmetics_nat.lt_minus_to_plus_r
                                   matita_arithmetics_nat.O
                                   (matita_arithmetics_nat.times d m)
                                   (matita_arithmetics_nat.times c n)
                                   (matita_basics_logic.eq_coerc
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  d m)
                                               (matita_arithmetics_nat.times
                                                  c n))))
                                      (matita_arithmetics_nat.lt_O_S
                                         matita_arithmetics_nat.O)
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.times m d)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.univ (cic.type cic.z)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.S
                                                        matita_arithmetics_nat.O)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((__ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __1 :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.lt
                                                      __ __1)
                                                     matita_arithmetics_nat.O
                                                     (matita_arithmetics_nat.minus
                                                        x
                                                        (matita_arithmetics_nat.times
                                                           c n))))))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times n c)
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_nat.S
                                                           matita_arithmetics_nat.O)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((__ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __1 :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.lt
                                                         __ __1)
                                                        matita_arithmetics_nat.O
                                                        (matita_arithmetics_nat.minus
                                                           (matita_arithmetics_nat.times
                                                              m d)
                                                           x)))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               (x :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           x))))
                                               (matita_basics_logic.rewrite_l
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_gcd.gcd
                                                     m n)
                                                  (x :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s cic.z))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.univ
                                                              (cic.type cic.z)))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              x))
                                                        (cic.lift cic.prop
                                                           (cic.type cic.z)
                                                           ((__ :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             __1 :
                                                               cic.Term
                                                                 (cic.type
                                                                    cic.z)
                                                                 matita_arithmetics_nat.nat =>
                                                             matita_arithmetics_nat.lt
                                                               __ __1)
                                                              matita_arithmetics_nat.O
                                                              (matita_arithmetics_gcd.gcd
                                                                 m n)))))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((__ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __1 :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.lt
                                                            __ __1)
                                                           matita_arithmetics_nat.O
                                                           (matita_arithmetics_gcd.gcd
                                                              m n))))
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)
                                                  (matita_basics_logic.rewrite_r
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_nat.minus
                                                        (matita_arithmetics_nat.times
                                                           m d)
                                                        (matita_arithmetics_nat.times
                                                           n c))
                                                     (x :
                                                        cic.Term
                                                          (cic.type cic.z)
                                                          matita_arithmetics_nat.nat =>
                                                      cic.lift cic.prop
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        ((A :
                                                            cic.Univ
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z))) =>
                                                          _x :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              A =>
                                                          matita_basics_logic.eq
                                                            (cic.lift
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               (cic.type
                                                                  (cic.s
                                                                    (
                                                                   cic.s
                                                                    cic.z)))
                                                               A)
                                                            _x __)
                                                           (cic.lift
                                                              (cic.type cic.z)
                                                              (cic.type
                                                                 (cic.s
                                                                    (
                                                                  cic.s cic.z)))
                                                              matita_arithmetics_nat.nat)
                                                           x
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))
                                                     (matita_arithmetics_chinese_reminder.let_clause_15624
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)
                                                     (matita_arithmetics_gcd.gcd
                                                        m n)
                                                     (matita_arithmetics_chinese_reminder.let_clause_16004
                                                        m n a b posn posm pnm
                                                        c _clearme d
                                                        _clearme0 H)))
                                               (matita_arithmetics_nat.minus
                                                  (matita_arithmetics_nat.times
                                                     m d)
                                                  (matita_arithmetics_nat.times
                                                     n c))
                                               (matita_arithmetics_chinese_reminder.let_clause_16004
                                                  m n a b posn posm pnm c
                                                  _clearme d _clearme0 H))
                                            (matita_arithmetics_nat.times c n)
                                            (matita_arithmetics_nat.commutative_times
                                               c n))
                                         (matita_arithmetics_nat.times d m)
                                         (matita_arithmetics_nat.commutative_times
                                            d m)))))
                             (matita_basics_logic.rewrite_r
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.times m d)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop
                                   (cic.type (cic.s (cic.s cic.z)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_nat.minus x
                                         (matita_arithmetics_nat.times c n))
                                      (matita_arithmetics_nat.S
                                         matita_arithmetics_nat.O)))
                                (matita_basics_logic.rewrite_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_nat.times n c)
                                   (x :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop
                                      (cic.type (cic.s (cic.s cic.z)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.minus
                                            (matita_arithmetics_nat.times m d)
                                            x)
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)))
                                   (matita_basics_logic.rewrite_l
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_arithmetics_nat.nat)
                                      (matita_arithmetics_gcd.gcd m n)
                                      (x :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       cic.lift cic.prop
                                         (cic.type (cic.s (cic.s cic.z)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __ :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            x
                                            (matita_arithmetics_nat.S
                                               matita_arithmetics_nat.O)))
                                      (matita_basics_logic.rewrite_l
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_gcd.gcd m n)
                                         (x :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_gcd.gcd m
                                                  n)
                                               x))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_gcd.gcd m n))
                                         (matita_arithmetics_nat.S
                                            matita_arithmetics_nat.O)
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.minus
                                               (matita_arithmetics_nat.times
                                                  m d)
                                               (matita_arithmetics_nat.times
                                                  n c))
                                            (x :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  x
                                                  (matita_arithmetics_nat.S
                                                     matita_arithmetics_nat.O)))
                                            (matita_arithmetics_chinese_reminder.let_clause_15625
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)
                                            (matita_arithmetics_gcd.gcd m n)
                                            (matita_arithmetics_chinese_reminder.let_clause_16005
                                               m n a b posn posm pnm c
                                               _clearme d _clearme0 H)))
                                      (matita_arithmetics_nat.minus
                                         (matita_arithmetics_nat.times m d)
                                         (matita_arithmetics_nat.times n c))
                                      (matita_arithmetics_chinese_reminder.let_clause_16005
                                         m n a b posn posm pnm c _clearme d
                                         _clearme0 H))
                                   (matita_arithmetics_nat.times c n)
                                   (matita_arithmetics_nat.commutative_times
                                      c n))
                                (matita_arithmetics_nat.times d m)
                                (matita_arithmetics_nat.commutative_times d m))))
                       (matita_arithmetics_nat.times
                          (matita_arithmetics_nat.times
                             (matita_arithmetics_nat.plus b
                                (matita_arithmetics_nat.times a n))
                             d)
                          m)
                       (matita_arithmetics_nat.associative_times
                          (matita_arithmetics_nat.plus b
                             (matita_arithmetics_nat.times a n))
                          d m))))
              _clearme0)
           _clearme)
        (matita_basics_logic.eq_ind
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_gcd.gcd n m)
           (x_1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            _x_2 :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   (matita_arithmetics_gcd.gcd n m) x_1) =>
            cic.lift cic.prop cic.prop
              ((A : cic.Univ (cic.type cic.z) =>
                _P :
                  cic.Term (cic.type cic.z)
                    (cic.prod (cic.type cic.z) (cic.type cic.z) A
                       (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
                matita_basics_logic.ex
                  (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat)
                 (c : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.lift cic.prop cic.prop
                    ((A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__ : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      matita_basics_logic.ex
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (d :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.Or _A _B)
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times c n)
                                   (matita_arithmetics_nat.times d m))
                                x_1)
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __ :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_nat.minus
                                   (matita_arithmetics_nat.times d m)
                                   (matita_arithmetics_nat.times c n))
                                x_1)))))))
           (matita_arithmetics_gcd.eq_minus_gcd m n)
           (matita_arithmetics_nat.S matita_arithmetics_nat.O) pnm).

def congruent_ab_lt :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1)
                          matita_arithmetics_nat.O n)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1)
                               matita_arithmetics_nat.O n) =>
                        cic.prod cic.prop cic.prop
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2)
                             matita_arithmetics_nat.O m)
                          (__1 :
                             cic.Term cic.prop
                               ((__1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __1 __2)
                                  matita_arithmetics_nat.O m) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __2 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __2)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (__2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __2 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __2)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              (A : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) A
                                      (__3 : cic.Term (cic.type cic.z) A =>
                                       cic.univ cic.prop)) =>
                               matita_basics_logic.ex
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 _P)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                (x :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop cic.prop
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_A : cic.Univ cic.prop =>
                                        _B : cic.Univ cic.prop =>
                                        matita_basics_logic.And _A _B)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _p :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_congruence.congruent
                                             _n _m _p)
                                            x a m)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _m :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           _p :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_congruence.congruent
                                             _n _m _p)
                                            x b n))
                                      ((__3 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __4 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __3 __4) x
                                         (matita_arithmetics_nat.times m n))))))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      posn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O n) =>
      posm :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) matita_arithmetics_nat.O m) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.match_ex cic.prop
        (cic.lift (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat)
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         cic.lift cic.prop cic.prop
           (matita_basics_logic.And
              (matita_arithmetics_congruence.congruent x a m)
              (matita_arithmetics_congruence.congruent x b n)))
        (__ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type cic.z) =>
               _P :
                 cic.Term (cic.type cic.z)
                   (cic.prod (cic.type cic.z) (cic.type cic.z) A
                      (__ : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
               matita_basics_logic.ex
                 (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                (cic.lift (cic.type cic.z) (cic.type cic.z)
                   matita_arithmetics_nat.nat)
                (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                 cic.lift cic.prop cic.prop
                   ((_A : cic.Univ cic.prop =>
                     _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_congruence.congruent _n _m _p) x a
                         m)
                      ((_n :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _m :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _p :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        matita_arithmetics_congruence.congruent _n _m _p) x b
                         n)))) =>
         (A : cic.Univ (cic.type cic.z) =>
          _P :
            cic.Term (cic.type cic.z)
              (cic.prod (cic.type cic.z) (cic.type cic.z) A
                 (__1 : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
          matita_basics_logic.ex
            (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
           (cic.lift (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat)
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p) x a m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p) x b n))
                 ((__1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __2 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __1 __2) x
                    (matita_arithmetics_nat.times m n)))))
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         _clearme :
           cic.Term cic.prop
             ((_A : cic.Univ cic.prop =>
               _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _p :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_congruence.congruent _n _m _p) x a m)
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _p :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_congruence.congruent _n _m _p) x b n)) =>
         matita_basics_logic.match_And cic.prop
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_congruence.congruent _n _m _p) x a m)
           ((_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             _p : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
             matita_arithmetics_congruence.congruent _n _m _p) x b n)
           (__ :
              cic.Term cic.prop
                ((_A : cic.Univ cic.prop =>
                  _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_congruence.congruent _n _m _p) x a m)
                   ((_n :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _m :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _p :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_congruence.congruent _n _m _p) x b n)) =>
            (A : cic.Univ (cic.type cic.z) =>
             _P :
               cic.Term (cic.type cic.z)
                 (cic.prod (cic.type cic.z) (cic.type cic.z) A
                    (__1 : cic.Term (cic.type cic.z) A => cic.univ cic.prop)) =>
             matita_basics_logic.ex
               (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (x0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          a m)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          b n))
                    ((__1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __2 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __1 __2) x0
                       (matita_arithmetics_nat.times m n)))))
           (cxa :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _p :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_congruence.congruent _n _m _p) x a m) =>
            cxb :
              cic.Term cic.prop
                ((_n :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _m :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  _p :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_arithmetics_congruence.congruent _n _m _p) x b n) =>
            matita_basics_logic.ex_intro
              (cic.lift (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat)
              (x0 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.lift cic.prop cic.prop
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((_A : cic.Univ cic.prop =>
                      _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          a m)
                       ((_n :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _m :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         _p :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_congruence.congruent _n _m _p) x0
                          b n))
                    ((__ :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      __1 :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_nat.lt __ __1) x0
                       (matita_arithmetics_nat.times m n))))
              (matita_arithmetics_div_and_mod.mod x
                 (matita_arithmetics_nat.times m n))
              (matita_basics_logic.conj
                 ((_A : cic.Univ cic.prop =>
                   _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       a m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       b n))
                 ((__ :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   __1 :
                     cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                   matita_arithmetics_nat.lt __ __1)
                    (matita_arithmetics_div_and_mod.mod x
                       (matita_arithmetics_nat.times m n))
                    (matita_arithmetics_nat.times m n))
                 (matita_basics_logic.conj
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       a m)
                    ((_n :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _m :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      _p :
                        cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                      matita_arithmetics_congruence.congruent _n _m _p)
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       b n)
                    (matita_arithmetics_congruence.transitive_congruent m
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       x a
                       (matita_basics_logic.sym_eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod x m)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.mod x
                                (matita_arithmetics_nat.times m n))
                             m)
                          (matita_basics_logic.eq_ind_r
                             (cic.lift (cic.type cic.z)
                                (cic.type (cic.s (cic.s cic.z)))
                                matita_arithmetics_nat.nat)
                             (matita_arithmetics_nat.times n m)
                             (x0 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __ :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __ :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     x0 (matita_arithmetics_nat.times n m)) =>
                              cic.lift cic.prop cic.prop
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.mod x m)
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_div_and_mod.mod x
                                         x0)
                                      m)))
                             (matita_arithmetics_congruence.congruent_n_mod_times
                                x n m posm posn)
                             (matita_arithmetics_nat.times m n)
                             (matita_arithmetics_nat.commutative_times m n)))
                       cxa)
                    (matita_arithmetics_congruence.transitive_congruent n
                       (matita_arithmetics_div_and_mod.mod x
                          (matita_arithmetics_nat.times m n))
                       x b
                       (matita_basics_logic.sym_eq
                          (cic.lift (cic.type cic.z)
                             (cic.type (cic.s (cic.s cic.z)))
                             matita_arithmetics_nat.nat)
                          (matita_arithmetics_div_and_mod.mod x n)
                          (matita_arithmetics_div_and_mod.mod
                             (matita_arithmetics_div_and_mod.mod x
                                (matita_arithmetics_nat.times m n))
                             n)
                          (matita_arithmetics_congruence.congruent_n_mod_times
                             x m n posn posm))
                       cxb))
                 (matita_arithmetics_div_and_mod.lt_mod_m_m x
                    (matita_arithmetics_nat.times m n)
                    (matita_basics_logic.eq_ind_r
                       (cic.lift (cic.type cic.z)
                          (cic.type (cic.s (cic.s cic.z)))
                          matita_arithmetics_nat.nat)
                       (matita_arithmetics_nat.times matita_arithmetics_nat.O
                          matita_arithmetics_nat.O)
                       (x0 :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        __ :
                          cic.Term cic.prop
                            ((A :
                                cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                              _x :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              __ :
                                cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                              matita_basics_logic.eq
                                (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                   (cic.type (cic.s (cic.s cic.z))) A)
                                _x __)
                               (cic.lift (cic.type cic.z)
                                  (cic.type (cic.s (cic.s cic.z)))
                                  matita_arithmetics_nat.nat)
                               x0
                               (matita_arithmetics_nat.times
                                  matita_arithmetics_nat.O
                                  matita_arithmetics_nat.O)) =>
                        cic.lift cic.prop cic.prop
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) x0
                             (matita_arithmetics_nat.times m n)))
                       (matita_arithmetics_nat.lt_times
                          matita_arithmetics_nat.O m matita_arithmetics_nat.O
                          n posm posn)
                       matita_arithmetics_nat.O
                       (matita_arithmetics_nat.times_n_O
                          matita_arithmetics_nat.O)))))
           _clearme)
        (matita_arithmetics_chinese_reminder.congruent_ab m n a b posn posm
           pnm).

def cr_pair :
      cic.Term (cic.type cic.z)
        (cic.prod (cic.type cic.z) (cic.type cic.z)
           matita_arithmetics_nat.nat
           (_n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) (cic.type cic.z)
              matita_arithmetics_nat.nat
              (_m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) (cic.type cic.z)
                 matita_arithmetics_nat.nat
                 (_a :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) (cic.type cic.z)
                    matita_arithmetics_nat.nat
                    (_b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_arithmetics_nat.nat)))))
      :=
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      matita_arithmetics_minimization.min (matita_arithmetics_nat.times n m)
        matita_arithmetics_nat.O
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         matita_basics_bool.andb
           (matita_arithmetics_nat.eqb
              (matita_arithmetics_div_and_mod.mod x n) a)
           (matita_arithmetics_nat.eqb
              (matita_arithmetics_div_and_mod.mod x m) b)).

def cr_pair1 :
      cic.Term cic.prop
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_chinese_reminder.cr_pair
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              matita_arithmetics_nat.O matita_arithmetics_nat.O)
           matita_arithmetics_nat.O)
      :=
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chinese_reminder.cr_pair
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           matita_arithmetics_nat.O matita_arithmetics_nat.O).

def cr_pair2 :
      cic.Term cic.prop
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_chinese_reminder.cr_pair
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              matita_arithmetics_nat.O)
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))))
      :=
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chinese_reminder.cr_pair
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           matita_arithmetics_nat.O).

def cr_pair3 :
      cic.Term cic.prop
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_chinese_reminder.cr_pair
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_nat.S matita_arithmetics_nat.O)
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O))))))
      :=
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chinese_reminder.cr_pair
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.S matita_arithmetics_nat.O)
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))).

def cr_pair4 :
      cic.Term cic.prop
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_chinese_reminder.cr_pair
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))))))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 (matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    (
                                                                  matita_arithmetics_nat.S
                                                                    matita_arithmetics_nat.O))))))))))))))))))))))))
      :=
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_chinese_reminder.cr_pair
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                matita_arithmetics_nat.O)))))))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S matita_arithmetics_nat.O))).

def cr_pair5 :
      cic.Term cic.prop
        ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
          _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
          matita_basics_logic.eq
            (cic.lift (cic.type (cic.s (cic.s cic.z)))
               (cic.type (cic.s (cic.s cic.z))) A)
            _x __)
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           (matita_arithmetics_chinese_reminder.cr_pair
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S matita_arithmetics_nat.O)))
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O)))))))
              matita_arithmetics_nat.O
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S matita_arithmetics_nat.O)))))
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              (matita_arithmetics_nat.S
                                                                 matita_arithmetics_nat.O)))))))))))))))))))
      :=
      matita_basics_logic.refl
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        (matita_arithmetics_nat.S
           (matita_arithmetics_nat.S
              (matita_arithmetics_nat.S
                 (matita_arithmetics_nat.S
                    (matita_arithmetics_nat.S
                       (matita_arithmetics_nat.S
                          (matita_arithmetics_nat.S
                             (matita_arithmetics_nat.S
                                (matita_arithmetics_nat.S
                                   (matita_arithmetics_nat.S
                                      (matita_arithmetics_nat.S
                                         (matita_arithmetics_nat.S
                                            (matita_arithmetics_nat.S
                                               (matita_arithmetics_nat.S
                                                  (matita_arithmetics_nat.S
                                                     (matita_arithmetics_nat.S
                                                        (matita_arithmetics_nat.S
                                                           (matita_arithmetics_nat.S
                                                              matita_arithmetics_nat.O)))))))))))))))))).

def mod_cr_pair :
      cic.Term cic.prop
        (cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
           (m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
              (n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
               cic.prod (cic.type cic.z) cic.prop matita_arithmetics_nat.nat
                 (a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  cic.prod (cic.type cic.z) cic.prop
                    matita_arithmetics_nat.nat
                    (b :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.prod cic.prop cic.prop
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1) a m)
                       (__ :
                          cic.Term cic.prop
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) a m) =>
                        cic.prod cic.prop cic.prop
                          ((__1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __2 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __1 __2) b n)
                          (__1 :
                             cic.Term cic.prop
                               ((__1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __2 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __1 __2) b n) =>
                           cic.prod cic.prop cic.prop
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __2 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __2)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_arithmetics_nat.nat)
                                (matita_arithmetics_gcd.gcd n m)
                                (matita_arithmetics_nat.S
                                   matita_arithmetics_nat.O))
                             (__2 :
                                cic.Term cic.prop
                                  ((A :
                                      cic.Univ
                                        (cic.type (cic.s (cic.s cic.z))) =>
                                    _x :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    __2 :
                                      cic.Term
                                        (cic.type (cic.s (cic.s cic.z))) A =>
                                    matita_basics_logic.eq
                                      (cic.lift
                                         (cic.type (cic.s (cic.s cic.z)))
                                         (cic.type (cic.s (cic.s cic.z))) A)
                                      _x __2)
                                     (cic.lift (cic.type cic.z)
                                        (cic.type (cic.s (cic.s cic.z)))
                                        matita_arithmetics_nat.nat)
                                     (matita_arithmetics_gcd.gcd n m)
                                     (matita_arithmetics_nat.S
                                        matita_arithmetics_nat.O)) =>
                              (_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __3 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __3)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_chinese_reminder.cr_pair
                                         m n a b)
                                      m)
                                   a)
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __3 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __3)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_arithmetics_nat.nat)
                                   (matita_arithmetics_div_and_mod.mod
                                      (matita_arithmetics_chinese_reminder.cr_pair
                                         m n a b)
                                      n)
                                   b)))))))))
      :=
      m : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      n : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      a : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      b : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
      ltam :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) a m) =>
      ltbn :
        cic.Term cic.prop
          ((__ : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __1 : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            matita_arithmetics_nat.lt __ __1) b n) =>
      pnm :
        cic.Term cic.prop
          ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
            _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
            matita_basics_logic.eq
              (cic.lift (cic.type (cic.s (cic.s cic.z)))
                 (cic.type (cic.s (cic.s cic.z))) A)
              _x __)
             (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                matita_arithmetics_nat.nat)
             (matita_arithmetics_gcd.gcd n m)
             (matita_arithmetics_nat.S matita_arithmetics_nat.O)) =>
      matita_basics_logic.eq_ind_r
        (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
           matita_arithmetics_nat.nat)
        a
        (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
         __ :
           cic.Term cic.prop
             ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
               _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
               matita_basics_logic.eq
                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                    (cic.type (cic.s (cic.s cic.z))) A)
                 _x __)
                (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                   matita_arithmetics_nat.nat)
                x a) =>
         cic.lift cic.prop cic.prop
           ((_A : cic.Univ cic.prop =>
             _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 x a)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __1)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_chinese_reminder.cr_pair m n a b) n)
                 b)))
        (matita_basics_logic.eq_ind_r
           (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
              matita_arithmetics_nat.nat)
           b
           (x : cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
            __ :
              cic.Term cic.prop
                ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                  _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                  matita_basics_logic.eq
                    (cic.lift (cic.type (cic.s (cic.s cic.z)))
                       (cic.type (cic.s (cic.s cic.z))) A)
                    _x __)
                   (cic.lift (cic.type cic.z)
                      (cic.type (cic.s (cic.s cic.z)))
                      matita_arithmetics_nat.nat)
                   x b) =>
            cic.lift cic.prop cic.prop
              ((_A : cic.Univ cic.prop =>
                _B : cic.Univ cic.prop => matita_basics_logic.And _A _B)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    a a)
                 ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                   _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   __1 : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                   matita_basics_logic.eq
                     (cic.lift (cic.type (cic.s (cic.s cic.z)))
                        (cic.type (cic.s (cic.s cic.z))) A)
                     _x __1)
                    (cic.lift (cic.type cic.z)
                       (cic.type (cic.s (cic.s cic.z)))
                       matita_arithmetics_nat.nat)
                    x b)))
           (matita_basics_logic.conj
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 a a)
              ((A : cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                _x : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                __ : cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                matita_basics_logic.eq
                  (cic.lift (cic.type (cic.s (cic.s cic.z)))
                     (cic.type (cic.s (cic.s cic.z))) A)
                  _x __)
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 b b)
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 a)
              (matita_basics_logic.refl
                 (cic.lift (cic.type cic.z) (cic.type (cic.s (cic.s cic.z)))
                    matita_arithmetics_nat.nat)
                 b))
           (matita_arithmetics_div_and_mod.mod
              (matita_arithmetics_chinese_reminder.cr_pair m n a b) n)
           (matita_arithmetics_nat.eqb_true_to_eq
              (matita_arithmetics_div_and_mod.mod
                 (matita_arithmetics_chinese_reminder.cr_pair m n a b) n)
              b
              (matita_basics_bool.andb_true_r
                 (matita_arithmetics_nat.eqb
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_chinese_reminder.cr_pair m n a b)
                       m)
                    a)
                 (matita_arithmetics_nat.eqb
                    (matita_arithmetics_div_and_mod.mod
                       (matita_arithmetics_chinese_reminder.cr_pair m n a b)
                       n)
                    b)
                 (matita_arithmetics_minimization.f_min_true
                    (__ :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     matita_basics_bool.andb
                       (matita_arithmetics_nat.eqb
                          (matita_arithmetics_div_and_mod.mod __ m) a)
                       (matita_arithmetics_nat.eqb
                          (matita_arithmetics_div_and_mod.mod __ n) b))
                    (matita_arithmetics_nat.times m n)
                    matita_arithmetics_nat.O
                    (matita_basics_logic.match_ex cic.prop
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop
                          (matita_basics_logic.And
                             (matita_basics_logic.And
                                (matita_arithmetics_congruence.congruent x a
                                   m)
                                (matita_arithmetics_congruence.congruent x b
                                   n))
                             (matita_arithmetics_nat.lt x
                                (matita_arithmetics_nat.times m n))))
                       (__ :
                          cic.Term cic.prop
                            ((A : cic.Univ (cic.type cic.z) =>
                              _P :
                                cic.Term (cic.type cic.z)
                                  (cic.prod (cic.type cic.z) (cic.type cic.z)
                                     A
                                     (__ : cic.Term (cic.type cic.z) A =>
                                      cic.univ cic.prop)) =>
                              matita_basics_logic.ex
                                (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                                _P)
                               (cic.lift (cic.type cic.z) (cic.type cic.z)
                                  matita_arithmetics_nat.nat)
                               (x :
                                  cic.Term (cic.type cic.z)
                                    matita_arithmetics_nat.nat =>
                                cic.lift cic.prop cic.prop
                                  ((_A : cic.Univ cic.prop =>
                                    _B : cic.Univ cic.prop =>
                                    matita_basics_logic.And _A _B)
                                     ((_A : cic.Univ cic.prop =>
                                       _B : cic.Univ cic.prop =>
                                       matita_basics_logic.And _A _B)
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _p :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_congruence.congruent
                                            _n _m _p)
                                           x a m)
                                        ((_n :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _m :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _p :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          matita_arithmetics_congruence.congruent
                                            _n _m _p)
                                           x b n))
                                     ((__ :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __ __1) x
                                        (matita_arithmetics_nat.times m n))))) =>
                        (A : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                (__1 : cic.Term (cic.type cic.z) A =>
                                 cic.univ cic.prop)) =>
                         matita_basics_logic.ex
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             matita_arithmetics_nat.nat)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop cic.prop
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __1)
                                      matita_arithmetics_nat.O i)
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) i
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m n)
                                         matita_arithmetics_nat.O)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_basics_bool.bool)
                                   (matita_basics_bool.andb
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            i m)
                                         a)
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            i n)
                                         b))
                                   matita_basics_bool.true))))
                       (x :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        _clearme :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x a m)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x b n))
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) x
                                  (matita_arithmetics_nat.times m n))) =>
                        matita_basics_logic.match_And cic.prop
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                x a m)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                x b n))
                          ((__ :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            __1 :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_nat.lt __ __1) x
                             (matita_arithmetics_nat.times m n))
                          (__ :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_A : cic.Univ cic.prop =>
                                    _B : cic.Univ cic.prop =>
                                    matita_basics_logic.And _A _B)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x a m)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x b n))
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) x
                                     (matita_arithmetics_nat.times m n))) =>
                           (A : cic.Univ (cic.type cic.z) =>
                            _P :
                              cic.Term (cic.type cic.z)
                                (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                   (__1 : cic.Term (cic.type cic.z) A =>
                                    cic.univ cic.prop)) =>
                            matita_basics_logic.ex
                              (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                              _P)
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop cic.prop
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __1)
                                         matita_arithmetics_nat.O i)
                                      ((__1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __2 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __1 __2) i
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __1 :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __1)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      (matita_basics_bool.andb
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               i m)
                                            a)
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               i n)
                                            b))
                                      matita_basics_bool.true))))
                          (_clearme0 :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x a m)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x b n)) =>
                           matita_basics_logic.match_And cic.prop
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                x a m)
                             ((_n :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _m :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               _p :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_congruence.congruent _n _m
                                 _p)
                                x b n)
                             (__ :
                                cic.Term cic.prop
                                  ((_A : cic.Univ cic.prop =>
                                    _B : cic.Univ cic.prop =>
                                    matita_basics_logic.And _A _B)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x a m)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x b n)) =>
                              cic.prod cic.prop cic.prop
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2) x
                                   (matita_arithmetics_nat.times m n))
                                (__1 :
                                   cic.Term cic.prop
                                     ((__1 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       __2 :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_nat.lt __1 __2) x
                                        (matita_arithmetics_nat.times m n)) =>
                                 (A : cic.Univ (cic.type cic.z) =>
                                  _P :
                                    cic.Term (cic.type cic.z)
                                      (cic.prod (cic.type cic.z)
                                         (cic.type cic.z) A
                                         (__2 :
                                            cic.Term (cic.type cic.z) A =>
                                          cic.univ cic.prop)) =>
                                  matita_basics_logic.ex
                                    (cic.lift (cic.type cic.z)
                                       (cic.type cic.z) A)
                                    _P)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type cic.z)
                                      matita_arithmetics_nat.nat)
                                   (i :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    cic.lift cic.prop cic.prop
                                      ((_A : cic.Univ cic.prop =>
                                        _B : cic.Univ cic.prop =>
                                        matita_basics_logic.And _A _B)
                                         ((_A : cic.Univ cic.prop =>
                                           _B : cic.Univ cic.prop =>
                                           matita_basics_logic.And _A _B)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __2 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n
                                                __2)
                                               matita_arithmetics_nat.O i)
                                            ((__2 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __3 :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.lt __2
                                                __3)
                                               i
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m n)
                                                  matita_arithmetics_nat.O)))
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __2 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __2)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_basics_bool.bool)
                                            (matita_basics_bool.andb
                                               (matita_arithmetics_nat.eqb
                                                  (matita_arithmetics_div_and_mod.mod
                                                     i m)
                                                  a)
                                               (matita_arithmetics_nat.eqb
                                                  (matita_arithmetics_div_and_mod.mod
                                                     i n)
                                                  b))
                                            matita_basics_bool.true)))))
                             (cxa :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x a m) =>
                              cxb :
                                cic.Term cic.prop
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x b n) =>
                              ltx :
                                cic.Term cic.prop
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) x
                                     (matita_arithmetics_nat.times m n)) =>
                              matita_basics_logic.ex_intro
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop cic.prop
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_A : cic.Univ cic.prop =>
                                        _B : cic.Univ cic.prop =>
                                        matita_basics_logic.And _A _B)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            matita_arithmetics_nat.O i)
                                         ((__ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __1 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __ __1)
                                            i
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               matita_arithmetics_nat.O)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __ :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         (matita_basics_bool.andb
                                            (matita_arithmetics_nat.eqb
                                               (matita_arithmetics_div_and_mod.mod
                                                  i m)
                                               a)
                                            (matita_arithmetics_nat.eqb
                                               (matita_arithmetics_div_and_mod.mod
                                                  i n)
                                               b))
                                         matita_basics_bool.true)))
                                x
                                (matita_basics_logic.conj
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         matita_arithmetics_nat.O x)
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      (matita_basics_bool.andb
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               x m)
                                            a)
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               x n)
                                            b))
                                      matita_basics_bool.true)
                                   (matita_basics_logic.conj
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         matita_arithmetics_nat.O x)
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) x
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O))
                                      (matita_arithmetics_nat.le_O_n x)
                                      (matita_basics_logic.eq_coerc
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.S x)
                                               (matita_arithmetics_nat.times
                                                  m n)))
                                         (cic.lift cic.prop (cic.type cic.z)
                                            ((_n :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              __ :
                                                cic.Term (cic.type cic.z)
                                                  matita_arithmetics_nat.nat =>
                                              matita_arithmetics_nat.le _n __)
                                               (matita_arithmetics_nat.S x)
                                               (matita_arithmetics_nat.plus
                                                  (matita_arithmetics_nat.times
                                                     m n)
                                                  matita_arithmetics_nat.O)))
                                         ltx
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.plus
                                               matita_arithmetics_nat.O
                                               (matita_arithmetics_nat.times
                                                  m n))
                                            (x0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           x)
                                                        (matita_arithmetics_nat.times
                                                           m n)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           x)
                                                        x0))))
                                            (matita_basics_logic.rewrite_l
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               (x0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s cic.z))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.univ
                                                           (cic.type cic.z)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.S
                                                              x)
                                                           (matita_arithmetics_nat.times
                                                              m n)))
                                                     (cic.lift cic.prop
                                                        (cic.type cic.z)
                                                        ((_n :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          __ :
                                                            cic.Term
                                                              (cic.type cic.z)
                                                              matita_arithmetics_nat.nat =>
                                                          matita_arithmetics_nat.le
                                                            _n __)
                                                           (matita_arithmetics_nat.S
                                                              x)
                                                           x0))))
                                               (matita_basics_logic.refl
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           x)
                                                        (matita_arithmetics_nat.times
                                                           m n))))
                                               (matita_arithmetics_nat.plus
                                                  matita_arithmetics_nat.O
                                                  (matita_arithmetics_nat.times
                                                     m n))
                                               (matita_arithmetics_nat.plus_O_n
                                                  (matita_arithmetics_nat.times
                                                     m n)))
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               matita_arithmetics_nat.O)
                                            (matita_arithmetics_nat.commutative_plus
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               matita_arithmetics_nat.O))))
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      matita_basics_bool.true
                                      (x0 :
                                         cic.Term (cic.type cic.z)
                                           matita_basics_bool.bool =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_basics_bool.bool)
                                              x0 matita_basics_bool.true) =>
                                       cic.lift cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_basics_bool.bool)
                                            (matita_basics_bool.andb x0
                                               (matita_arithmetics_nat.eqb
                                                  (matita_arithmetics_div_and_mod.mod
                                                     x n)
                                                  b))
                                            matita_basics_bool.true))
                                      (matita_basics_logic.eq_ind_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         matita_basics_bool.true
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_basics_bool.bool =>
                                          __ :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_basics_bool.bool)
                                                 x0 matita_basics_bool.true) =>
                                          cic.lift cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __1 :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __1)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_basics_bool.bool)
                                               (matita_basics_bool.andb
                                                  matita_basics_bool.true x0)
                                               matita_basics_bool.true))
                                         (matita_basics_logic.refl
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_basics_bool.bool)
                                            (matita_basics_bool.andb
                                               matita_basics_bool.true
                                               matita_basics_bool.true))
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               x n)
                                            b)
                                         (matita_arithmetics_nat.eq_to_eqb_true
                                            (matita_arithmetics_div_and_mod.mod
                                               x n)
                                            b
                                            (matita_basics_logic.eq_ind
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_div_and_mod.mod
                                                  b n)
                                               (x_1 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                _x_2 :
                                                  cic.Term cic.prop
                                                    ((A :
                                                        cic.Univ
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z))) =>
                                                      _x :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      __ :
                                                        cic.Term
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          A =>
                                                      matita_basics_logic.eq
                                                        (cic.lift
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A)
                                                        _x __)
                                                       (cic.lift
                                                          (cic.type cic.z)
                                                          (cic.type
                                                             (cic.s
                                                                (cic.s cic.z)))
                                                          matita_arithmetics_nat.nat)
                                                       (matita_arithmetics_div_and_mod.mod
                                                          b n)
                                                       x_1) =>
                                                cic.lift cic.prop cic.prop
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_div_and_mod.mod
                                                        x n)
                                                     x_1))
                                               (matita_basics_logic.rewrite_r
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     b n)
                                                  (x0 :
                                                     cic.Term
                                                       (cic.type cic.z)
                                                       matita_arithmetics_nat.nat =>
                                                   cic.lift cic.prop
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     ((A :
                                                         cic.Univ
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z))) =>
                                                       _x :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           A =>
                                                       matita_basics_logic.eq
                                                         (cic.lift
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            (cic.type
                                                               (cic.s
                                                                  (cic.s
                                                                    cic.z)))
                                                            A)
                                                         _x __)
                                                        (cic.lift
                                                           (cic.type cic.z)
                                                           (cic.type
                                                              (cic.s
                                                                 (cic.s cic.z)))
                                                           matita_arithmetics_nat.nat)
                                                        x0
                                                        (matita_arithmetics_div_and_mod.mod
                                                           b n)))
                                                  (matita_basics_logic.refl
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     (matita_arithmetics_div_and_mod.mod
                                                        b n))
                                                  (matita_arithmetics_div_and_mod.mod
                                                     x n)
                                                  cxb)
                                               b
                                               (matita_arithmetics_div_and_mod.lt_to_eq_mod
                                                  b n ltbn))))
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            x m)
                                         a)
                                      (matita_arithmetics_nat.eq_to_eqb_true
                                         (matita_arithmetics_div_and_mod.mod
                                            x m)
                                         a
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_div_and_mod.mod
                                               a m)
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       a m)
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     x m)
                                                  x_1))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_div_and_mod.mod
                                                  a m)
                                               (x0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     x0
                                                     (matita_arithmetics_div_and_mod.mod
                                                        a m)))
                                               (matita_basics_logic.refl
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     a m))
                                               (matita_arithmetics_div_and_mod.mod
                                                  x m)
                                               cxa)
                                            a
                                            (matita_arithmetics_div_and_mod.lt_to_eq_mod
                                               a m ltam))))))
                             _clearme0)
                          _clearme)
                       (matita_arithmetics_chinese_reminder.congruent_ab_lt m
                          n a b
                          (matita_arithmetics_nat.le_to_lt_to_lt
                             matita_arithmetics_nat.O b n
                             (matita_arithmetics_nat.le_O_n b) ltbn)
                          (matita_arithmetics_nat.le_to_lt_to_lt
                             matita_arithmetics_nat.O a m
                             (matita_arithmetics_nat.le_O_n a) ltam)
                          pnm))))))
        (matita_arithmetics_div_and_mod.mod
           (matita_arithmetics_chinese_reminder.cr_pair m n a b) m)
        (matita_arithmetics_nat.eqb_true_to_eq
           (matita_arithmetics_div_and_mod.mod
              (matita_arithmetics_chinese_reminder.cr_pair m n a b) m)
           a
           (matita_basics_bool.andb_true_l
              (matita_arithmetics_nat.eqb
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_chinese_reminder.cr_pair m n a b) m)
                 a)
              (matita_arithmetics_nat.eqb
                 (matita_arithmetics_div_and_mod.mod
                    (matita_arithmetics_chinese_reminder.cr_pair m n a b) n)
                 b)
              (matita_arithmetics_minimization.f_min_true
                 (__ :
                    cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                  matita_basics_bool.andb
                    (matita_arithmetics_nat.eqb
                       (matita_arithmetics_div_and_mod.mod __ m) a)
                    (matita_arithmetics_nat.eqb
                       (matita_arithmetics_div_and_mod.mod __ n) b))
                 (matita_arithmetics_nat.times m n) matita_arithmetics_nat.O
                 (matita_basics_logic.match_ex cic.prop
                    (cic.lift (cic.type cic.z) (cic.type cic.z)
                       matita_arithmetics_nat.nat)
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     cic.lift cic.prop cic.prop
                       (matita_basics_logic.And
                          (matita_basics_logic.And
                             (matita_arithmetics_congruence.congruent x a m)
                             (matita_arithmetics_congruence.congruent x b n))
                          (matita_arithmetics_nat.lt x
                             (matita_arithmetics_nat.times m n))))
                    (__ :
                       cic.Term cic.prop
                         ((A : cic.Univ (cic.type cic.z) =>
                           _P :
                             cic.Term (cic.type cic.z)
                               (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                  (__ : cic.Term (cic.type cic.z) A =>
                                   cic.univ cic.prop)) =>
                           matita_basics_logic.ex
                             (cic.lift (cic.type cic.z) (cic.type cic.z) A)
                             _P)
                            (cic.lift (cic.type cic.z) (cic.type cic.z)
                               matita_arithmetics_nat.nat)
                            (x :
                               cic.Term (cic.type cic.z)
                                 matita_arithmetics_nat.nat =>
                             cic.lift cic.prop cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_A : cic.Univ cic.prop =>
                                    _B : cic.Univ cic.prop =>
                                    matita_basics_logic.And _A _B)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x a m)
                                     ((_n :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _m :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       _p :
                                         cic.Term (cic.type cic.z)
                                           matita_arithmetics_nat.nat =>
                                       matita_arithmetics_congruence.congruent
                                         _n _m _p)
                                        x b n))
                                  ((__ :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __ __1) x
                                     (matita_arithmetics_nat.times m n))))) =>
                     (A : cic.Univ (cic.type cic.z) =>
                      _P :
                        cic.Term (cic.type cic.z)
                          (cic.prod (cic.type cic.z) (cic.type cic.z) A
                             (__1 : cic.Term (cic.type cic.z) A =>
                              cic.univ cic.prop)) =>
                      matita_basics_logic.ex
                        (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                       (cic.lift (cic.type cic.z) (cic.type cic.z)
                          matita_arithmetics_nat.nat)
                       (i :
                          cic.Term (cic.type cic.z)
                            matita_arithmetics_nat.nat =>
                        cic.lift cic.prop cic.prop
                          ((_A : cic.Univ cic.prop =>
                            _B : cic.Univ cic.prop =>
                            matita_basics_logic.And _A _B)
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((_n :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.le _n __1)
                                   matita_arithmetics_nat.O i)
                                ((__1 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  __2 :
                                    cic.Term (cic.type cic.z)
                                      matita_arithmetics_nat.nat =>
                                  matita_arithmetics_nat.lt __1 __2) i
                                   (matita_arithmetics_nat.plus
                                      (matita_arithmetics_nat.times m n)
                                      matita_arithmetics_nat.O)))
                             ((A :
                                 cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                               _x :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               __1 :
                                 cic.Term (cic.type (cic.s (cic.s cic.z))) A =>
                               matita_basics_logic.eq
                                 (cic.lift (cic.type (cic.s (cic.s cic.z)))
                                    (cic.type (cic.s (cic.s cic.z))) A)
                                 _x __1)
                                (cic.lift (cic.type cic.z)
                                   (cic.type (cic.s (cic.s cic.z)))
                                   matita_basics_bool.bool)
                                (matita_basics_bool.andb
                                   (matita_arithmetics_nat.eqb
                                      (matita_arithmetics_div_and_mod.mod i m)
                                      a)
                                   (matita_arithmetics_nat.eqb
                                      (matita_arithmetics_div_and_mod.mod i n)
                                      b))
                                matita_basics_bool.true))))
                    (x :
                       cic.Term (cic.type cic.z) matita_arithmetics_nat.nat =>
                     _clearme :
                       cic.Term cic.prop
                         ((_A : cic.Univ cic.prop =>
                           _B : cic.Univ cic.prop =>
                           matita_basics_logic.And _A _B)
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x a m)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x b n))
                            ((__ :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              __1 :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              matita_arithmetics_nat.lt __ __1) x
                               (matita_arithmetics_nat.times m n))) =>
                     matita_basics_logic.match_And cic.prop
                       ((_A : cic.Univ cic.prop =>
                         _B : cic.Univ cic.prop =>
                         matita_basics_logic.And _A _B)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             x a m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             x b n))
                       ((__ :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         __1 :
                           cic.Term (cic.type cic.z)
                             matita_arithmetics_nat.nat =>
                         matita_arithmetics_nat.lt __ __1) x
                          (matita_arithmetics_nat.times m n))
                       (__ :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x a m)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x b n))
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) x
                                  (matita_arithmetics_nat.times m n))) =>
                        (A : cic.Univ (cic.type cic.z) =>
                         _P :
                           cic.Term (cic.type cic.z)
                             (cic.prod (cic.type cic.z) (cic.type cic.z) A
                                (__1 : cic.Term (cic.type cic.z) A =>
                                 cic.univ cic.prop)) =>
                         matita_basics_logic.ex
                           (cic.lift (cic.type cic.z) (cic.type cic.z) A) _P)
                          (cic.lift (cic.type cic.z) (cic.type cic.z)
                             matita_arithmetics_nat.nat)
                          (i :
                             cic.Term (cic.type cic.z)
                               matita_arithmetics_nat.nat =>
                           cic.lift cic.prop cic.prop
                             ((_A : cic.Univ cic.prop =>
                               _B : cic.Univ cic.prop =>
                               matita_basics_logic.And _A _B)
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __1)
                                      matita_arithmetics_nat.O i)
                                   ((__1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __2 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __1 __2) i
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m n)
                                         matita_arithmetics_nat.O)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __1 :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __1)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_basics_bool.bool)
                                   (matita_basics_bool.andb
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            i m)
                                         a)
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            i n)
                                         b))
                                   matita_basics_bool.true))))
                       (_clearme0 :
                          cic.Term cic.prop
                            ((_A : cic.Univ cic.prop =>
                              _B : cic.Univ cic.prop =>
                              matita_basics_logic.And _A _B)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x a m)
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x b n)) =>
                        matita_basics_logic.match_And cic.prop
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             x a m)
                          ((_n :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _m :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            _p :
                              cic.Term (cic.type cic.z)
                                matita_arithmetics_nat.nat =>
                            matita_arithmetics_congruence.congruent _n _m _p)
                             x b n)
                          (__ :
                             cic.Term cic.prop
                               ((_A : cic.Univ cic.prop =>
                                 _B : cic.Univ cic.prop =>
                                 matita_basics_logic.And _A _B)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x a m)
                                  ((_n :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _m :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    _p :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_congruence.congruent
                                      _n _m _p)
                                     x b n)) =>
                           cic.prod cic.prop cic.prop
                             ((__1 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               __2 :
                                 cic.Term (cic.type cic.z)
                                   matita_arithmetics_nat.nat =>
                               matita_arithmetics_nat.lt __1 __2) x
                                (matita_arithmetics_nat.times m n))
                             (__1 :
                                cic.Term cic.prop
                                  ((__1 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    __2 :
                                      cic.Term (cic.type cic.z)
                                        matita_arithmetics_nat.nat =>
                                    matita_arithmetics_nat.lt __1 __2) x
                                     (matita_arithmetics_nat.times m n)) =>
                              (A : cic.Univ (cic.type cic.z) =>
                               _P :
                                 cic.Term (cic.type cic.z)
                                   (cic.prod (cic.type cic.z)
                                      (cic.type cic.z) A
                                      (__2 : cic.Term (cic.type cic.z) A =>
                                       cic.univ cic.prop)) =>
                               matita_basics_logic.ex
                                 (cic.lift (cic.type cic.z) (cic.type cic.z)
                                    A)
                                 _P)
                                (cic.lift (cic.type cic.z) (cic.type cic.z)
                                   matita_arithmetics_nat.nat)
                                (i :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 cic.lift cic.prop cic.prop
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_A : cic.Univ cic.prop =>
                                        _B : cic.Univ cic.prop =>
                                        matita_basics_logic.And _A _B)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __2 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __2)
                                            matita_arithmetics_nat.O i)
                                         ((__2 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __3 :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.lt __2 __3)
                                            i
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               matita_arithmetics_nat.O)))
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __2 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __2)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         (matita_basics_bool.andb
                                            (matita_arithmetics_nat.eqb
                                               (matita_arithmetics_div_and_mod.mod
                                                  i m)
                                               a)
                                            (matita_arithmetics_nat.eqb
                                               (matita_arithmetics_div_and_mod.mod
                                                  i n)
                                               b))
                                         matita_basics_bool.true)))))
                          (cxa :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x a m) =>
                           cxb :
                             cic.Term cic.prop
                               ((_n :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _m :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 _p :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_congruence.congruent _n
                                   _m _p)
                                  x b n) =>
                           ltx :
                             cic.Term cic.prop
                               ((__ :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 __1 :
                                   cic.Term (cic.type cic.z)
                                     matita_arithmetics_nat.nat =>
                                 matita_arithmetics_nat.lt __ __1) x
                                  (matita_arithmetics_nat.times m n)) =>
                           matita_basics_logic.ex_intro
                             (cic.lift (cic.type cic.z) (cic.type cic.z)
                                matita_arithmetics_nat.nat)
                             (i :
                                cic.Term (cic.type cic.z)
                                  matita_arithmetics_nat.nat =>
                              cic.lift cic.prop cic.prop
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_A : cic.Univ cic.prop =>
                                     _B : cic.Univ cic.prop =>
                                     matita_basics_logic.And _A _B)
                                      ((_n :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.le _n __)
                                         matita_arithmetics_nat.O i)
                                      ((__ :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        __1 :
                                          cic.Term (cic.type cic.z)
                                            matita_arithmetics_nat.nat =>
                                        matita_arithmetics_nat.lt __ __1) i
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O)))
                                   ((A :
                                       cic.Univ
                                         (cic.type (cic.s (cic.s cic.z))) =>
                                     _x :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     __ :
                                       cic.Term
                                         (cic.type (cic.s (cic.s cic.z))) A =>
                                     matita_basics_logic.eq
                                       (cic.lift
                                          (cic.type (cic.s (cic.s cic.z)))
                                          (cic.type (cic.s (cic.s cic.z))) A)
                                       _x __)
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      (matita_basics_bool.andb
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               i m)
                                            a)
                                         (matita_arithmetics_nat.eqb
                                            (matita_arithmetics_div_and_mod.mod
                                               i n)
                                            b))
                                      matita_basics_bool.true)))
                             x
                             (matita_basics_logic.conj
                                ((_A : cic.Univ cic.prop =>
                                  _B : cic.Univ cic.prop =>
                                  matita_basics_logic.And _A _B)
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      matita_arithmetics_nat.O x)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) x
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m n)
                                         matita_arithmetics_nat.O)))
                                ((A :
                                    cic.Univ (cic.type (cic.s (cic.s cic.z))) =>
                                  _x :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  __ :
                                    cic.Term (cic.type (cic.s (cic.s cic.z)))
                                      A =>
                                  matita_basics_logic.eq
                                    (cic.lift
                                       (cic.type (cic.s (cic.s cic.z)))
                                       (cic.type (cic.s (cic.s cic.z))) A)
                                    _x __)
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_basics_bool.bool)
                                   (matita_basics_bool.andb
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            x m)
                                         a)
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            x n)
                                         b))
                                   matita_basics_bool.true)
                                (matita_basics_logic.conj
                                   ((_n :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.le _n __)
                                      matita_arithmetics_nat.O x)
                                   ((__ :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     __1 :
                                       cic.Term (cic.type cic.z)
                                         matita_arithmetics_nat.nat =>
                                     matita_arithmetics_nat.lt __ __1) x
                                      (matita_arithmetics_nat.plus
                                         (matita_arithmetics_nat.times m n)
                                         matita_arithmetics_nat.O))
                                   (matita_arithmetics_nat.le_O_n x)
                                   (matita_basics_logic.eq_coerc
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.S x)
                                            (matita_arithmetics_nat.times m n)))
                                      (cic.lift cic.prop (cic.type cic.z)
                                         ((_n :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           __ :
                                             cic.Term (cic.type cic.z)
                                               matita_arithmetics_nat.nat =>
                                           matita_arithmetics_nat.le _n __)
                                            (matita_arithmetics_nat.S x)
                                            (matita_arithmetics_nat.plus
                                               (matita_arithmetics_nat.times
                                                  m n)
                                               matita_arithmetics_nat.O)))
                                      ltx
                                      (matita_basics_logic.rewrite_r
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_nat.plus
                                            matita_arithmetics_nat.O
                                            (matita_arithmetics_nat.times m n))
                                         (x0 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          cic.lift cic.prop
                                            (cic.type (cic.s (cic.s cic.z)))
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.univ (cic.type cic.z)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.S
                                                        x)
                                                     (matita_arithmetics_nat.times
                                                        m n)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.S
                                                        x)
                                                     x0))))
                                         (matita_basics_logic.rewrite_l
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_nat.times m n)
                                            (x0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift
                                                     (cic.type (cic.s cic.z))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.univ
                                                        (cic.type cic.z)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           x)
                                                        (matita_arithmetics_nat.times
                                                           m n)))
                                                  (cic.lift cic.prop
                                                     (cic.type cic.z)
                                                     ((_n :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       __ :
                                                         cic.Term
                                                           (cic.type cic.z)
                                                           matita_arithmetics_nat.nat =>
                                                       matita_arithmetics_nat.le
                                                         _n __)
                                                        (matita_arithmetics_nat.S
                                                           x)
                                                        x0))))
                                            (matita_basics_logic.refl
                                               (cic.lift
                                                  (cic.type (cic.s cic.z))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.univ (cic.type cic.z)))
                                               (cic.lift cic.prop
                                                  (cic.type cic.z)
                                                  ((_n :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type cic.z)
                                                        matita_arithmetics_nat.nat =>
                                                    matita_arithmetics_nat.le
                                                      _n __)
                                                     (matita_arithmetics_nat.S
                                                        x)
                                                     (matita_arithmetics_nat.times
                                                        m n))))
                                            (matita_arithmetics_nat.plus
                                               matita_arithmetics_nat.O
                                               (matita_arithmetics_nat.times
                                                  m n))
                                            (matita_arithmetics_nat.plus_O_n
                                               (matita_arithmetics_nat.times
                                                  m n)))
                                         (matita_arithmetics_nat.plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O)
                                         (matita_arithmetics_nat.commutative_plus
                                            (matita_arithmetics_nat.times m n)
                                            matita_arithmetics_nat.O))))
                                (matita_basics_logic.eq_ind_r
                                   (cic.lift (cic.type cic.z)
                                      (cic.type (cic.s (cic.s cic.z)))
                                      matita_basics_bool.bool)
                                   matita_basics_bool.true
                                   (x0 :
                                      cic.Term (cic.type cic.z)
                                        matita_basics_bool.bool =>
                                    __ :
                                      cic.Term cic.prop
                                        ((A :
                                            cic.Univ
                                              (cic.type (cic.s (cic.s cic.z))) =>
                                          _x :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          __ :
                                            cic.Term
                                              (cic.type (cic.s (cic.s cic.z)))
                                              A =>
                                          matita_basics_logic.eq
                                            (cic.lift
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A)
                                            _x __)
                                           (cic.lift (cic.type cic.z)
                                              (cic.type (cic.s (cic.s cic.z)))
                                              matita_basics_bool.bool)
                                           x0 matita_basics_bool.true) =>
                                    cic.lift cic.prop cic.prop
                                      ((A :
                                          cic.Univ
                                            (cic.type (cic.s (cic.s cic.z))) =>
                                        _x :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        __1 :
                                          cic.Term
                                            (cic.type (cic.s (cic.s cic.z)))
                                            A =>
                                        matita_basics_logic.eq
                                          (cic.lift
                                             (cic.type (cic.s (cic.s cic.z)))
                                             (cic.type (cic.s (cic.s cic.z)))
                                             A)
                                          _x __1)
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         (matita_basics_bool.andb x0
                                            (matita_arithmetics_nat.eqb
                                               (matita_arithmetics_div_and_mod.mod
                                                  x n)
                                               b))
                                         matita_basics_bool.true))
                                   (matita_basics_logic.eq_ind_r
                                      (cic.lift (cic.type cic.z)
                                         (cic.type (cic.s (cic.s cic.z)))
                                         matita_basics_bool.bool)
                                      matita_basics_bool.true
                                      (x0 :
                                         cic.Term (cic.type cic.z)
                                           matita_basics_bool.bool =>
                                       __ :
                                         cic.Term cic.prop
                                           ((A :
                                               cic.Univ
                                                 (cic.type
                                                    (cic.s (cic.s cic.z))) =>
                                             _x :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             __ :
                                               cic.Term
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 A =>
                                             matita_basics_logic.eq
                                               (cic.lift
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A)
                                               _x __)
                                              (cic.lift (cic.type cic.z)
                                                 (cic.type
                                                    (cic.s (cic.s cic.z)))
                                                 matita_basics_bool.bool)
                                              x0 matita_basics_bool.true) =>
                                       cic.lift cic.prop cic.prop
                                         ((A :
                                             cic.Univ
                                               (cic.type
                                                  (cic.s (cic.s cic.z))) =>
                                           _x :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           __1 :
                                             cic.Term
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               A =>
                                           matita_basics_logic.eq
                                             (cic.lift
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                (cic.type
                                                   (cic.s (cic.s cic.z)))
                                                A)
                                             _x __1)
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_basics_bool.bool)
                                            (matita_basics_bool.andb
                                               matita_basics_bool.true x0)
                                            matita_basics_bool.true))
                                      (matita_basics_logic.refl
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_basics_bool.bool)
                                         (matita_basics_bool.andb
                                            matita_basics_bool.true
                                            matita_basics_bool.true))
                                      (matita_arithmetics_nat.eqb
                                         (matita_arithmetics_div_and_mod.mod
                                            x n)
                                         b)
                                      (matita_arithmetics_nat.eq_to_eqb_true
                                         (matita_arithmetics_div_and_mod.mod
                                            x n)
                                         b
                                         (matita_basics_logic.eq_ind
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_div_and_mod.mod
                                               b n)
                                            (x_1 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             _x_2 :
                                               cic.Term cic.prop
                                                 ((A :
                                                     cic.Univ
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z))) =>
                                                   _x :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   __ :
                                                     cic.Term
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       A =>
                                                   matita_basics_logic.eq
                                                     (cic.lift
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A)
                                                     _x __)
                                                    (cic.lift
                                                       (cic.type cic.z)
                                                       (cic.type
                                                          (cic.s
                                                             (cic.s cic.z)))
                                                       matita_arithmetics_nat.nat)
                                                    (matita_arithmetics_div_and_mod.mod
                                                       b n)
                                                    x_1) =>
                                             cic.lift cic.prop cic.prop
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     x n)
                                                  x_1))
                                            (matita_basics_logic.rewrite_r
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_div_and_mod.mod
                                                  b n)
                                               (x0 :
                                                  cic.Term (cic.type cic.z)
                                                    matita_arithmetics_nat.nat =>
                                                cic.lift cic.prop
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  ((A :
                                                      cic.Univ
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z))) =>
                                                    _x :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    __ :
                                                      cic.Term
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        A =>
                                                    matita_basics_logic.eq
                                                      (cic.lift
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         (cic.type
                                                            (cic.s
                                                               (cic.s cic.z)))
                                                         A)
                                                      _x __)
                                                     (cic.lift
                                                        (cic.type cic.z)
                                                        (cic.type
                                                           (cic.s
                                                              (cic.s cic.z)))
                                                        matita_arithmetics_nat.nat)
                                                     x0
                                                     (matita_arithmetics_div_and_mod.mod
                                                        b n)))
                                               (matita_basics_logic.refl
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  (matita_arithmetics_div_and_mod.mod
                                                     b n))
                                               (matita_arithmetics_div_and_mod.mod
                                                  x n)
                                               cxb)
                                            b
                                            (matita_arithmetics_div_and_mod.lt_to_eq_mod
                                               b n ltbn))))
                                   (matita_arithmetics_nat.eqb
                                      (matita_arithmetics_div_and_mod.mod x m)
                                      a)
                                   (matita_arithmetics_nat.eq_to_eqb_true
                                      (matita_arithmetics_div_and_mod.mod x m)
                                      a
                                      (matita_basics_logic.eq_ind
                                         (cic.lift (cic.type cic.z)
                                            (cic.type (cic.s (cic.s cic.z)))
                                            matita_arithmetics_nat.nat)
                                         (matita_arithmetics_div_and_mod.mod
                                            a m)
                                         (x_1 :
                                            cic.Term (cic.type cic.z)
                                              matita_arithmetics_nat.nat =>
                                          _x_2 :
                                            cic.Term cic.prop
                                              ((A :
                                                  cic.Univ
                                                    (cic.type
                                                       (cic.s (cic.s cic.z))) =>
                                                _x :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                __ :
                                                  cic.Term
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    A =>
                                                matita_basics_logic.eq
                                                  (cic.lift
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A)
                                                  _x __)
                                                 (cic.lift (cic.type cic.z)
                                                    (cic.type
                                                       (cic.s (cic.s cic.z)))
                                                    matita_arithmetics_nat.nat)
                                                 (matita_arithmetics_div_and_mod.mod
                                                    a m)
                                                 x_1) =>
                                          cic.lift cic.prop cic.prop
                                            ((A :
                                                cic.Univ
                                                  (cic.type
                                                     (cic.s (cic.s cic.z))) =>
                                              _x :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              __ :
                                                cic.Term
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  A =>
                                              matita_basics_logic.eq
                                                (cic.lift
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   (cic.type
                                                      (cic.s (cic.s cic.z)))
                                                   A)
                                                _x __)
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_div_and_mod.mod
                                                  x m)
                                               x_1))
                                         (matita_basics_logic.rewrite_r
                                            (cic.lift (cic.type cic.z)
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               matita_arithmetics_nat.nat)
                                            (matita_arithmetics_div_and_mod.mod
                                               a m)
                                            (x0 :
                                               cic.Term (cic.type cic.z)
                                                 matita_arithmetics_nat.nat =>
                                             cic.lift cic.prop
                                               (cic.type
                                                  (cic.s (cic.s cic.z)))
                                               ((A :
                                                   cic.Univ
                                                     (cic.type
                                                        (cic.s (cic.s cic.z))) =>
                                                 _x :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 __ :
                                                   cic.Term
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     A =>
                                                 matita_basics_logic.eq
                                                   (cic.lift
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      (cic.type
                                                         (cic.s (cic.s cic.z)))
                                                      A)
                                                   _x __)
                                                  (cic.lift (cic.type cic.z)
                                                     (cic.type
                                                        (cic.s (cic.s cic.z)))
                                                     matita_arithmetics_nat.nat)
                                                  x0
                                                  (matita_arithmetics_div_and_mod.mod
                                                     a m)))
                                            (matita_basics_logic.refl
                                               (cic.lift (cic.type cic.z)
                                                  (cic.type
                                                     (cic.s (cic.s cic.z)))
                                                  matita_arithmetics_nat.nat)
                                               (matita_arithmetics_div_and_mod.mod
                                                  a m))
                                            (matita_arithmetics_div_and_mod.mod
                                               x m)
                                            cxa)
                                         a
                                         (matita_arithmetics_div_and_mod.lt_to_eq_mod
                                            a m ltam))))))
                          _clearme0)
                       _clearme)
                    (matita_arithmetics_chinese_reminder.congruent_ab_lt m n
                       a b
                       (matita_arithmetics_nat.le_to_lt_to_lt
                          matita_arithmetics_nat.O b n
                          (matita_arithmetics_nat.le_O_n b) ltbn)
                       (matita_arithmetics_nat.le_to_lt_to_lt
                          matita_arithmetics_nat.O a m
                          (matita_arithmetics_nat.le_O_n a) ltam)
                       pnm))))).


